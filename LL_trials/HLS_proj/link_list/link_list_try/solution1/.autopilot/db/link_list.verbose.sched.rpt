

================================================================
== Vivado HLS Report for 'link_list'
================================================================
* Date:           Fri May 22 17:21:28 2020

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        link_list_try
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|        24|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 34
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / (!tmp)
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	11  / true
* FSM state operations: 

 <State 1>: 1.00ns
ST_1: a_read (3)  [1/1] 1.00ns
:0  %a_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %a)

ST_1: a1 (4)  [1/1] 0.00ns
:1  %a1 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %a_read, i32 3, i32 31)


 <State 2>: 8.75ns
ST_2: tmp_1 (5)  [1/1] 0.00ns
:2  %tmp_1 = zext i29 %a1 to i32

ST_2: A_BUS_addr (6)  [1/1] 0.00ns
:3  %A_BUS_addr = getelementptr i64* %A_BUS, i32 %tmp_1

ST_2: A_BUS_load_req (12)  [7/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 3>: 8.75ns
ST_3: A_BUS_load_req (12)  [6/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 4>: 8.75ns
ST_4: A_BUS_load_req (12)  [5/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 5>: 8.75ns
ST_5: A_BUS_load_req (12)  [4/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 6>: 8.75ns
ST_6: A_BUS_load_req (12)  [3/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 7>: 8.75ns
ST_7: A_BUS_load_req (12)  [2/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 8>: 8.75ns
ST_8: A_BUS_load_req (12)  [1/7] 8.75ns  loc: link_list.cpp:21
:9  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 9>: 8.75ns
ST_9: A_BUS_addr_read (13)  [1/1] 8.75ns  loc: link_list.cpp:21
:10  %A_BUS_addr_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %A_BUS_addr)

ST_9: curr_offs_new9 (14)  [1/1] 0.00ns  loc: link_list.cpp:21
:11  %curr_offs_new9 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %A_BUS_addr_read, i32 32, i32 63)


 <State 10>: 1.57ns
ST_10: StgValue_48 (7)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i64* %A_BUS), !map !22

ST_10: StgValue_49 (8)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @link_list_str) nounwind

ST_10: StgValue_50 (9)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecInterface(i64* %A_BUS, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 500, [6 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_10: StgValue_51 (10)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i32 %a, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 500, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_10: StgValue_52 (11)  [1/1] 0.00ns  loc: link_list.cpp:14
:8  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [4 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_10: StgValue_53 (15)  [1/1] 1.57ns  loc: link_list.cpp:22
:12  br label %1


 <State 11>: 2.52ns
ST_11: cum_offs (17)  [1/1] 0.00ns
:0  %cum_offs = phi i32 [ 0, %0 ], [ %cum_offs_1, %2 ]

ST_11: curr_offs (18)  [1/1] 0.00ns  loc: link_list.cpp:21
:1  %curr_offs = phi i32 [ %curr_offs_new9, %0 ], [ %curr_offs_1_new, %2 ]

ST_11: tmp (19)  [1/1] 2.52ns  loc: link_list.cpp:22
:2  %tmp = icmp eq i32 %curr_offs, 0

ST_11: StgValue_57 (20)  [1/1] 0.00ns  loc: link_list.cpp:22
:3  br i1 %tmp, label %3, label %2

ST_11: a2_sum (22)  [1/1] 2.44ns  loc: link_list.cpp:24
:0  %a2_sum = add i32 %cum_offs, %tmp_1

ST_11: StgValue_59 (41)  [1/1] 0.00ns  loc: link_list.cpp:32
:0  ret void


 <State 12>: 8.75ns
ST_12: A_BUS_addr_1 (23)  [1/1] 0.00ns  loc: link_list.cpp:24
:1  %A_BUS_addr_1 = getelementptr i64* %A_BUS, i32 %a2_sum

ST_12: A_BUS_load_1_req (24)  [7/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 13>: 8.75ns
ST_13: A_BUS_load_1_req (24)  [6/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 14>: 8.75ns
ST_14: A_BUS_load_1_req (24)  [5/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 15>: 8.75ns
ST_15: A_BUS_load_1_req (24)  [4/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 16>: 8.75ns
ST_16: A_BUS_load_1_req (24)  [3/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 17>: 8.75ns
ST_17: A_BUS_load_1_req (24)  [2/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 18>: 8.75ns
ST_18: A_BUS_load_1_req (24)  [1/7] 8.75ns  loc: link_list.cpp:24
:2  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 19>: 8.75ns
ST_19: A_BUS_addr_1_read (25)  [1/1] 8.75ns  loc: link_list.cpp:24
:3  %A_BUS_addr_1_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %A_BUS_addr_1)

ST_19: temp (26)  [1/1] 0.00ns  loc: link_list.cpp:24
:4  %temp = trunc i64 %A_BUS_addr_1_read to i32

ST_19: a_offs_load_new (27)  [1/1] 0.00ns  loc: link_list.cpp:24
:5  %a_offs_load_new = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %A_BUS_addr_1_read, i32 32, i32 63)


 <State 20>: 8.75ns
ST_20: temp_1 (28)  [1/1] 2.44ns  loc: link_list.cpp:26
:6  %temp_1 = add nsw i32 20, %temp

ST_20: A_BUS_addr_1_req (30)  [1/1] 8.75ns  loc: link_list.cpp:27
:8  %A_BUS_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_20: cum_offs_1 (33)  [1/1] 2.44ns  loc: link_list.cpp:29
:11  %cum_offs_1 = add nsw i32 %cum_offs, %a_offs_load_new

ST_20: a2_sum3 (34)  [1/1] 2.44ns  loc: link_list.cpp:30
:12  %a2_sum3 = add i32 %cum_offs_1, %tmp_1


 <State 21>: 8.75ns
ST_21: a_val_addr56_part_se (29)  [1/1] 0.00ns  loc: link_list.cpp:27
:7  %a_val_addr56_part_se = zext i32 %temp_1 to i64

ST_21: StgValue_76 (31)  [1/1] 8.75ns  loc: link_list.cpp:27
:9  call void @_ssdm_op_Write.m_axi.i64P(i64* %A_BUS_addr_1, i64 %a_val_addr56_part_se, i8 15)


 <State 22>: 8.75ns
ST_22: A_BUS_addr_1_resp (32)  [5/5] 8.75ns  loc: link_list.cpp:27
:10  %A_BUS_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %A_BUS_addr_1)


 <State 23>: 8.75ns
ST_23: A_BUS_addr_1_resp (32)  [4/5] 8.75ns  loc: link_list.cpp:27
:10  %A_BUS_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %A_BUS_addr_1)


 <State 24>: 8.75ns
ST_24: A_BUS_addr_1_resp (32)  [3/5] 8.75ns  loc: link_list.cpp:27
:10  %A_BUS_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %A_BUS_addr_1)


 <State 25>: 8.75ns
ST_25: A_BUS_addr_1_resp (32)  [2/5] 8.75ns  loc: link_list.cpp:27
:10  %A_BUS_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %A_BUS_addr_1)


 <State 26>: 8.75ns
ST_26: A_BUS_addr_1_resp (32)  [1/5] 8.75ns  loc: link_list.cpp:27
:10  %A_BUS_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i64P(i64* %A_BUS_addr_1)


 <State 27>: 8.75ns
ST_27: A_BUS_addr_2 (35)  [1/1] 0.00ns  loc: link_list.cpp:30
:13  %A_BUS_addr_2 = getelementptr i64* %A_BUS, i32 %a2_sum3

ST_27: A_BUS_load_2_req (36)  [7/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 28>: 8.75ns
ST_28: A_BUS_load_2_req (36)  [6/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 29>: 8.75ns
ST_29: A_BUS_load_2_req (36)  [5/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 30>: 8.75ns
ST_30: A_BUS_load_2_req (36)  [4/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 31>: 8.75ns
ST_31: A_BUS_load_2_req (36)  [3/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 32>: 8.75ns
ST_32: A_BUS_load_2_req (36)  [2/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 33>: 8.75ns
ST_33: A_BUS_load_2_req (36)  [1/7] 8.75ns  loc: link_list.cpp:30
:14  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 34>: 8.75ns
ST_34: A_BUS_addr_2_read (37)  [1/1] 8.75ns  loc: link_list.cpp:30
:15  %A_BUS_addr_2_read = call i64 @_ssdm_op_Read.m_axi.i64P(i64* %A_BUS_addr_2)

ST_34: curr_offs_1_new (38)  [1/1] 0.00ns  loc: link_list.cpp:30
:16  %curr_offs_1_new = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %A_BUS_addr_2_read, i32 32, i32 63)

ST_34: StgValue_92 (39)  [1/1] 0.00ns  loc: link_list.cpp:31
:17  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'a' [3]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr') [6]  (0 ns)
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:21) [12]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (link_list.cpp:21) [13]  (8.75 ns)

 <State 10>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('cum_offs') with incoming values : ('cum_offs', link_list.cpp:29) [17]  (1.57 ns)

 <State 11>: 2.52ns
The critical path consists of the following:
	'phi' operation ('curr_offs', link_list.cpp:21) with incoming values : ('curr_offs_new9', link_list.cpp:21) ('curr_offs_1_new', link_list.cpp:30) [18]  (0 ns)
	'icmp' operation ('tmp', link_list.cpp:22) [19]  (2.52 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr_1', link_list.cpp:24) [23]  (0 ns)
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:24) [24]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (link_list.cpp:24) [25]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:27) [30]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus write on port 'A_BUS' (link_list.cpp:27) [31]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (link_list.cpp:27) [32]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (link_list.cpp:27) [32]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (link_list.cpp:27) [32]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (link_list.cpp:27) [32]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (link_list.cpp:27) [32]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr_2', link_list.cpp:30) [35]  (0 ns)
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 31>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 32>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 33>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (link_list.cpp:30) [36]  (8.75 ns)

 <State 34>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (link_list.cpp:30) [37]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
