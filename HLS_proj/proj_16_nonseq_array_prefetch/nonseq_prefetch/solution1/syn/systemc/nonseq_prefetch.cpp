// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "nonseq_prefetch.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic nonseq_prefetch::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic nonseq_prefetch::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> nonseq_prefetch::ap_ST_fsm_state1 = "1";
const sc_lv<3> nonseq_prefetch::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> nonseq_prefetch::ap_ST_fsm_state11 = "100";
const sc_lv<32> nonseq_prefetch::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> nonseq_prefetch::ap_const_lv1_1 = "1";
const sc_lv<32> nonseq_prefetch::ap_const_lv32_1 = "1";
const sc_lv<1> nonseq_prefetch::ap_const_lv1_0 = "0";
const int nonseq_prefetch::C_S_AXI_DATA_WIDTH = "100000";
const int nonseq_prefetch::C_M_AXI_DATA_WIDTH = "100000";
const int nonseq_prefetch::C_M_AXI_A_BUS_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int nonseq_prefetch::C_M_AXI_A_BUS_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int nonseq_prefetch::C_M_AXI_A_BUS_CACHE_VALUE = "11";
const sc_lv<9> nonseq_prefetch::ap_const_lv9_1 = "1";
const sc_lv<21> nonseq_prefetch::ap_const_lv21_0 = "000000000000000000000";
const sc_lv<3> nonseq_prefetch::ap_const_lv3_0 = "000";
const sc_lv<2> nonseq_prefetch::ap_const_lv2_0 = "00";
const sc_lv<4> nonseq_prefetch::ap_const_lv4_0 = "0000";
const sc_lv<32> nonseq_prefetch::ap_const_lv32_2 = "10";
const sc_lv<32> nonseq_prefetch::ap_const_lv32_1F = "11111";
const sc_lv<9> nonseq_prefetch::ap_const_lv9_1F5 = "111110101";
const bool nonseq_prefetch::ap_const_boolean_1 = true;

nonseq_prefetch::nonseq_prefetch(sc_module_name name) : sc_module(name), mVcdFile(0) {
    nonseq_prefetch_CFG_s_axi_U = new nonseq_prefetch_CFG_s_axi<C_S_AXI_CFG_ADDR_WIDTH,C_S_AXI_CFG_DATA_WIDTH>("nonseq_prefetch_CFG_s_axi_U");
    nonseq_prefetch_CFG_s_axi_U->AWVALID(s_axi_CFG_AWVALID);
    nonseq_prefetch_CFG_s_axi_U->AWREADY(s_axi_CFG_AWREADY);
    nonseq_prefetch_CFG_s_axi_U->AWADDR(s_axi_CFG_AWADDR);
    nonseq_prefetch_CFG_s_axi_U->WVALID(s_axi_CFG_WVALID);
    nonseq_prefetch_CFG_s_axi_U->WREADY(s_axi_CFG_WREADY);
    nonseq_prefetch_CFG_s_axi_U->WDATA(s_axi_CFG_WDATA);
    nonseq_prefetch_CFG_s_axi_U->WSTRB(s_axi_CFG_WSTRB);
    nonseq_prefetch_CFG_s_axi_U->ARVALID(s_axi_CFG_ARVALID);
    nonseq_prefetch_CFG_s_axi_U->ARREADY(s_axi_CFG_ARREADY);
    nonseq_prefetch_CFG_s_axi_U->ARADDR(s_axi_CFG_ARADDR);
    nonseq_prefetch_CFG_s_axi_U->RVALID(s_axi_CFG_RVALID);
    nonseq_prefetch_CFG_s_axi_U->RREADY(s_axi_CFG_RREADY);
    nonseq_prefetch_CFG_s_axi_U->RDATA(s_axi_CFG_RDATA);
    nonseq_prefetch_CFG_s_axi_U->RRESP(s_axi_CFG_RRESP);
    nonseq_prefetch_CFG_s_axi_U->BVALID(s_axi_CFG_BVALID);
    nonseq_prefetch_CFG_s_axi_U->BREADY(s_axi_CFG_BREADY);
    nonseq_prefetch_CFG_s_axi_U->BRESP(s_axi_CFG_BRESP);
    nonseq_prefetch_CFG_s_axi_U->ACLK(ap_clk);
    nonseq_prefetch_CFG_s_axi_U->ARESET(ap_rst_n_inv);
    nonseq_prefetch_CFG_s_axi_U->ACLK_EN(ap_var_for_const0);
    nonseq_prefetch_CFG_s_axi_U->ap_start(ap_start);
    nonseq_prefetch_CFG_s_axi_U->interrupt(interrupt);
    nonseq_prefetch_CFG_s_axi_U->ap_ready(ap_ready);
    nonseq_prefetch_CFG_s_axi_U->ap_done(ap_done);
    nonseq_prefetch_CFG_s_axi_U->ap_idle(ap_idle);
    nonseq_prefetch_CFG_s_axi_U->a(a);
    nonseq_prefetch_A_BUS_m_axi_U = new nonseq_prefetch_A_BUS_m_axi<32,32,5,32,16,2,16,C_M_AXI_A_BUS_ID_WIDTH,C_M_AXI_A_BUS_ADDR_WIDTH,C_M_AXI_A_BUS_DATA_WIDTH,C_M_AXI_A_BUS_AWUSER_WIDTH,C_M_AXI_A_BUS_ARUSER_WIDTH,C_M_AXI_A_BUS_WUSER_WIDTH,C_M_AXI_A_BUS_RUSER_WIDTH,C_M_AXI_A_BUS_BUSER_WIDTH,C_M_AXI_A_BUS_USER_VALUE,C_M_AXI_A_BUS_PROT_VALUE,C_M_AXI_A_BUS_CACHE_VALUE>("nonseq_prefetch_A_BUS_m_axi_U");
    nonseq_prefetch_A_BUS_m_axi_U->AWVALID(m_axi_A_BUS_AWVALID);
    nonseq_prefetch_A_BUS_m_axi_U->AWREADY(m_axi_A_BUS_AWREADY);
    nonseq_prefetch_A_BUS_m_axi_U->AWADDR(m_axi_A_BUS_AWADDR);
    nonseq_prefetch_A_BUS_m_axi_U->AWID(m_axi_A_BUS_AWID);
    nonseq_prefetch_A_BUS_m_axi_U->AWLEN(m_axi_A_BUS_AWLEN);
    nonseq_prefetch_A_BUS_m_axi_U->AWSIZE(m_axi_A_BUS_AWSIZE);
    nonseq_prefetch_A_BUS_m_axi_U->AWBURST(m_axi_A_BUS_AWBURST);
    nonseq_prefetch_A_BUS_m_axi_U->AWLOCK(m_axi_A_BUS_AWLOCK);
    nonseq_prefetch_A_BUS_m_axi_U->AWCACHE(m_axi_A_BUS_AWCACHE);
    nonseq_prefetch_A_BUS_m_axi_U->AWPROT(m_axi_A_BUS_AWPROT);
    nonseq_prefetch_A_BUS_m_axi_U->AWQOS(m_axi_A_BUS_AWQOS);
    nonseq_prefetch_A_BUS_m_axi_U->AWREGION(m_axi_A_BUS_AWREGION);
    nonseq_prefetch_A_BUS_m_axi_U->AWUSER(m_axi_A_BUS_AWUSER);
    nonseq_prefetch_A_BUS_m_axi_U->WVALID(m_axi_A_BUS_WVALID);
    nonseq_prefetch_A_BUS_m_axi_U->WREADY(m_axi_A_BUS_WREADY);
    nonseq_prefetch_A_BUS_m_axi_U->WDATA(m_axi_A_BUS_WDATA);
    nonseq_prefetch_A_BUS_m_axi_U->WSTRB(m_axi_A_BUS_WSTRB);
    nonseq_prefetch_A_BUS_m_axi_U->WLAST(m_axi_A_BUS_WLAST);
    nonseq_prefetch_A_BUS_m_axi_U->WID(m_axi_A_BUS_WID);
    nonseq_prefetch_A_BUS_m_axi_U->WUSER(m_axi_A_BUS_WUSER);
    nonseq_prefetch_A_BUS_m_axi_U->ARVALID(m_axi_A_BUS_ARVALID);
    nonseq_prefetch_A_BUS_m_axi_U->ARREADY(m_axi_A_BUS_ARREADY);
    nonseq_prefetch_A_BUS_m_axi_U->ARADDR(m_axi_A_BUS_ARADDR);
    nonseq_prefetch_A_BUS_m_axi_U->ARID(m_axi_A_BUS_ARID);
    nonseq_prefetch_A_BUS_m_axi_U->ARLEN(m_axi_A_BUS_ARLEN);
    nonseq_prefetch_A_BUS_m_axi_U->ARSIZE(m_axi_A_BUS_ARSIZE);
    nonseq_prefetch_A_BUS_m_axi_U->ARBURST(m_axi_A_BUS_ARBURST);
    nonseq_prefetch_A_BUS_m_axi_U->ARLOCK(m_axi_A_BUS_ARLOCK);
    nonseq_prefetch_A_BUS_m_axi_U->ARCACHE(m_axi_A_BUS_ARCACHE);
    nonseq_prefetch_A_BUS_m_axi_U->ARPROT(m_axi_A_BUS_ARPROT);
    nonseq_prefetch_A_BUS_m_axi_U->ARQOS(m_axi_A_BUS_ARQOS);
    nonseq_prefetch_A_BUS_m_axi_U->ARREGION(m_axi_A_BUS_ARREGION);
    nonseq_prefetch_A_BUS_m_axi_U->ARUSER(m_axi_A_BUS_ARUSER);
    nonseq_prefetch_A_BUS_m_axi_U->RVALID(m_axi_A_BUS_RVALID);
    nonseq_prefetch_A_BUS_m_axi_U->RREADY(m_axi_A_BUS_RREADY);
    nonseq_prefetch_A_BUS_m_axi_U->RDATA(m_axi_A_BUS_RDATA);
    nonseq_prefetch_A_BUS_m_axi_U->RLAST(m_axi_A_BUS_RLAST);
    nonseq_prefetch_A_BUS_m_axi_U->RID(m_axi_A_BUS_RID);
    nonseq_prefetch_A_BUS_m_axi_U->RUSER(m_axi_A_BUS_RUSER);
    nonseq_prefetch_A_BUS_m_axi_U->RRESP(m_axi_A_BUS_RRESP);
    nonseq_prefetch_A_BUS_m_axi_U->BVALID(m_axi_A_BUS_BVALID);
    nonseq_prefetch_A_BUS_m_axi_U->BREADY(m_axi_A_BUS_BREADY);
    nonseq_prefetch_A_BUS_m_axi_U->BRESP(m_axi_A_BUS_BRESP);
    nonseq_prefetch_A_BUS_m_axi_U->BID(m_axi_A_BUS_BID);
    nonseq_prefetch_A_BUS_m_axi_U->BUSER(m_axi_A_BUS_BUSER);
    nonseq_prefetch_A_BUS_m_axi_U->ACLK(ap_clk);
    nonseq_prefetch_A_BUS_m_axi_U->ARESET(ap_rst_n_inv);
    nonseq_prefetch_A_BUS_m_axi_U->ACLK_EN(ap_var_for_const0);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARVALID(A_BUS_ARVALID);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARREADY(A_BUS_ARREADY);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARADDR(a2_sum_cast_fu_167_p1);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARID(ap_var_for_const1);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARLEN(ap_var_for_const2);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARSIZE(ap_var_for_const3);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARLOCK(ap_var_for_const4);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARCACHE(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARQOS(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARPROT(ap_var_for_const3);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARUSER(ap_var_for_const1);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARBURST(ap_var_for_const4);
    nonseq_prefetch_A_BUS_m_axi_U->I_ARREGION(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_RVALID(A_BUS_RVALID);
    nonseq_prefetch_A_BUS_m_axi_U->I_RREADY(A_BUS_RREADY);
    nonseq_prefetch_A_BUS_m_axi_U->I_RDATA(A_BUS_RDATA);
    nonseq_prefetch_A_BUS_m_axi_U->I_RID(A_BUS_RID);
    nonseq_prefetch_A_BUS_m_axi_U->I_RUSER(A_BUS_RUSER);
    nonseq_prefetch_A_BUS_m_axi_U->I_RRESP(A_BUS_RRESP);
    nonseq_prefetch_A_BUS_m_axi_U->I_RLAST(A_BUS_RLAST);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWVALID(ap_var_for_const6);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWREADY(A_BUS_AWREADY);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWADDR(ap_var_for_const7);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWID(ap_var_for_const1);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWLEN(ap_var_for_const7);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWSIZE(ap_var_for_const3);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWLOCK(ap_var_for_const4);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWCACHE(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWQOS(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWPROT(ap_var_for_const3);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWUSER(ap_var_for_const1);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWBURST(ap_var_for_const4);
    nonseq_prefetch_A_BUS_m_axi_U->I_AWREGION(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_WVALID(ap_var_for_const6);
    nonseq_prefetch_A_BUS_m_axi_U->I_WREADY(A_BUS_WREADY);
    nonseq_prefetch_A_BUS_m_axi_U->I_WDATA(ap_var_for_const7);
    nonseq_prefetch_A_BUS_m_axi_U->I_WID(ap_var_for_const1);
    nonseq_prefetch_A_BUS_m_axi_U->I_WUSER(ap_var_for_const1);
    nonseq_prefetch_A_BUS_m_axi_U->I_WLAST(ap_var_for_const6);
    nonseq_prefetch_A_BUS_m_axi_U->I_WSTRB(ap_var_for_const5);
    nonseq_prefetch_A_BUS_m_axi_U->I_BVALID(A_BUS_BVALID);
    nonseq_prefetch_A_BUS_m_axi_U->I_BREADY(ap_var_for_const6);
    nonseq_prefetch_A_BUS_m_axi_U->I_BRESP(A_BUS_BRESP);
    nonseq_prefetch_A_BUS_m_axi_U->I_BID(A_BUS_BID);
    nonseq_prefetch_A_BUS_m_axi_U->I_BUSER(A_BUS_BUSER);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_BUS_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_A_BUS_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_A_BUS_blk_n_AR);
    sensitive << ( m_axi_A_BUS_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );

    SC_METHOD(thread_A_BUS_blk_n_R);
    sensitive << ( m_axi_A_BUS_RVALID );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );

    SC_METHOD(thread_a2_sum_cast_fu_167_p1);
    sensitive << ( a2_sum_reg_186 );

    SC_METHOD(thread_a2_sum_fu_138_p2);
    sensitive << ( tmp_2_cast_reg_177 );
    sensitive << ( i_cast_cast_fu_134_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_230);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_ap_condition_358);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );
    sensitive << ( A_BUS_ARREADY );
    sensitive << ( A_BUS_RVALID );

    SC_METHOD(thread_ap_condition_90);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_A_BUS_ARREADY);
    sensitive << ( A_BUS_ARREADY );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_exitcond_fu_128_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( k_reg_92 );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_1_fu_155_p2);
    sensitive << ( i_reg_103 );
    sensitive << ( tmp_cast_fu_151_p1 );

    SC_METHOD(thread_i_cast_cast_fu_134_p1);
    sensitive << ( i_reg_103 );

    SC_METHOD(thread_phitmp_fu_161_p2);
    sensitive << ( k_reg_92 );

    SC_METHOD(thread_tmp_2_cast_fu_124_p1);
    sensitive << ( tmp_2_fu_114_p4 );

    SC_METHOD(thread_tmp_2_fu_114_p4);
    sensitive << ( a );

    SC_METHOD(thread_tmp_cast_fu_151_p1);
    sensitive << ( tmp_fu_143_p3 );

    SC_METHOD(thread_tmp_fu_143_p3);
    sensitive << ( k_reg_92 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_182 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_pipeline_reg_pp0_iter7_exitcond_reg_182 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( exitcond_fu_128_p2 );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_reg_ioackin_A_BUS_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "nonseq_prefetch_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_A_BUS_AWVALID, "(port)m_axi_A_BUS_AWVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_AWREADY, "(port)m_axi_A_BUS_AWREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_AWADDR, "(port)m_axi_A_BUS_AWADDR");
    sc_trace(mVcdFile, m_axi_A_BUS_AWID, "(port)m_axi_A_BUS_AWID");
    sc_trace(mVcdFile, m_axi_A_BUS_AWLEN, "(port)m_axi_A_BUS_AWLEN");
    sc_trace(mVcdFile, m_axi_A_BUS_AWSIZE, "(port)m_axi_A_BUS_AWSIZE");
    sc_trace(mVcdFile, m_axi_A_BUS_AWBURST, "(port)m_axi_A_BUS_AWBURST");
    sc_trace(mVcdFile, m_axi_A_BUS_AWLOCK, "(port)m_axi_A_BUS_AWLOCK");
    sc_trace(mVcdFile, m_axi_A_BUS_AWCACHE, "(port)m_axi_A_BUS_AWCACHE");
    sc_trace(mVcdFile, m_axi_A_BUS_AWPROT, "(port)m_axi_A_BUS_AWPROT");
    sc_trace(mVcdFile, m_axi_A_BUS_AWQOS, "(port)m_axi_A_BUS_AWQOS");
    sc_trace(mVcdFile, m_axi_A_BUS_AWREGION, "(port)m_axi_A_BUS_AWREGION");
    sc_trace(mVcdFile, m_axi_A_BUS_AWUSER, "(port)m_axi_A_BUS_AWUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_WVALID, "(port)m_axi_A_BUS_WVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_WREADY, "(port)m_axi_A_BUS_WREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_WDATA, "(port)m_axi_A_BUS_WDATA");
    sc_trace(mVcdFile, m_axi_A_BUS_WSTRB, "(port)m_axi_A_BUS_WSTRB");
    sc_trace(mVcdFile, m_axi_A_BUS_WLAST, "(port)m_axi_A_BUS_WLAST");
    sc_trace(mVcdFile, m_axi_A_BUS_WID, "(port)m_axi_A_BUS_WID");
    sc_trace(mVcdFile, m_axi_A_BUS_WUSER, "(port)m_axi_A_BUS_WUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_ARVALID, "(port)m_axi_A_BUS_ARVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_ARREADY, "(port)m_axi_A_BUS_ARREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_ARADDR, "(port)m_axi_A_BUS_ARADDR");
    sc_trace(mVcdFile, m_axi_A_BUS_ARID, "(port)m_axi_A_BUS_ARID");
    sc_trace(mVcdFile, m_axi_A_BUS_ARLEN, "(port)m_axi_A_BUS_ARLEN");
    sc_trace(mVcdFile, m_axi_A_BUS_ARSIZE, "(port)m_axi_A_BUS_ARSIZE");
    sc_trace(mVcdFile, m_axi_A_BUS_ARBURST, "(port)m_axi_A_BUS_ARBURST");
    sc_trace(mVcdFile, m_axi_A_BUS_ARLOCK, "(port)m_axi_A_BUS_ARLOCK");
    sc_trace(mVcdFile, m_axi_A_BUS_ARCACHE, "(port)m_axi_A_BUS_ARCACHE");
    sc_trace(mVcdFile, m_axi_A_BUS_ARPROT, "(port)m_axi_A_BUS_ARPROT");
    sc_trace(mVcdFile, m_axi_A_BUS_ARQOS, "(port)m_axi_A_BUS_ARQOS");
    sc_trace(mVcdFile, m_axi_A_BUS_ARREGION, "(port)m_axi_A_BUS_ARREGION");
    sc_trace(mVcdFile, m_axi_A_BUS_ARUSER, "(port)m_axi_A_BUS_ARUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_RVALID, "(port)m_axi_A_BUS_RVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_RREADY, "(port)m_axi_A_BUS_RREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_RDATA, "(port)m_axi_A_BUS_RDATA");
    sc_trace(mVcdFile, m_axi_A_BUS_RLAST, "(port)m_axi_A_BUS_RLAST");
    sc_trace(mVcdFile, m_axi_A_BUS_RID, "(port)m_axi_A_BUS_RID");
    sc_trace(mVcdFile, m_axi_A_BUS_RUSER, "(port)m_axi_A_BUS_RUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_RRESP, "(port)m_axi_A_BUS_RRESP");
    sc_trace(mVcdFile, m_axi_A_BUS_BVALID, "(port)m_axi_A_BUS_BVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_BREADY, "(port)m_axi_A_BUS_BREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_BRESP, "(port)m_axi_A_BUS_BRESP");
    sc_trace(mVcdFile, m_axi_A_BUS_BID, "(port)m_axi_A_BUS_BID");
    sc_trace(mVcdFile, m_axi_A_BUS_BUSER, "(port)m_axi_A_BUS_BUSER");
    sc_trace(mVcdFile, s_axi_CFG_AWVALID, "(port)s_axi_CFG_AWVALID");
    sc_trace(mVcdFile, s_axi_CFG_AWREADY, "(port)s_axi_CFG_AWREADY");
    sc_trace(mVcdFile, s_axi_CFG_AWADDR, "(port)s_axi_CFG_AWADDR");
    sc_trace(mVcdFile, s_axi_CFG_WVALID, "(port)s_axi_CFG_WVALID");
    sc_trace(mVcdFile, s_axi_CFG_WREADY, "(port)s_axi_CFG_WREADY");
    sc_trace(mVcdFile, s_axi_CFG_WDATA, "(port)s_axi_CFG_WDATA");
    sc_trace(mVcdFile, s_axi_CFG_WSTRB, "(port)s_axi_CFG_WSTRB");
    sc_trace(mVcdFile, s_axi_CFG_ARVALID, "(port)s_axi_CFG_ARVALID");
    sc_trace(mVcdFile, s_axi_CFG_ARREADY, "(port)s_axi_CFG_ARREADY");
    sc_trace(mVcdFile, s_axi_CFG_ARADDR, "(port)s_axi_CFG_ARADDR");
    sc_trace(mVcdFile, s_axi_CFG_RVALID, "(port)s_axi_CFG_RVALID");
    sc_trace(mVcdFile, s_axi_CFG_RREADY, "(port)s_axi_CFG_RREADY");
    sc_trace(mVcdFile, s_axi_CFG_RDATA, "(port)s_axi_CFG_RDATA");
    sc_trace(mVcdFile, s_axi_CFG_RRESP, "(port)s_axi_CFG_RRESP");
    sc_trace(mVcdFile, s_axi_CFG_BVALID, "(port)s_axi_CFG_BVALID");
    sc_trace(mVcdFile, s_axi_CFG_BREADY, "(port)s_axi_CFG_BREADY");
    sc_trace(mVcdFile, s_axi_CFG_BRESP, "(port)s_axi_CFG_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, a, "a");
    sc_trace(mVcdFile, A_BUS_blk_n_AR, "A_BUS_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, exitcond_reg_182, "exitcond_reg_182");
    sc_trace(mVcdFile, A_BUS_blk_n_R, "A_BUS_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_exitcond_reg_182, "ap_pipeline_reg_pp0_iter7_exitcond_reg_182");
    sc_trace(mVcdFile, A_BUS_AWREADY, "A_BUS_AWREADY");
    sc_trace(mVcdFile, A_BUS_WREADY, "A_BUS_WREADY");
    sc_trace(mVcdFile, A_BUS_ARVALID, "A_BUS_ARVALID");
    sc_trace(mVcdFile, A_BUS_ARREADY, "A_BUS_ARREADY");
    sc_trace(mVcdFile, A_BUS_RVALID, "A_BUS_RVALID");
    sc_trace(mVcdFile, A_BUS_RREADY, "A_BUS_RREADY");
    sc_trace(mVcdFile, A_BUS_RDATA, "A_BUS_RDATA");
    sc_trace(mVcdFile, A_BUS_RLAST, "A_BUS_RLAST");
    sc_trace(mVcdFile, A_BUS_RID, "A_BUS_RID");
    sc_trace(mVcdFile, A_BUS_RUSER, "A_BUS_RUSER");
    sc_trace(mVcdFile, A_BUS_RRESP, "A_BUS_RRESP");
    sc_trace(mVcdFile, A_BUS_BVALID, "A_BUS_BVALID");
    sc_trace(mVcdFile, A_BUS_BRESP, "A_BUS_BRESP");
    sc_trace(mVcdFile, A_BUS_BID, "A_BUS_BID");
    sc_trace(mVcdFile, A_BUS_BUSER, "A_BUS_BUSER");
    sc_trace(mVcdFile, k_reg_92, "k_reg_92");
    sc_trace(mVcdFile, i_reg_103, "i_reg_103");
    sc_trace(mVcdFile, tmp_2_cast_fu_124_p1, "tmp_2_cast_fu_124_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_177, "tmp_2_cast_reg_177");
    sc_trace(mVcdFile, exitcond_fu_128_p2, "exitcond_fu_128_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_A_BUS_ARREADY, "ap_sig_ioackin_A_BUS_ARREADY");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_reg_182, "ap_pipeline_reg_pp0_iter1_exitcond_reg_182");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_reg_182, "ap_pipeline_reg_pp0_iter2_exitcond_reg_182");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_reg_182, "ap_pipeline_reg_pp0_iter3_exitcond_reg_182");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_reg_182, "ap_pipeline_reg_pp0_iter4_exitcond_reg_182");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_reg_182, "ap_pipeline_reg_pp0_iter5_exitcond_reg_182");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_exitcond_reg_182, "ap_pipeline_reg_pp0_iter6_exitcond_reg_182");
    sc_trace(mVcdFile, a2_sum_fu_138_p2, "a2_sum_fu_138_p2");
    sc_trace(mVcdFile, a2_sum_reg_186, "a2_sum_reg_186");
    sc_trace(mVcdFile, i_1_fu_155_p2, "i_1_fu_155_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, phitmp_fu_161_p2, "phitmp_fu_161_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, a2_sum_cast_fu_167_p1, "a2_sum_cast_fu_167_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_A_BUS_ARREADY, "ap_reg_ioackin_A_BUS_ARREADY");
    sc_trace(mVcdFile, tmp_2_fu_114_p4, "tmp_2_fu_114_p4");
    sc_trace(mVcdFile, i_cast_cast_fu_134_p1, "i_cast_cast_fu_134_p1");
    sc_trace(mVcdFile, tmp_fu_143_p3, "tmp_fu_143_p3");
    sc_trace(mVcdFile, tmp_cast_fu_151_p1, "tmp_cast_fu_151_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_358, "ap_condition_358");
    sc_trace(mVcdFile, ap_condition_230, "ap_condition_230");
    sc_trace(mVcdFile, ap_condition_90, "ap_condition_90");
#endif

    }
    mHdltvinHandle.open("nonseq_prefetch.hdltvin.dat");
    mHdltvoutHandle.open("nonseq_prefetch.hdltvout.dat");
}

nonseq_prefetch::~nonseq_prefetch() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete nonseq_prefetch_CFG_s_axi_U;
    delete nonseq_prefetch_A_BUS_m_axi_U;
}

void nonseq_prefetch::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void nonseq_prefetch::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void nonseq_prefetch::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void nonseq_prefetch::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void nonseq_prefetch::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void nonseq_prefetch::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void nonseq_prefetch::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void nonseq_prefetch::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void nonseq_prefetch::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_condition_90.read(), ap_const_boolean_1)) {
            if (esl_seteq<1,1,1>(ap_condition_230.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_condition_358.read(), ap_const_boolean_1)) {
                ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_103 = i_1_fu_155_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_103 = ap_const_lv21_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        k_reg_92 = phitmp_fu_161_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        k_reg_92 = ap_const_lv9_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()))) {
        a2_sum_reg_186 = a2_sum_fu_138_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))))) {
        ap_pipeline_reg_pp0_iter1_exitcond_reg_182 = exitcond_reg_182.read();
        exitcond_reg_182 = exitcond_fu_128_p2.read();
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
        ap_pipeline_reg_pp0_iter2_exitcond_reg_182 = ap_pipeline_reg_pp0_iter1_exitcond_reg_182.read();
        ap_pipeline_reg_pp0_iter3_exitcond_reg_182 = ap_pipeline_reg_pp0_iter2_exitcond_reg_182.read();
        ap_pipeline_reg_pp0_iter4_exitcond_reg_182 = ap_pipeline_reg_pp0_iter3_exitcond_reg_182.read();
        ap_pipeline_reg_pp0_iter5_exitcond_reg_182 = ap_pipeline_reg_pp0_iter4_exitcond_reg_182.read();
        ap_pipeline_reg_pp0_iter6_exitcond_reg_182 = ap_pipeline_reg_pp0_iter5_exitcond_reg_182.read();
        ap_pipeline_reg_pp0_iter7_exitcond_reg_182 = ap_pipeline_reg_pp0_iter6_exitcond_reg_182.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_2_cast_reg_177 = tmp_2_cast_fu_124_p1.read();
    }
}

void nonseq_prefetch::thread_A_BUS_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read()))) {
        A_BUS_ARVALID = ap_const_logic_1;
    } else {
        A_BUS_ARVALID = ap_const_logic_0;
    }
}

void nonseq_prefetch::thread_A_BUS_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))))) {
        A_BUS_RREADY = ap_const_logic_1;
    } else {
        A_BUS_RREADY = ap_const_logic_0;
    }
}

void nonseq_prefetch::thread_A_BUS_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0))) {
        A_BUS_blk_n_AR = m_axi_A_BUS_ARREADY.read();
    } else {
        A_BUS_blk_n_AR = ap_const_logic_1;
    }
}

void nonseq_prefetch::thread_A_BUS_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()))) {
        A_BUS_blk_n_R = m_axi_A_BUS_RVALID.read();
    } else {
        A_BUS_blk_n_R = ap_const_logic_1;
    }
}

void nonseq_prefetch::thread_a2_sum_cast_fu_167_p1() {
    a2_sum_cast_fu_167_p1 = esl_zext<32,31>(a2_sum_reg_186.read());
}

void nonseq_prefetch::thread_a2_sum_fu_138_p2() {
    a2_sum_fu_138_p2 = (!i_cast_cast_fu_134_p1.read().is_01() || !tmp_2_cast_reg_177.read().is_01())? sc_lv<31>(): (sc_biguint<31>(i_cast_cast_fu_134_p1.read()) + sc_biguint<31>(tmp_2_cast_reg_177.read()));
}

void nonseq_prefetch::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(1, 1);
}

void nonseq_prefetch::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void nonseq_prefetch::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(2, 2);
}

void nonseq_prefetch::thread_ap_condition_230() {
    ap_condition_230 = !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)));
}

void nonseq_prefetch::thread_ap_condition_358() {
    ap_condition_358 = (esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)));
}

void nonseq_prefetch::thread_ap_condition_90() {
    ap_condition_90 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0));
}

void nonseq_prefetch::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void nonseq_prefetch::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void nonseq_prefetch::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void nonseq_prefetch::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void nonseq_prefetch::thread_ap_sig_ioackin_A_BUS_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) {
        ap_sig_ioackin_A_BUS_ARREADY = A_BUS_ARREADY.read();
    } else {
        ap_sig_ioackin_A_BUS_ARREADY = ap_const_logic_1;
    }
}

void nonseq_prefetch::thread_exitcond_fu_128_p2() {
    exitcond_fu_128_p2 = (!k_reg_92.read().is_01() || !ap_const_lv9_1F5.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_92.read() == ap_const_lv9_1F5);
}

void nonseq_prefetch::thread_i_1_fu_155_p2() {
    i_1_fu_155_p2 = (!tmp_cast_fu_151_p1.read().is_01() || !i_reg_103.read().is_01())? sc_lv<21>(): (sc_biguint<21>(tmp_cast_fu_151_p1.read()) + sc_biguint<21>(i_reg_103.read()));
}

void nonseq_prefetch::thread_i_cast_cast_fu_134_p1() {
    i_cast_cast_fu_134_p1 = esl_zext<31,21>(i_reg_103.read());
}

void nonseq_prefetch::thread_phitmp_fu_161_p2() {
    phitmp_fu_161_p2 = (!k_reg_92.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(k_reg_92.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void nonseq_prefetch::thread_tmp_2_cast_fu_124_p1() {
    tmp_2_cast_fu_124_p1 = esl_zext<31,30>(tmp_2_fu_114_p4.read());
}

void nonseq_prefetch::thread_tmp_2_fu_114_p4() {
    tmp_2_fu_114_p4 = a.read().range(31, 2);
}

void nonseq_prefetch::thread_tmp_cast_fu_151_p1() {
    tmp_cast_fu_151_p1 = esl_zext<21,12>(tmp_fu_143_p3.read());
}

void nonseq_prefetch::thread_tmp_fu_143_p3() {
    tmp_fu_143_p3 = esl_concat<9,3>(k_reg_92.read(), ap_const_lv3_0);
}

void nonseq_prefetch::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) && !(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())) || (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(exitcond_reg_182.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter7_exitcond_reg_182.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_128_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void nonseq_prefetch::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_A_BUS_AWVALID\" :  \"" << m_axi_A_BUS_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_AWREADY\" :  \"" << m_axi_A_BUS_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWADDR\" :  \"" << m_axi_A_BUS_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWID\" :  \"" << m_axi_A_BUS_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWLEN\" :  \"" << m_axi_A_BUS_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWSIZE\" :  \"" << m_axi_A_BUS_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWBURST\" :  \"" << m_axi_A_BUS_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWLOCK\" :  \"" << m_axi_A_BUS_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWCACHE\" :  \"" << m_axi_A_BUS_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWPROT\" :  \"" << m_axi_A_BUS_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWQOS\" :  \"" << m_axi_A_BUS_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWREGION\" :  \"" << m_axi_A_BUS_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWUSER\" :  \"" << m_axi_A_BUS_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WVALID\" :  \"" << m_axi_A_BUS_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_WREADY\" :  \"" << m_axi_A_BUS_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WDATA\" :  \"" << m_axi_A_BUS_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WSTRB\" :  \"" << m_axi_A_BUS_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WLAST\" :  \"" << m_axi_A_BUS_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WID\" :  \"" << m_axi_A_BUS_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WUSER\" :  \"" << m_axi_A_BUS_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARVALID\" :  \"" << m_axi_A_BUS_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_ARREADY\" :  \"" << m_axi_A_BUS_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARADDR\" :  \"" << m_axi_A_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARID\" :  \"" << m_axi_A_BUS_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARLEN\" :  \"" << m_axi_A_BUS_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARSIZE\" :  \"" << m_axi_A_BUS_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARBURST\" :  \"" << m_axi_A_BUS_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARLOCK\" :  \"" << m_axi_A_BUS_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARCACHE\" :  \"" << m_axi_A_BUS_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARPROT\" :  \"" << m_axi_A_BUS_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARQOS\" :  \"" << m_axi_A_BUS_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARREGION\" :  \"" << m_axi_A_BUS_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARUSER\" :  \"" << m_axi_A_BUS_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RVALID\" :  \"" << m_axi_A_BUS_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_RREADY\" :  \"" << m_axi_A_BUS_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RDATA\" :  \"" << m_axi_A_BUS_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RLAST\" :  \"" << m_axi_A_BUS_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RID\" :  \"" << m_axi_A_BUS_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RUSER\" :  \"" << m_axi_A_BUS_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RRESP\" :  \"" << m_axi_A_BUS_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BVALID\" :  \"" << m_axi_A_BUS_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_BREADY\" :  \"" << m_axi_A_BUS_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BRESP\" :  \"" << m_axi_A_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BID\" :  \"" << m_axi_A_BUS_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BUSER\" :  \"" << m_axi_A_BUS_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_AWVALID\" :  \"" << s_axi_CFG_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_AWREADY\" :  \"" << s_axi_CFG_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_AWADDR\" :  \"" << s_axi_CFG_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WVALID\" :  \"" << s_axi_CFG_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_WREADY\" :  \"" << s_axi_CFG_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WDATA\" :  \"" << s_axi_CFG_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WSTRB\" :  \"" << s_axi_CFG_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_ARVALID\" :  \"" << s_axi_CFG_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_ARREADY\" :  \"" << s_axi_CFG_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_ARADDR\" :  \"" << s_axi_CFG_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RVALID\" :  \"" << s_axi_CFG_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_RREADY\" :  \"" << s_axi_CFG_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RDATA\" :  \"" << s_axi_CFG_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RRESP\" :  \"" << s_axi_CFG_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_BVALID\" :  \"" << s_axi_CFG_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_BREADY\" :  \"" << s_axi_CFG_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_BRESP\" :  \"" << s_axi_CFG_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

