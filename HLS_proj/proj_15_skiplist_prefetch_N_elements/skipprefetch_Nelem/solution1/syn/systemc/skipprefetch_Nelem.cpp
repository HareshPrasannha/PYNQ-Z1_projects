// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "skipprefetch_Nelem.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic skipprefetch_Nelem::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic skipprefetch_Nelem::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state1 = "1";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state2 = "10";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state3 = "100";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state4 = "1000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state5 = "10000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state6 = "100000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_pp0_stage0 = "1000000000000";
const sc_lv<14> skipprefetch_Nelem::ap_ST_fsm_state24 = "10000000000000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> skipprefetch_Nelem::ap_const_lv1_1 = "1";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2 = "10";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_9 = "1001";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_3 = "11";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_A = "1010";
const sc_lv<1> skipprefetch_Nelem::ap_const_lv1_0 = "0";
const int skipprefetch_Nelem::C_S_AXI_DATA_WIDTH = "100000";
const int skipprefetch_Nelem::C_M_AXI_DATA_WIDTH = "100000";
const int skipprefetch_Nelem::C_M_AXI_A_BUS_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int skipprefetch_Nelem::C_M_AXI_A_BUS_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int skipprefetch_Nelem::C_M_AXI_A_BUS_CACHE_VALUE = "11";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_1 = "1";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_B = "1011";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_C = "1100";
const sc_lv<6> skipprefetch_Nelem::ap_const_lv6_0 = "000000";
const sc_lv<22> skipprefetch_Nelem::ap_const_lv22_0 = "0000000000000000000000";
const sc_lv<10> skipprefetch_Nelem::ap_const_lv10_0 = "0000000000";
const sc_lv<6> skipprefetch_Nelem::ap_const_lv6_1 = "1";
const sc_lv<3> skipprefetch_Nelem::ap_const_lv3_0 = "000";
const sc_lv<2> skipprefetch_Nelem::ap_const_lv2_0 = "00";
const sc_lv<4> skipprefetch_Nelem::ap_const_lv4_0 = "0000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_20 = "100000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2F = "101111";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_1F = "11111";
const sc_lv<6> skipprefetch_Nelem::ap_const_lv6_32 = "110010";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_30 = "110000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_3F = "111111";
const sc_lv<10> skipprefetch_Nelem::ap_const_lv10_3A3 = "1110100011";
const sc_lv<10> skipprefetch_Nelem::ap_const_lv10_1 = "1";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_D = "1101";
const sc_lv<64> skipprefetch_Nelem::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> skipprefetch_Nelem::ap_const_lv8_0 = "00000000";
const bool skipprefetch_Nelem::ap_const_boolean_1 = true;

skipprefetch_Nelem::skipprefetch_Nelem(sc_module_name name) : sc_module(name), mVcdFile(0) {
    skipprefetch_Nelem_CFG_s_axi_U = new skipprefetch_Nelem_CFG_s_axi<C_S_AXI_CFG_ADDR_WIDTH,C_S_AXI_CFG_DATA_WIDTH>("skipprefetch_Nelem_CFG_s_axi_U");
    skipprefetch_Nelem_CFG_s_axi_U->AWVALID(s_axi_CFG_AWVALID);
    skipprefetch_Nelem_CFG_s_axi_U->AWREADY(s_axi_CFG_AWREADY);
    skipprefetch_Nelem_CFG_s_axi_U->AWADDR(s_axi_CFG_AWADDR);
    skipprefetch_Nelem_CFG_s_axi_U->WVALID(s_axi_CFG_WVALID);
    skipprefetch_Nelem_CFG_s_axi_U->WREADY(s_axi_CFG_WREADY);
    skipprefetch_Nelem_CFG_s_axi_U->WDATA(s_axi_CFG_WDATA);
    skipprefetch_Nelem_CFG_s_axi_U->WSTRB(s_axi_CFG_WSTRB);
    skipprefetch_Nelem_CFG_s_axi_U->ARVALID(s_axi_CFG_ARVALID);
    skipprefetch_Nelem_CFG_s_axi_U->ARREADY(s_axi_CFG_ARREADY);
    skipprefetch_Nelem_CFG_s_axi_U->ARADDR(s_axi_CFG_ARADDR);
    skipprefetch_Nelem_CFG_s_axi_U->RVALID(s_axi_CFG_RVALID);
    skipprefetch_Nelem_CFG_s_axi_U->RREADY(s_axi_CFG_RREADY);
    skipprefetch_Nelem_CFG_s_axi_U->RDATA(s_axi_CFG_RDATA);
    skipprefetch_Nelem_CFG_s_axi_U->RRESP(s_axi_CFG_RRESP);
    skipprefetch_Nelem_CFG_s_axi_U->BVALID(s_axi_CFG_BVALID);
    skipprefetch_Nelem_CFG_s_axi_U->BREADY(s_axi_CFG_BREADY);
    skipprefetch_Nelem_CFG_s_axi_U->BRESP(s_axi_CFG_BRESP);
    skipprefetch_Nelem_CFG_s_axi_U->ACLK(ap_clk);
    skipprefetch_Nelem_CFG_s_axi_U->ARESET(ap_rst_n_inv);
    skipprefetch_Nelem_CFG_s_axi_U->ACLK_EN(ap_var_for_const0);
    skipprefetch_Nelem_CFG_s_axi_U->ap_start(ap_start);
    skipprefetch_Nelem_CFG_s_axi_U->interrupt(interrupt);
    skipprefetch_Nelem_CFG_s_axi_U->ap_ready(ap_ready);
    skipprefetch_Nelem_CFG_s_axi_U->ap_done(ap_done);
    skipprefetch_Nelem_CFG_s_axi_U->ap_idle(ap_idle);
    skipprefetch_Nelem_CFG_s_axi_U->a(a);
    skipprefetch_Nelem_A_BUS_m_axi_U = new skipprefetch_Nelem_A_BUS_m_axi<64,32,5,16,16,16,16,C_M_AXI_A_BUS_ID_WIDTH,C_M_AXI_A_BUS_ADDR_WIDTH,C_M_AXI_A_BUS_DATA_WIDTH,C_M_AXI_A_BUS_AWUSER_WIDTH,C_M_AXI_A_BUS_ARUSER_WIDTH,C_M_AXI_A_BUS_WUSER_WIDTH,C_M_AXI_A_BUS_RUSER_WIDTH,C_M_AXI_A_BUS_BUSER_WIDTH,C_M_AXI_A_BUS_USER_VALUE,C_M_AXI_A_BUS_PROT_VALUE,C_M_AXI_A_BUS_CACHE_VALUE>("skipprefetch_Nelem_A_BUS_m_axi_U");
    skipprefetch_Nelem_A_BUS_m_axi_U->AWVALID(m_axi_A_BUS_AWVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWREADY(m_axi_A_BUS_AWREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWADDR(m_axi_A_BUS_AWADDR);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWID(m_axi_A_BUS_AWID);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWLEN(m_axi_A_BUS_AWLEN);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWSIZE(m_axi_A_BUS_AWSIZE);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWBURST(m_axi_A_BUS_AWBURST);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWLOCK(m_axi_A_BUS_AWLOCK);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWCACHE(m_axi_A_BUS_AWCACHE);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWPROT(m_axi_A_BUS_AWPROT);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWQOS(m_axi_A_BUS_AWQOS);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWREGION(m_axi_A_BUS_AWREGION);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWUSER(m_axi_A_BUS_AWUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->WVALID(m_axi_A_BUS_WVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->WREADY(m_axi_A_BUS_WREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->WDATA(m_axi_A_BUS_WDATA);
    skipprefetch_Nelem_A_BUS_m_axi_U->WSTRB(m_axi_A_BUS_WSTRB);
    skipprefetch_Nelem_A_BUS_m_axi_U->WLAST(m_axi_A_BUS_WLAST);
    skipprefetch_Nelem_A_BUS_m_axi_U->WID(m_axi_A_BUS_WID);
    skipprefetch_Nelem_A_BUS_m_axi_U->WUSER(m_axi_A_BUS_WUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARVALID(m_axi_A_BUS_ARVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARREADY(m_axi_A_BUS_ARREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARADDR(m_axi_A_BUS_ARADDR);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARID(m_axi_A_BUS_ARID);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARLEN(m_axi_A_BUS_ARLEN);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARSIZE(m_axi_A_BUS_ARSIZE);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARBURST(m_axi_A_BUS_ARBURST);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARLOCK(m_axi_A_BUS_ARLOCK);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARCACHE(m_axi_A_BUS_ARCACHE);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARPROT(m_axi_A_BUS_ARPROT);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARQOS(m_axi_A_BUS_ARQOS);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARREGION(m_axi_A_BUS_ARREGION);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARUSER(m_axi_A_BUS_ARUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->RVALID(m_axi_A_BUS_RVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->RREADY(m_axi_A_BUS_RREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->RDATA(m_axi_A_BUS_RDATA);
    skipprefetch_Nelem_A_BUS_m_axi_U->RLAST(m_axi_A_BUS_RLAST);
    skipprefetch_Nelem_A_BUS_m_axi_U->RID(m_axi_A_BUS_RID);
    skipprefetch_Nelem_A_BUS_m_axi_U->RUSER(m_axi_A_BUS_RUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->RRESP(m_axi_A_BUS_RRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->BVALID(m_axi_A_BUS_BVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->BREADY(m_axi_A_BUS_BREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->BRESP(m_axi_A_BUS_BRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->BID(m_axi_A_BUS_BID);
    skipprefetch_Nelem_A_BUS_m_axi_U->BUSER(m_axi_A_BUS_BUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->ACLK(ap_clk);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARESET(ap_rst_n_inv);
    skipprefetch_Nelem_A_BUS_m_axi_U->ACLK_EN(ap_var_for_const0);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARVALID(A_BUS_ARVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARREADY(A_BUS_ARREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARADDR(A_BUS_ARADDR);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARID(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARLEN(ap_var_for_const2);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARSIZE(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARLOCK(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARCACHE(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARQOS(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARPROT(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARUSER(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARBURST(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARREGION(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RVALID(A_BUS_RVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RREADY(A_BUS_RREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RDATA(A_BUS_RDATA);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RID(A_BUS_RID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RUSER(A_BUS_RUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RRESP(A_BUS_RRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RLAST(A_BUS_RLAST);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWVALID(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWREADY(A_BUS_AWREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWADDR(ap_var_for_const7);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWID(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWLEN(ap_var_for_const7);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWSIZE(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWLOCK(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWCACHE(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWQOS(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWPROT(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWUSER(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWBURST(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWREGION(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WVALID(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WREADY(A_BUS_WREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WDATA(ap_var_for_const8);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WID(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WUSER(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WLAST(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WSTRB(ap_var_for_const9);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BVALID(A_BUS_BVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BREADY(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BRESP(A_BUS_BRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BID(A_BUS_BID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BUSER(A_BUS_BUSER);
    buff_U = new skipprefetch_Nelebkb("buff_U");
    buff_U->clk(ap_clk);
    buff_U->reset(ap_rst_n_inv);
    buff_U->address0(buff_address0);
    buff_U->ce0(buff_ce0);
    buff_U->we0(buff_we0);
    buff_U->d0(buff_d0);
    buff_U->q0(buff_q0);
    buff_U->address1(ap_pipeline_reg_pp0_iter9_buff_addr_1_reg_387);
    buff_U->ce1(buff_ce1);
    buff_U->we1(buff_we1);
    buff_U->d1(buff_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_BUS_ARADDR);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( A_BUS_addr_reg_362 );
    sensitive << ( a2_sum3_reg_403 );
    sensitive << ( a2_sum_cast_fu_231_p1 );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_condition_428 );

    SC_METHOD(thread_A_BUS_ARVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_A_BUS_RREADY);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_A_BUS_blk_n_AR);
    sensitive << ( m_axi_A_BUS_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );

    SC_METHOD(thread_A_BUS_blk_n_R);
    sensitive << ( m_axi_A_BUS_RVALID );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );

    SC_METHOD(thread_a1_fu_188_p4);
    sensitive << ( a );

    SC_METHOD(thread_a2_sum3_fu_312_p2);
    sensitive << ( tmp_reg_333 );
    sensitive << ( buff_q0 );

    SC_METHOD(thread_a2_sum_cast_fu_231_p1);
    sensitive << ( a2_sum_reg_357 );

    SC_METHOD(thread_a2_sum_fu_226_p2);
    sensitive << ( tmp_cast6_reg_338 );
    sensitive << ( cum_offs_cast4_cast_fu_222_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_428);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_A_BUS_ARREADY);
    sensitive << ( A_BUS_ARREADY );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_buff_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_cast2_reg_343 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i1_cast1_fu_301_p1 );

    SC_METHOD(thread_buff_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_buff_ce1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_buff_d0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_1_fu_245_p2 );

    SC_METHOD(thread_buff_d1);
    sensitive << ( ap_pipeline_reg_pp0_iter9_buff_load_reg_398 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( tmp_6_fu_323_p1 );

    SC_METHOD(thread_buff_we0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( A_BUS_RVALID );

    SC_METHOD(thread_buff_we1);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_METHOD(thread_cum_offs_1_fu_269_p2);
    sensitive << ( cum_offs_reg_140 );
    sensitive << ( tmp_2_cast_fu_266_p1 );

    SC_METHOD(thread_cum_offs_cast4_cast_fu_222_p1);
    sensitive << ( cum_offs_reg_140 );

    SC_METHOD(thread_exitcond2_fu_210_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_129 );

    SC_METHOD(thread_exitcond5_fu_287_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( i1_reg_163 );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( exitcond_flatten_fu_275_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_275_p2);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( indvar_flatten_reg_152 );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i1_cast1_fu_301_p1);
    sensitive << ( i1_mid2_fu_293_p3 );

    SC_METHOD(thread_i1_mid2_fu_293_p3);
    sensitive << ( i1_reg_163 );
    sensitive << ( exitcond5_fu_287_p2 );

    SC_METHOD(thread_i_1_fu_216_p2);
    sensitive << ( i_reg_129 );

    SC_METHOD(thread_i_2_fu_306_p2);
    sensitive << ( i1_mid2_fu_293_p3 );

    SC_METHOD(thread_i_cast2_fu_206_p1);
    sensitive << ( i_reg_129 );

    SC_METHOD(thread_indvar_flatten_next_fu_281_p2);
    sensitive << ( indvar_flatten_reg_152 );

    SC_METHOD(thread_tmp_1_fu_245_p2);
    sensitive << ( cum_offs_reg_140 );
    sensitive << ( tmp_cast_fu_241_p1 );

    SC_METHOD(thread_tmp_2_cast_fu_266_p1);
    sensitive << ( tmp_4_reg_368 );

    SC_METHOD(thread_tmp_6_fu_323_p1);
    sensitive << ( reg_184 );

    SC_METHOD(thread_tmp_cast6_fu_202_p1);
    sensitive << ( a1_fu_188_p4 );

    SC_METHOD(thread_tmp_cast_fu_241_p1);
    sensitive << ( reg_184 );

    SC_METHOD(thread_tmp_fu_198_p1);
    sensitive << ( a1_fu_188_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( exitcond2_fu_210_p2 );
    sensitive << ( exitcond_flatten_fu_275_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter10 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    ap_CS_fsm = "00000000000001";
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_reg_ioackin_A_BUS_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "skipprefetch_Nelem_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_A_BUS_AWVALID, "(port)m_axi_A_BUS_AWVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_AWREADY, "(port)m_axi_A_BUS_AWREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_AWADDR, "(port)m_axi_A_BUS_AWADDR");
    sc_trace(mVcdFile, m_axi_A_BUS_AWID, "(port)m_axi_A_BUS_AWID");
    sc_trace(mVcdFile, m_axi_A_BUS_AWLEN, "(port)m_axi_A_BUS_AWLEN");
    sc_trace(mVcdFile, m_axi_A_BUS_AWSIZE, "(port)m_axi_A_BUS_AWSIZE");
    sc_trace(mVcdFile, m_axi_A_BUS_AWBURST, "(port)m_axi_A_BUS_AWBURST");
    sc_trace(mVcdFile, m_axi_A_BUS_AWLOCK, "(port)m_axi_A_BUS_AWLOCK");
    sc_trace(mVcdFile, m_axi_A_BUS_AWCACHE, "(port)m_axi_A_BUS_AWCACHE");
    sc_trace(mVcdFile, m_axi_A_BUS_AWPROT, "(port)m_axi_A_BUS_AWPROT");
    sc_trace(mVcdFile, m_axi_A_BUS_AWQOS, "(port)m_axi_A_BUS_AWQOS");
    sc_trace(mVcdFile, m_axi_A_BUS_AWREGION, "(port)m_axi_A_BUS_AWREGION");
    sc_trace(mVcdFile, m_axi_A_BUS_AWUSER, "(port)m_axi_A_BUS_AWUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_WVALID, "(port)m_axi_A_BUS_WVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_WREADY, "(port)m_axi_A_BUS_WREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_WDATA, "(port)m_axi_A_BUS_WDATA");
    sc_trace(mVcdFile, m_axi_A_BUS_WSTRB, "(port)m_axi_A_BUS_WSTRB");
    sc_trace(mVcdFile, m_axi_A_BUS_WLAST, "(port)m_axi_A_BUS_WLAST");
    sc_trace(mVcdFile, m_axi_A_BUS_WID, "(port)m_axi_A_BUS_WID");
    sc_trace(mVcdFile, m_axi_A_BUS_WUSER, "(port)m_axi_A_BUS_WUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_ARVALID, "(port)m_axi_A_BUS_ARVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_ARREADY, "(port)m_axi_A_BUS_ARREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_ARADDR, "(port)m_axi_A_BUS_ARADDR");
    sc_trace(mVcdFile, m_axi_A_BUS_ARID, "(port)m_axi_A_BUS_ARID");
    sc_trace(mVcdFile, m_axi_A_BUS_ARLEN, "(port)m_axi_A_BUS_ARLEN");
    sc_trace(mVcdFile, m_axi_A_BUS_ARSIZE, "(port)m_axi_A_BUS_ARSIZE");
    sc_trace(mVcdFile, m_axi_A_BUS_ARBURST, "(port)m_axi_A_BUS_ARBURST");
    sc_trace(mVcdFile, m_axi_A_BUS_ARLOCK, "(port)m_axi_A_BUS_ARLOCK");
    sc_trace(mVcdFile, m_axi_A_BUS_ARCACHE, "(port)m_axi_A_BUS_ARCACHE");
    sc_trace(mVcdFile, m_axi_A_BUS_ARPROT, "(port)m_axi_A_BUS_ARPROT");
    sc_trace(mVcdFile, m_axi_A_BUS_ARQOS, "(port)m_axi_A_BUS_ARQOS");
    sc_trace(mVcdFile, m_axi_A_BUS_ARREGION, "(port)m_axi_A_BUS_ARREGION");
    sc_trace(mVcdFile, m_axi_A_BUS_ARUSER, "(port)m_axi_A_BUS_ARUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_RVALID, "(port)m_axi_A_BUS_RVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_RREADY, "(port)m_axi_A_BUS_RREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_RDATA, "(port)m_axi_A_BUS_RDATA");
    sc_trace(mVcdFile, m_axi_A_BUS_RLAST, "(port)m_axi_A_BUS_RLAST");
    sc_trace(mVcdFile, m_axi_A_BUS_RID, "(port)m_axi_A_BUS_RID");
    sc_trace(mVcdFile, m_axi_A_BUS_RUSER, "(port)m_axi_A_BUS_RUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_RRESP, "(port)m_axi_A_BUS_RRESP");
    sc_trace(mVcdFile, m_axi_A_BUS_BVALID, "(port)m_axi_A_BUS_BVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_BREADY, "(port)m_axi_A_BUS_BREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_BRESP, "(port)m_axi_A_BUS_BRESP");
    sc_trace(mVcdFile, m_axi_A_BUS_BID, "(port)m_axi_A_BUS_BID");
    sc_trace(mVcdFile, m_axi_A_BUS_BUSER, "(port)m_axi_A_BUS_BUSER");
    sc_trace(mVcdFile, s_axi_CFG_AWVALID, "(port)s_axi_CFG_AWVALID");
    sc_trace(mVcdFile, s_axi_CFG_AWREADY, "(port)s_axi_CFG_AWREADY");
    sc_trace(mVcdFile, s_axi_CFG_AWADDR, "(port)s_axi_CFG_AWADDR");
    sc_trace(mVcdFile, s_axi_CFG_WVALID, "(port)s_axi_CFG_WVALID");
    sc_trace(mVcdFile, s_axi_CFG_WREADY, "(port)s_axi_CFG_WREADY");
    sc_trace(mVcdFile, s_axi_CFG_WDATA, "(port)s_axi_CFG_WDATA");
    sc_trace(mVcdFile, s_axi_CFG_WSTRB, "(port)s_axi_CFG_WSTRB");
    sc_trace(mVcdFile, s_axi_CFG_ARVALID, "(port)s_axi_CFG_ARVALID");
    sc_trace(mVcdFile, s_axi_CFG_ARREADY, "(port)s_axi_CFG_ARREADY");
    sc_trace(mVcdFile, s_axi_CFG_ARADDR, "(port)s_axi_CFG_ARADDR");
    sc_trace(mVcdFile, s_axi_CFG_RVALID, "(port)s_axi_CFG_RVALID");
    sc_trace(mVcdFile, s_axi_CFG_RREADY, "(port)s_axi_CFG_RREADY");
    sc_trace(mVcdFile, s_axi_CFG_RDATA, "(port)s_axi_CFG_RDATA");
    sc_trace(mVcdFile, s_axi_CFG_RRESP, "(port)s_axi_CFG_RRESP");
    sc_trace(mVcdFile, s_axi_CFG_BVALID, "(port)s_axi_CFG_BVALID");
    sc_trace(mVcdFile, s_axi_CFG_BREADY, "(port)s_axi_CFG_BREADY");
    sc_trace(mVcdFile, s_axi_CFG_BRESP, "(port)s_axi_CFG_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, a, "a");
    sc_trace(mVcdFile, A_BUS_blk_n_AR, "A_BUS_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, A_BUS_blk_n_R, "A_BUS_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_flatten_reg_378, "exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, A_BUS_AWREADY, "A_BUS_AWREADY");
    sc_trace(mVcdFile, A_BUS_WREADY, "A_BUS_WREADY");
    sc_trace(mVcdFile, A_BUS_ARVALID, "A_BUS_ARVALID");
    sc_trace(mVcdFile, A_BUS_ARREADY, "A_BUS_ARREADY");
    sc_trace(mVcdFile, A_BUS_ARADDR, "A_BUS_ARADDR");
    sc_trace(mVcdFile, A_BUS_RVALID, "A_BUS_RVALID");
    sc_trace(mVcdFile, A_BUS_RREADY, "A_BUS_RREADY");
    sc_trace(mVcdFile, A_BUS_RDATA, "A_BUS_RDATA");
    sc_trace(mVcdFile, A_BUS_RLAST, "A_BUS_RLAST");
    sc_trace(mVcdFile, A_BUS_RID, "A_BUS_RID");
    sc_trace(mVcdFile, A_BUS_RUSER, "A_BUS_RUSER");
    sc_trace(mVcdFile, A_BUS_RRESP, "A_BUS_RRESP");
    sc_trace(mVcdFile, A_BUS_BVALID, "A_BUS_BVALID");
    sc_trace(mVcdFile, A_BUS_BRESP, "A_BUS_BRESP");
    sc_trace(mVcdFile, A_BUS_BID, "A_BUS_BID");
    sc_trace(mVcdFile, A_BUS_BUSER, "A_BUS_BUSER");
    sc_trace(mVcdFile, indvar_flatten_reg_152, "indvar_flatten_reg_152");
    sc_trace(mVcdFile, i1_reg_163, "i1_reg_163");
    sc_trace(mVcdFile, reg_184, "reg_184");
    sc_trace(mVcdFile, ap_sig_ioackin_A_BUS_ARREADY, "ap_sig_ioackin_A_BUS_ARREADY");
    sc_trace(mVcdFile, tmp_fu_198_p1, "tmp_fu_198_p1");
    sc_trace(mVcdFile, tmp_reg_333, "tmp_reg_333");
    sc_trace(mVcdFile, tmp_cast6_fu_202_p1, "tmp_cast6_fu_202_p1");
    sc_trace(mVcdFile, tmp_cast6_reg_338, "tmp_cast6_reg_338");
    sc_trace(mVcdFile, i_cast2_fu_206_p1, "i_cast2_fu_206_p1");
    sc_trace(mVcdFile, i_cast2_reg_343, "i_cast2_reg_343");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond2_fu_210_p2, "exitcond2_fu_210_p2");
    sc_trace(mVcdFile, i_1_fu_216_p2, "i_1_fu_216_p2");
    sc_trace(mVcdFile, i_1_reg_352, "i_1_reg_352");
    sc_trace(mVcdFile, a2_sum_fu_226_p2, "a2_sum_fu_226_p2");
    sc_trace(mVcdFile, a2_sum_reg_357, "a2_sum_reg_357");
    sc_trace(mVcdFile, A_BUS_addr_reg_362, "A_BUS_addr_reg_362");
    sc_trace(mVcdFile, tmp_4_reg_368, "tmp_4_reg_368");
    sc_trace(mVcdFile, cum_offs_1_fu_269_p2, "cum_offs_1_fu_269_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, exitcond_flatten_fu_275_p2, "exitcond_flatten_fu_275_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_378, "ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_378");
    sc_trace(mVcdFile, indvar_flatten_next_fu_281_p2, "indvar_flatten_next_fu_281_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, buff_addr_1_reg_387, "buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter1_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter1_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter2_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter3_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter4_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter5_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter6_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter7_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter8_buff_addr_1_reg_387");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_buff_addr_1_reg_387, "ap_pipeline_reg_pp0_iter9_buff_addr_1_reg_387");
    sc_trace(mVcdFile, i_2_fu_306_p2, "i_2_fu_306_p2");
    sc_trace(mVcdFile, buff_q0, "buff_q0");
    sc_trace(mVcdFile, buff_load_reg_398, "buff_load_reg_398");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter2_buff_load_reg_398, "ap_pipeline_reg_pp0_iter2_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter3_buff_load_reg_398, "ap_pipeline_reg_pp0_iter3_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter4_buff_load_reg_398, "ap_pipeline_reg_pp0_iter4_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter5_buff_load_reg_398, "ap_pipeline_reg_pp0_iter5_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter6_buff_load_reg_398, "ap_pipeline_reg_pp0_iter6_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter7_buff_load_reg_398, "ap_pipeline_reg_pp0_iter7_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter8_buff_load_reg_398, "ap_pipeline_reg_pp0_iter8_buff_load_reg_398");
    sc_trace(mVcdFile, ap_pipeline_reg_pp0_iter9_buff_load_reg_398, "ap_pipeline_reg_pp0_iter9_buff_load_reg_398");
    sc_trace(mVcdFile, a2_sum3_fu_312_p2, "a2_sum3_fu_312_p2");
    sc_trace(mVcdFile, a2_sum3_reg_403, "a2_sum3_reg_403");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, buff_address0, "buff_address0");
    sc_trace(mVcdFile, buff_ce0, "buff_ce0");
    sc_trace(mVcdFile, buff_we0, "buff_we0");
    sc_trace(mVcdFile, buff_d0, "buff_d0");
    sc_trace(mVcdFile, buff_ce1, "buff_ce1");
    sc_trace(mVcdFile, buff_we1, "buff_we1");
    sc_trace(mVcdFile, buff_d1, "buff_d1");
    sc_trace(mVcdFile, i_reg_129, "i_reg_129");
    sc_trace(mVcdFile, cum_offs_reg_140, "cum_offs_reg_140");
    sc_trace(mVcdFile, i1_cast1_fu_301_p1, "i1_cast1_fu_301_p1");
    sc_trace(mVcdFile, a2_sum_cast_fu_231_p1, "a2_sum_cast_fu_231_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_A_BUS_ARREADY, "ap_reg_ioackin_A_BUS_ARREADY");
    sc_trace(mVcdFile, a1_fu_188_p4, "a1_fu_188_p4");
    sc_trace(mVcdFile, cum_offs_cast4_cast_fu_222_p1, "cum_offs_cast4_cast_fu_222_p1");
    sc_trace(mVcdFile, tmp_cast_fu_241_p1, "tmp_cast_fu_241_p1");
    sc_trace(mVcdFile, tmp_1_fu_245_p2, "tmp_1_fu_245_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_266_p1, "tmp_2_cast_fu_266_p1");
    sc_trace(mVcdFile, exitcond5_fu_287_p2, "exitcond5_fu_287_p2");
    sc_trace(mVcdFile, i1_mid2_fu_293_p3, "i1_mid2_fu_293_p3");
    sc_trace(mVcdFile, tmp_6_fu_323_p1, "tmp_6_fu_323_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_428, "ap_condition_428");
#endif

    }
    mHdltvinHandle.open("skipprefetch_Nelem.hdltvin.dat");
    mHdltvoutHandle.open("skipprefetch_Nelem.hdltvout.dat");
}

skipprefetch_Nelem::~skipprefetch_Nelem() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete skipprefetch_Nelem_CFG_s_axi_U;
    delete skipprefetch_Nelem_A_BUS_m_axi_U;
    delete buff_U;
}

void skipprefetch_Nelem::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void skipprefetch_Nelem::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void skipprefetch_Nelem::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv64_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void skipprefetch_Nelem::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read())) || 
                    (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
                     esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read())))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read()))) {
            ap_enable_reg_pp0_iter10 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
              esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
              !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))))) {
            ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                     esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))))) {
            ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        cum_offs_reg_140 = cum_offs_1_fu_269_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        cum_offs_reg_140 = ap_const_lv22_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read()))) {
        i1_reg_163 = ap_const_lv6_1;
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()))) {
        i1_reg_163 = i_2_fu_306_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        i_reg_129 = i_1_reg_352.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_129 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read()))) {
        indvar_flatten_reg_152 = ap_const_lv10_0;
    } else if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()))) {
        indvar_flatten_reg_152 = indvar_flatten_next_fu_281_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read()))) {
        A_BUS_addr_reg_362 = a2_sum_cast_fu_231_p1.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_378.read(), ap_const_lv1_0))) {
        a2_sum3_reg_403 = a2_sum3_fu_312_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read()))) {
        a2_sum_reg_357 = a2_sum_fu_226_p2.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()))) {
        ap_pipeline_reg_pp0_iter1_buff_addr_1_reg_387 = buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378 = exitcond_flatten_reg_378.read();
        exitcond_flatten_reg_378 = exitcond_flatten_fu_275_p2.read();
    }
    if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
        ap_pipeline_reg_pp0_iter2_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter1_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter2_buff_load_reg_398 = buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter3_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter2_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter3_buff_load_reg_398 = ap_pipeline_reg_pp0_iter2_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter2_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter4_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter3_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter4_buff_load_reg_398 = ap_pipeline_reg_pp0_iter3_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter3_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter5_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter4_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter5_buff_load_reg_398 = ap_pipeline_reg_pp0_iter4_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter4_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter6_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter5_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter6_buff_load_reg_398 = ap_pipeline_reg_pp0_iter5_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter5_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter7_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter6_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter7_buff_load_reg_398 = ap_pipeline_reg_pp0_iter6_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter6_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter8_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter7_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter8_buff_load_reg_398 = ap_pipeline_reg_pp0_iter7_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter7_exitcond_flatten_reg_378.read();
        ap_pipeline_reg_pp0_iter9_buff_addr_1_reg_387 = ap_pipeline_reg_pp0_iter8_buff_addr_1_reg_387.read();
        ap_pipeline_reg_pp0_iter9_buff_load_reg_398 = ap_pipeline_reg_pp0_iter8_buff_load_reg_398.read();
        ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_378 = ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read();
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()))) {
        buff_addr_1_reg_387 =  (sc_lv<6>) (i1_cast1_fu_301_p1.read());
    }
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_378.read(), ap_const_lv1_0))) {
        buff_load_reg_398 = buff_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_352 = i_1_fu_216_p2.read();
        i_cast2_reg_343 = i_cast2_fu_206_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
  !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))))) {
        reg_184 = A_BUS_RDATA.read().range(47, 32);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) {
        tmp_4_reg_368 = A_BUS_RDATA.read().range(63, 48);
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_cast6_reg_338 = tmp_cast6_fu_202_p1.read();
        tmp_reg_333 = tmp_fu_198_p1.read();
    }
}

void skipprefetch_Nelem::thread_A_BUS_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_condition_428.read(), ap_const_boolean_1)) {
            A_BUS_ARADDR = a2_sum3_reg_403.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) {
            A_BUS_ARADDR = A_BUS_addr_reg_362.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) {
            A_BUS_ARADDR = a2_sum_cast_fu_231_p1.read();
        } else {
            A_BUS_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        A_BUS_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void skipprefetch_Nelem::thread_A_BUS_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))))) {
        A_BUS_ARVALID = ap_const_logic_1;
    } else {
        A_BUS_ARVALID = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_A_BUS_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
        A_BUS_RREADY = ap_const_logic_1;
    } else {
        A_BUS_RREADY = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_A_BUS_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0)))) {
        A_BUS_blk_n_AR = m_axi_A_BUS_ARREADY.read();
    } else {
        A_BUS_blk_n_AR = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_A_BUS_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read())))) {
        A_BUS_blk_n_R = m_axi_A_BUS_RVALID.read();
    } else {
        A_BUS_blk_n_R = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_a1_fu_188_p4() {
    a1_fu_188_p4 = a.read().range(31, 3);
}

void skipprefetch_Nelem::thread_a2_sum3_fu_312_p2() {
    a2_sum3_fu_312_p2 = (!tmp_reg_333.read().is_01() || !buff_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_reg_333.read()) + sc_biguint<32>(buff_q0.read()));
}

void skipprefetch_Nelem::thread_a2_sum_cast_fu_231_p1() {
    a2_sum_cast_fu_231_p1 = esl_sext<32,31>(a2_sum_reg_357.read());
}

void skipprefetch_Nelem::thread_a2_sum_fu_226_p2() {
    a2_sum_fu_226_p2 = (!cum_offs_cast4_cast_fu_222_p1.read().is_01() || !tmp_cast6_reg_338.read().is_01())? sc_lv<31>(): (sc_bigint<31>(cum_offs_cast4_cast_fu_222_p1.read()) + sc_biguint<31>(tmp_cast6_reg_338.read()));
}

void skipprefetch_Nelem::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(12, 12);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read().range(10, 10);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(13, 13);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void skipprefetch_Nelem::thread_ap_condition_428() {
    ap_condition_428 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)));
}

void skipprefetch_Nelem::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void skipprefetch_Nelem::thread_ap_sig_ioackin_A_BUS_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) {
        ap_sig_ioackin_A_BUS_ARREADY = A_BUS_ARREADY.read();
    } else {
        ap_sig_ioackin_A_BUS_ARREADY = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_buff_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        buff_address0 =  (sc_lv<6>) (i1_cast1_fu_301_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()))) {
        buff_address0 =  (sc_lv<6>) (i_cast2_reg_343.read());
    } else {
        buff_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void skipprefetch_Nelem::thread_buff_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || 
         (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        buff_ce0 = ap_const_logic_1;
    } else {
        buff_ce0 = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_buff_ce1() {
    if ((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()))) {
        buff_ce1 = ap_const_logic_1;
    } else {
        buff_ce1 = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_buff_d0() {
    buff_d0 = esl_sext<32,22>(tmp_1_fu_245_p2.read());
}

void skipprefetch_Nelem::thread_buff_d1() {
    buff_d1 = (!ap_pipeline_reg_pp0_iter9_buff_load_reg_398.read().is_01() || !tmp_6_fu_323_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_pipeline_reg_pp0_iter9_buff_load_reg_398.read()) + sc_bigint<32>(tmp_6_fu_323_p1.read()));
}

void skipprefetch_Nelem::thread_buff_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state11.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)))) {
        buff_we0 = ap_const_logic_1;
    } else {
        buff_we0 = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_buff_we1() {
    if (((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter9_exitcond_flatten_reg_378.read())))) {
        buff_we1 = ap_const_logic_1;
    } else {
        buff_we1 = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_cum_offs_1_fu_269_p2() {
    cum_offs_1_fu_269_p2 = (!cum_offs_reg_140.read().is_01() || !tmp_2_cast_fu_266_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(cum_offs_reg_140.read()) + sc_bigint<22>(tmp_2_cast_fu_266_p1.read()));
}

void skipprefetch_Nelem::thread_cum_offs_cast4_cast_fu_222_p1() {
    cum_offs_cast4_cast_fu_222_p1 = esl_sext<31,22>(cum_offs_reg_140.read());
}

void skipprefetch_Nelem::thread_exitcond2_fu_210_p2() {
    exitcond2_fu_210_p2 = (!i_reg_129.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_129.read() == ap_const_lv6_32);
}

void skipprefetch_Nelem::thread_exitcond5_fu_287_p2() {
    exitcond5_fu_287_p2 = (!i1_reg_163.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_163.read() == ap_const_lv6_32);
}

void skipprefetch_Nelem::thread_exitcond_flatten_fu_275_p2() {
    exitcond_flatten_fu_275_p2 = (!indvar_flatten_reg_152.read().is_01() || !ap_const_lv10_3A3.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_152.read() == ap_const_lv10_3A3);
}

void skipprefetch_Nelem::thread_i1_cast1_fu_301_p1() {
    i1_cast1_fu_301_p1 = esl_zext<32,6>(i1_mid2_fu_293_p3.read());
}

void skipprefetch_Nelem::thread_i1_mid2_fu_293_p3() {
    i1_mid2_fu_293_p3 = (!exitcond5_fu_287_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond5_fu_287_p2.read()[0].to_bool())? ap_const_lv6_1: i1_reg_163.read());
}

void skipprefetch_Nelem::thread_i_1_fu_216_p2() {
    i_1_fu_216_p2 = (!i_reg_129.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_129.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void skipprefetch_Nelem::thread_i_2_fu_306_p2() {
    i_2_fu_306_p2 = (!i1_mid2_fu_293_p3.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i1_mid2_fu_293_p3.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void skipprefetch_Nelem::thread_i_cast2_fu_206_p1() {
    i_cast2_fu_206_p1 = esl_zext<32,6>(i_reg_129.read());
}

void skipprefetch_Nelem::thread_indvar_flatten_next_fu_281_p2() {
    indvar_flatten_next_fu_281_p2 = (!indvar_flatten_reg_152.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_flatten_reg_152.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void skipprefetch_Nelem::thread_tmp_1_fu_245_p2() {
    tmp_1_fu_245_p2 = (!tmp_cast_fu_241_p1.read().is_01() || !cum_offs_reg_140.read().is_01())? sc_lv<22>(): (sc_bigint<22>(tmp_cast_fu_241_p1.read()) + sc_biguint<22>(cum_offs_reg_140.read()));
}

void skipprefetch_Nelem::thread_tmp_2_cast_fu_266_p1() {
    tmp_2_cast_fu_266_p1 = esl_sext<22,16>(tmp_4_reg_368.read());
}

void skipprefetch_Nelem::thread_tmp_6_fu_323_p1() {
    tmp_6_fu_323_p1 = esl_sext<32,16>(reg_184.read());
}

void skipprefetch_Nelem::thread_tmp_cast6_fu_202_p1() {
    tmp_cast6_fu_202_p1 = esl_zext<31,29>(a1_fu_188_p4.read());
}

void skipprefetch_Nelem::thread_tmp_cast_fu_241_p1() {
    tmp_cast_fu_241_p1 = esl_sext<22,16>(reg_184.read());
}

void skipprefetch_Nelem::thread_tmp_fu_198_p1() {
    tmp_fu_198_p1 = esl_zext<32,29>(a1_fu_188_p4.read());
}

void skipprefetch_Nelem::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_210_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if (!esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 4096 : 
            if ((!(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) && !(!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read())) || (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_378.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, ap_pipeline_reg_pp0_iter8_exitcond_flatten_reg_378.read()) && 
  esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_275_p2.read()) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
                ap_NS_fsm = ap_ST_fsm_state24;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

void skipprefetch_Nelem::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_A_BUS_AWVALID\" :  \"" << m_axi_A_BUS_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_AWREADY\" :  \"" << m_axi_A_BUS_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWADDR\" :  \"" << m_axi_A_BUS_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWID\" :  \"" << m_axi_A_BUS_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWLEN\" :  \"" << m_axi_A_BUS_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWSIZE\" :  \"" << m_axi_A_BUS_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWBURST\" :  \"" << m_axi_A_BUS_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWLOCK\" :  \"" << m_axi_A_BUS_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWCACHE\" :  \"" << m_axi_A_BUS_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWPROT\" :  \"" << m_axi_A_BUS_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWQOS\" :  \"" << m_axi_A_BUS_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWREGION\" :  \"" << m_axi_A_BUS_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWUSER\" :  \"" << m_axi_A_BUS_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WVALID\" :  \"" << m_axi_A_BUS_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_WREADY\" :  \"" << m_axi_A_BUS_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WDATA\" :  \"" << m_axi_A_BUS_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WSTRB\" :  \"" << m_axi_A_BUS_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WLAST\" :  \"" << m_axi_A_BUS_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WID\" :  \"" << m_axi_A_BUS_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WUSER\" :  \"" << m_axi_A_BUS_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARVALID\" :  \"" << m_axi_A_BUS_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_ARREADY\" :  \"" << m_axi_A_BUS_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARADDR\" :  \"" << m_axi_A_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARID\" :  \"" << m_axi_A_BUS_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARLEN\" :  \"" << m_axi_A_BUS_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARSIZE\" :  \"" << m_axi_A_BUS_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARBURST\" :  \"" << m_axi_A_BUS_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARLOCK\" :  \"" << m_axi_A_BUS_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARCACHE\" :  \"" << m_axi_A_BUS_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARPROT\" :  \"" << m_axi_A_BUS_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARQOS\" :  \"" << m_axi_A_BUS_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARREGION\" :  \"" << m_axi_A_BUS_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARUSER\" :  \"" << m_axi_A_BUS_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RVALID\" :  \"" << m_axi_A_BUS_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_RREADY\" :  \"" << m_axi_A_BUS_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RDATA\" :  \"" << m_axi_A_BUS_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RLAST\" :  \"" << m_axi_A_BUS_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RID\" :  \"" << m_axi_A_BUS_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RUSER\" :  \"" << m_axi_A_BUS_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RRESP\" :  \"" << m_axi_A_BUS_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BVALID\" :  \"" << m_axi_A_BUS_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_BREADY\" :  \"" << m_axi_A_BUS_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BRESP\" :  \"" << m_axi_A_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BID\" :  \"" << m_axi_A_BUS_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BUSER\" :  \"" << m_axi_A_BUS_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_AWVALID\" :  \"" << s_axi_CFG_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_AWREADY\" :  \"" << s_axi_CFG_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_AWADDR\" :  \"" << s_axi_CFG_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WVALID\" :  \"" << s_axi_CFG_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_WREADY\" :  \"" << s_axi_CFG_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WDATA\" :  \"" << s_axi_CFG_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WSTRB\" :  \"" << s_axi_CFG_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_ARVALID\" :  \"" << s_axi_CFG_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_ARREADY\" :  \"" << s_axi_CFG_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_ARADDR\" :  \"" << s_axi_CFG_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RVALID\" :  \"" << s_axi_CFG_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_RREADY\" :  \"" << s_axi_CFG_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RDATA\" :  \"" << s_axi_CFG_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RRESP\" :  \"" << s_axi_CFG_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_BVALID\" :  \"" << s_axi_CFG_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_BREADY\" :  \"" << s_axi_CFG_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_BRESP\" :  \"" << s_axi_CFG_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

