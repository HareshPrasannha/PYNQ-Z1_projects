

================================================================
== Vivado HLS Report for 'skipprefetch_Nelem'
================================================================
* Date:           Thu Jun 04 17:58:27 2020

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        skipprefetch_Nelem
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1493|  1493|  1494|  1494|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  550|  550|        11|          -|          -|    50|    no    |
        |- Loop 2  |  940|  940|        11|          1|          1|   931|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 24
* Pipeline: 1
  Pipeline-0: II = 1, D = 11, States = { 13 14 15 16 17 18 19 20 21 22 23 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond2)
	13  / (exitcond2)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	2  / true
13 --> 
	24  / (exitcond_flatten)
	14  / (!exitcond_flatten)
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	13  / true
24 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_read (3)  [1/1] 1.00ns
:0  %a_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %a)

ST_1: a1 (4)  [1/1] 0.00ns
:1  %a1 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %a_read, i32 3, i32 31)

ST_1: tmp (5)  [1/1] 0.00ns
:2  %tmp = zext i29 %a1 to i32

ST_1: tmp_cast6 (6)  [1/1] 0.00ns
:3  %tmp_cast6 = zext i29 %a1 to i31

ST_1: StgValue_29 (7)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i64* %A_BUS), !map !22

ST_1: StgValue_30 (8)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @skipprefetch_Nelem_s) nounwind

ST_1: buff (9)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:27
:6  %buff = alloca [50 x i32], align 4

ST_1: StgValue_32 (10)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i64* %A_BUS, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_33 (11)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface(i32 %a, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_34 (12)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:22
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [4 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_35 (13)  [1/1] 1.57ns  loc: skipprefetch_Nelem.cpp:46
:10  br label %1


 <State 2>: 3.31ns
ST_2: i (15)  [1/1] 0.00ns
:0  %i = phi i6 [ 0, %0 ], [ %i_1, %2 ]

ST_2: cum_offs (16)  [1/1] 0.00ns
:1  %cum_offs = phi i22 [ 0, %0 ], [ %cum_offs_1, %2 ]

ST_2: i_cast2 (17)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:46
:2  %i_cast2 = zext i6 %i to i32

ST_2: exitcond2 (18)  [1/1] 1.94ns  loc: skipprefetch_Nelem.cpp:46
:3  %exitcond2 = icmp eq i6 %i, -14

ST_2: empty (19)  [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50)

ST_2: i_1 (20)  [1/1] 1.72ns  loc: skipprefetch_Nelem.cpp:46
:5  %i_1 = add i6 %i, 1

ST_2: StgValue_42 (21)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:46
:6  br i1 %exitcond2, label %.preheader.preheader, label %2

ST_2: cum_offs_cast4_cast (23)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:0  %cum_offs_cast4_cast = sext i22 %cum_offs to i31

ST_2: a2_sum (24)  [1/1] 2.44ns  loc: skipprefetch_Nelem.cpp:54
:1  %a2_sum = add i31 %cum_offs_cast4_cast, %tmp_cast6

ST_2: StgValue_45 (42)  [1/1] 1.57ns
.preheader.preheader:0  br label %.preheader


 <State 3>: 8.75ns
ST_3: a2_sum_cast (25)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:2  %a2_sum_cast = sext i31 %a2_sum to i32

ST_3: A_BUS_addr (26)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:3  %A_BUS_addr = getelementptr i64* %A_BUS, i32 %a2_sum_cast

ST_3: A_BUS_load_req (27)  [7/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 4>: 8.75ns
ST_4: A_BUS_load_req (27)  [6/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)

ST_4: A_BUS_load_1_req (35)  [7/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 5>: 8.75ns
ST_5: A_BUS_load_req (27)  [5/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)

ST_5: A_BUS_load_1_req (35)  [6/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 6>: 8.75ns
ST_6: A_BUS_load_req (27)  [4/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)

ST_6: A_BUS_load_1_req (35)  [5/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 7>: 8.75ns
ST_7: A_BUS_load_req (27)  [3/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)

ST_7: A_BUS_load_1_req (35)  [4/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 8>: 8.75ns
ST_8: A_BUS_load_req (27)  [2/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)

ST_8: A_BUS_load_1_req (35)  [3/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 9>: 8.75ns
ST_9: A_BUS_load_req (27)  [1/7] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:4  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)

ST_9: A_BUS_load_1_req (35)  [2/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 10>: 8.75ns
ST_10: A_BUS_addr_read (28)  [1/1] 8.75ns  loc: skipprefetch_Nelem.cpp:54
:5  %A_BUS_addr_read = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr)

ST_10: tmp_3 (29)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:6  %tmp_3 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %A_BUS_addr_read, i32 32, i32 47)

ST_10: A_BUS_load_1_req (35)  [1/7] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:12  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 11>: 8.75ns
ST_11: tmp_cast (30)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:7  %tmp_cast = sext i16 %tmp_3 to i22

ST_11: tmp_1 (31)  [1/1] 2.20ns  loc: skipprefetch_Nelem.cpp:54
:8  %tmp_1 = add i22 %tmp_cast, %cum_offs

ST_11: tmp_1_cast (32)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:9  %tmp_1_cast = sext i22 %tmp_1 to i32

ST_11: buff_addr (33)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:54
:10  %buff_addr = getelementptr inbounds [50 x i32]* %buff, i32 0, i32 %i_cast2

ST_11: StgValue_68 (34)  [1/1] 2.71ns  loc: skipprefetch_Nelem.cpp:54
:11  store i32 %tmp_1_cast, i32* %buff_addr, align 4

ST_11: A_BUS_addr_read_1 (36)  [1/1] 8.75ns  loc: skipprefetch_Nelem.cpp:55
:13  %A_BUS_addr_read_1 = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr)

ST_11: tmp_4 (37)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:55
:14  %tmp_4 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %A_BUS_addr_read_1, i32 48, i32 63)


 <State 12>: 2.20ns
ST_12: tmp_2_cast (38)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:55
:15  %tmp_2_cast = sext i16 %tmp_4 to i22

ST_12: cum_offs_1 (39)  [1/1] 2.20ns  loc: skipprefetch_Nelem.cpp:55
:16  %cum_offs_1 = add i22 %cum_offs, %tmp_2_cast

ST_12: StgValue_73 (40)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:46
:17  br label %1


 <State 13>: 6.02ns
ST_13: indvar_flatten (44)  [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i10 [ %indvar_flatten_next, %.preheader3 ], [ 0, %.preheader.preheader ]

ST_13: i1 (45)  [1/1] 0.00ns
.preheader:1  %i1 = phi i6 [ %i_2, %.preheader3 ], [ 1, %.preheader.preheader ]

ST_13: exitcond_flatten (46)  [1/1] 2.07ns
.preheader:2  %exitcond_flatten = icmp eq i10 %indvar_flatten, -93

ST_13: indvar_flatten_next (47)  [1/1] 1.84ns
.preheader:3  %indvar_flatten_next = add i10 %indvar_flatten, 1

ST_13: StgValue_78 (48)  [1/1] 0.00ns
.preheader:4  br i1 %exitcond_flatten, label %3, label %.preheader3

ST_13: exitcond5 (51)  [1/1] 1.94ns  loc: skipprefetch_Nelem.cpp:62
.preheader3:1  %exitcond5 = icmp eq i6 %i1, -14

ST_13: i1_mid2 (52)  [1/1] 1.37ns  loc: skipprefetch_Nelem.cpp:62
.preheader3:2  %i1_mid2 = select i1 %exitcond5, i6 1, i6 %i1

ST_13: i1_cast1 (53)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:62
.preheader3:3  %i1_cast1 = zext i6 %i1_mid2 to i32

ST_13: buff_addr_1 (56)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:6  %buff_addr_1 = getelementptr inbounds [50 x i32]* %buff, i32 0, i32 %i1_cast1

ST_13: buff_load (57)  [2/2] 2.71ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:7  %buff_load = load i32* %buff_addr_1, align 4

ST_13: i_2 (67)  [1/1] 1.72ns  loc: skipprefetch_Nelem.cpp:62
.preheader3:17  %i_2 = add i6 %i1_mid2, 1


 <State 14>: 5.15ns
ST_14: buff_load (57)  [1/2] 2.71ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:7  %buff_load = load i32* %buff_addr_1, align 4

ST_14: a2_sum3 (58)  [1/1] 2.44ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:8  %a2_sum3 = add i32 %tmp, %buff_load


 <State 15>: 8.75ns
ST_15: A_BUS_addr_1 (59)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:9  %A_BUS_addr_1 = getelementptr i64* %A_BUS, i32 %a2_sum3

ST_15: A_BUS_load_2_req (60)  [7/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 16>: 8.75ns
ST_16: A_BUS_load_2_req (60)  [6/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 17>: 8.75ns
ST_17: A_BUS_load_2_req (60)  [5/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 18>: 8.75ns
ST_18: A_BUS_load_2_req (60)  [4/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 19>: 8.75ns
ST_19: A_BUS_load_2_req (60)  [3/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 20>: 8.75ns
ST_20: A_BUS_load_2_req (60)  [2/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 21>: 8.75ns
ST_21: A_BUS_load_2_req (60)  [1/7] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 22>: 8.75ns
ST_22: A_BUS_addr_1_read (61)  [1/1] 8.75ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:11  %A_BUS_addr_1_read = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr_1)

ST_22: tmp_8 (62)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:12  %tmp_8 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %A_BUS_addr_1_read, i32 32, i32 47)


 <State 23>: 5.15ns
ST_23: empty_7 (50)  [1/1] 0.00ns
.preheader3:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 931, i64 931, i64 931)

ST_23: tmp_5 (54)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:62
.preheader3:4  %tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_23: StgValue_99 (55)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:63
.preheader3:5  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_23: tmp_6 (63)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:13  %tmp_6 = sext i16 %tmp_8 to i32

ST_23: tmp_7 (64)  [1/1] 2.44ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:14  %tmp_7 = add nsw i32 %buff_load, %tmp_6

ST_23: StgValue_102 (65)  [1/1] 2.71ns  loc: skipprefetch_Nelem.cpp:67
.preheader3:15  store i32 %tmp_7, i32* %buff_addr_1, align 4

ST_23: empty_8 (66)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:68
.preheader3:16  %empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_5)

ST_23: StgValue_104 (68)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:62
.preheader3:18  br label %.preheader


 <State 24>: 0.00ns
ST_24: StgValue_105 (70)  [1/1] 0.00ns  loc: skipprefetch_Nelem.cpp:70
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', skipprefetch_Nelem.cpp:46) [15]  (1.57 ns)

 <State 2>: 3.31ns
The critical path consists of the following:
	'icmp' operation ('exitcond2', skipprefetch_Nelem.cpp:46) [18]  (1.94 ns)
	blocking operation 1.37 ns on control path)

 <State 3>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr', skipprefetch_Nelem.cpp:54) [26]  (0 ns)
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [27]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skipprefetch_Nelem.cpp:54) [28]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skipprefetch_Nelem.cpp:55) [36]  (8.75 ns)

 <State 12>: 2.2ns
The critical path consists of the following:
	'add' operation ('cum_offs', skipprefetch_Nelem.cpp:55) [39]  (2.2 ns)

 <State 13>: 6.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', skipprefetch_Nelem.cpp:62) [45]  (0 ns)
	'icmp' operation ('exitcond5', skipprefetch_Nelem.cpp:62) [51]  (1.94 ns)
	'select' operation ('i1_mid2', skipprefetch_Nelem.cpp:62) [52]  (1.37 ns)
	'getelementptr' operation ('buff_addr_1', skipprefetch_Nelem.cpp:67) [56]  (0 ns)
	'load' operation ('buff_load', skipprefetch_Nelem.cpp:67) on array 'buff', skipprefetch_Nelem.cpp:27 [57]  (2.71 ns)

 <State 14>: 5.15ns
The critical path consists of the following:
	'load' operation ('buff_load', skipprefetch_Nelem.cpp:67) on array 'buff', skipprefetch_Nelem.cpp:27 [57]  (2.71 ns)
	'add' operation ('a2_sum3', skipprefetch_Nelem.cpp:67) [58]  (2.44 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr_1', skipprefetch_Nelem.cpp:67) [59]  (0 ns)
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [60]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skipprefetch_Nelem.cpp:67) [61]  (8.75 ns)

 <State 23>: 5.15ns
The critical path consists of the following:
	'add' operation ('tmp_7', skipprefetch_Nelem.cpp:67) [64]  (2.44 ns)
	'store' operation (skipprefetch_Nelem.cpp:67) of variable 'tmp_7', skipprefetch_Nelem.cpp:67 on array 'buff', skipprefetch_Nelem.cpp:27 [65]  (2.71 ns)

 <State 24>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
