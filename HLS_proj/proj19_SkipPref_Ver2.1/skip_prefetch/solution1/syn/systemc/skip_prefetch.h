// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _skip_prefetch_HH_
#define _skip_prefetch_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "skip_prefetch_mulbkb.h"
#include "skip_prefetch_buff.h"
#include "skip_prefetch_CFG_s_axi.h"
#include "skip_prefetch_A_BUS_m_axi.h"
#include "skip_prefetch_PREF_WINDOW_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_A_BUS_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_A_BUS_ID_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_DATA_WIDTH = 64,
         unsigned int C_M_AXI_A_BUS_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_PREF_WINDOW_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_PREF_WINDOW_ID_WIDTH = 1,
         unsigned int C_M_AXI_PREF_WINDOW_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_PREF_WINDOW_DATA_WIDTH = 32,
         unsigned int C_M_AXI_PREF_WINDOW_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_PREF_WINDOW_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_PREF_WINDOW_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_PREF_WINDOW_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CFG_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CFG_DATA_WIDTH = 32>
struct skip_prefetch : public sc_module {
    // Port declarations 110
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_A_BUS_AWVALID;
    sc_in< sc_logic > m_axi_A_BUS_AWREADY;
    sc_out< sc_uint<C_M_AXI_A_BUS_ADDR_WIDTH> > m_axi_A_BUS_AWADDR;
    sc_out< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_AWID;
    sc_out< sc_lv<8> > m_axi_A_BUS_AWLEN;
    sc_out< sc_lv<3> > m_axi_A_BUS_AWSIZE;
    sc_out< sc_lv<2> > m_axi_A_BUS_AWBURST;
    sc_out< sc_lv<2> > m_axi_A_BUS_AWLOCK;
    sc_out< sc_lv<4> > m_axi_A_BUS_AWCACHE;
    sc_out< sc_lv<3> > m_axi_A_BUS_AWPROT;
    sc_out< sc_lv<4> > m_axi_A_BUS_AWQOS;
    sc_out< sc_lv<4> > m_axi_A_BUS_AWREGION;
    sc_out< sc_uint<C_M_AXI_A_BUS_AWUSER_WIDTH> > m_axi_A_BUS_AWUSER;
    sc_out< sc_logic > m_axi_A_BUS_WVALID;
    sc_in< sc_logic > m_axi_A_BUS_WREADY;
    sc_out< sc_uint<C_M_AXI_A_BUS_DATA_WIDTH> > m_axi_A_BUS_WDATA;
    sc_out< sc_uint<C_M_AXI_A_BUS_DATA_WIDTH/8> > m_axi_A_BUS_WSTRB;
    sc_out< sc_logic > m_axi_A_BUS_WLAST;
    sc_out< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_WID;
    sc_out< sc_uint<C_M_AXI_A_BUS_WUSER_WIDTH> > m_axi_A_BUS_WUSER;
    sc_out< sc_logic > m_axi_A_BUS_ARVALID;
    sc_in< sc_logic > m_axi_A_BUS_ARREADY;
    sc_out< sc_uint<C_M_AXI_A_BUS_ADDR_WIDTH> > m_axi_A_BUS_ARADDR;
    sc_out< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_ARID;
    sc_out< sc_lv<8> > m_axi_A_BUS_ARLEN;
    sc_out< sc_lv<3> > m_axi_A_BUS_ARSIZE;
    sc_out< sc_lv<2> > m_axi_A_BUS_ARBURST;
    sc_out< sc_lv<2> > m_axi_A_BUS_ARLOCK;
    sc_out< sc_lv<4> > m_axi_A_BUS_ARCACHE;
    sc_out< sc_lv<3> > m_axi_A_BUS_ARPROT;
    sc_out< sc_lv<4> > m_axi_A_BUS_ARQOS;
    sc_out< sc_lv<4> > m_axi_A_BUS_ARREGION;
    sc_out< sc_uint<C_M_AXI_A_BUS_ARUSER_WIDTH> > m_axi_A_BUS_ARUSER;
    sc_in< sc_logic > m_axi_A_BUS_RVALID;
    sc_out< sc_logic > m_axi_A_BUS_RREADY;
    sc_in< sc_uint<C_M_AXI_A_BUS_DATA_WIDTH> > m_axi_A_BUS_RDATA;
    sc_in< sc_logic > m_axi_A_BUS_RLAST;
    sc_in< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_RID;
    sc_in< sc_uint<C_M_AXI_A_BUS_RUSER_WIDTH> > m_axi_A_BUS_RUSER;
    sc_in< sc_lv<2> > m_axi_A_BUS_RRESP;
    sc_in< sc_logic > m_axi_A_BUS_BVALID;
    sc_out< sc_logic > m_axi_A_BUS_BREADY;
    sc_in< sc_lv<2> > m_axi_A_BUS_BRESP;
    sc_in< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_BID;
    sc_in< sc_uint<C_M_AXI_A_BUS_BUSER_WIDTH> > m_axi_A_BUS_BUSER;
    sc_out< sc_logic > m_axi_PREF_WINDOW_AWVALID;
    sc_in< sc_logic > m_axi_PREF_WINDOW_AWREADY;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_ADDR_WIDTH> > m_axi_PREF_WINDOW_AWADDR;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_ID_WIDTH> > m_axi_PREF_WINDOW_AWID;
    sc_out< sc_lv<8> > m_axi_PREF_WINDOW_AWLEN;
    sc_out< sc_lv<3> > m_axi_PREF_WINDOW_AWSIZE;
    sc_out< sc_lv<2> > m_axi_PREF_WINDOW_AWBURST;
    sc_out< sc_lv<2> > m_axi_PREF_WINDOW_AWLOCK;
    sc_out< sc_lv<4> > m_axi_PREF_WINDOW_AWCACHE;
    sc_out< sc_lv<3> > m_axi_PREF_WINDOW_AWPROT;
    sc_out< sc_lv<4> > m_axi_PREF_WINDOW_AWQOS;
    sc_out< sc_lv<4> > m_axi_PREF_WINDOW_AWREGION;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_AWUSER_WIDTH> > m_axi_PREF_WINDOW_AWUSER;
    sc_out< sc_logic > m_axi_PREF_WINDOW_WVALID;
    sc_in< sc_logic > m_axi_PREF_WINDOW_WREADY;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_DATA_WIDTH> > m_axi_PREF_WINDOW_WDATA;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_DATA_WIDTH/8> > m_axi_PREF_WINDOW_WSTRB;
    sc_out< sc_logic > m_axi_PREF_WINDOW_WLAST;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_ID_WIDTH> > m_axi_PREF_WINDOW_WID;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_WUSER_WIDTH> > m_axi_PREF_WINDOW_WUSER;
    sc_out< sc_logic > m_axi_PREF_WINDOW_ARVALID;
    sc_in< sc_logic > m_axi_PREF_WINDOW_ARREADY;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_ADDR_WIDTH> > m_axi_PREF_WINDOW_ARADDR;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_ID_WIDTH> > m_axi_PREF_WINDOW_ARID;
    sc_out< sc_lv<8> > m_axi_PREF_WINDOW_ARLEN;
    sc_out< sc_lv<3> > m_axi_PREF_WINDOW_ARSIZE;
    sc_out< sc_lv<2> > m_axi_PREF_WINDOW_ARBURST;
    sc_out< sc_lv<2> > m_axi_PREF_WINDOW_ARLOCK;
    sc_out< sc_lv<4> > m_axi_PREF_WINDOW_ARCACHE;
    sc_out< sc_lv<3> > m_axi_PREF_WINDOW_ARPROT;
    sc_out< sc_lv<4> > m_axi_PREF_WINDOW_ARQOS;
    sc_out< sc_lv<4> > m_axi_PREF_WINDOW_ARREGION;
    sc_out< sc_uint<C_M_AXI_PREF_WINDOW_ARUSER_WIDTH> > m_axi_PREF_WINDOW_ARUSER;
    sc_in< sc_logic > m_axi_PREF_WINDOW_RVALID;
    sc_out< sc_logic > m_axi_PREF_WINDOW_RREADY;
    sc_in< sc_uint<C_M_AXI_PREF_WINDOW_DATA_WIDTH> > m_axi_PREF_WINDOW_RDATA;
    sc_in< sc_logic > m_axi_PREF_WINDOW_RLAST;
    sc_in< sc_uint<C_M_AXI_PREF_WINDOW_ID_WIDTH> > m_axi_PREF_WINDOW_RID;
    sc_in< sc_uint<C_M_AXI_PREF_WINDOW_RUSER_WIDTH> > m_axi_PREF_WINDOW_RUSER;
    sc_in< sc_lv<2> > m_axi_PREF_WINDOW_RRESP;
    sc_in< sc_logic > m_axi_PREF_WINDOW_BVALID;
    sc_out< sc_logic > m_axi_PREF_WINDOW_BREADY;
    sc_in< sc_lv<2> > m_axi_PREF_WINDOW_BRESP;
    sc_in< sc_uint<C_M_AXI_PREF_WINDOW_ID_WIDTH> > m_axi_PREF_WINDOW_BID;
    sc_in< sc_uint<C_M_AXI_PREF_WINDOW_BUSER_WIDTH> > m_axi_PREF_WINDOW_BUSER;
    sc_in< sc_logic > s_axi_CFG_AWVALID;
    sc_out< sc_logic > s_axi_CFG_AWREADY;
    sc_in< sc_uint<C_S_AXI_CFG_ADDR_WIDTH> > s_axi_CFG_AWADDR;
    sc_in< sc_logic > s_axi_CFG_WVALID;
    sc_out< sc_logic > s_axi_CFG_WREADY;
    sc_in< sc_uint<C_S_AXI_CFG_DATA_WIDTH> > s_axi_CFG_WDATA;
    sc_in< sc_uint<C_S_AXI_CFG_DATA_WIDTH/8> > s_axi_CFG_WSTRB;
    sc_in< sc_logic > s_axi_CFG_ARVALID;
    sc_out< sc_logic > s_axi_CFG_ARREADY;
    sc_in< sc_uint<C_S_AXI_CFG_ADDR_WIDTH> > s_axi_CFG_ARADDR;
    sc_out< sc_logic > s_axi_CFG_RVALID;
    sc_in< sc_logic > s_axi_CFG_RREADY;
    sc_out< sc_uint<C_S_AXI_CFG_DATA_WIDTH> > s_axi_CFG_RDATA;
    sc_out< sc_lv<2> > s_axi_CFG_RRESP;
    sc_out< sc_logic > s_axi_CFG_BVALID;
    sc_in< sc_logic > s_axi_CFG_BREADY;
    sc_out< sc_lv<2> > s_axi_CFG_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<64> > ap_var_for_const8;
    sc_signal< sc_lv<8> > ap_var_for_const9;


    // Module declarations
    skip_prefetch(sc_module_name name);
    SC_HAS_PROCESS(skip_prefetch);

    ~skip_prefetch();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    skip_prefetch_CFG_s_axi<C_S_AXI_CFG_ADDR_WIDTH,C_S_AXI_CFG_DATA_WIDTH>* skip_prefetch_CFG_s_axi_U;
    skip_prefetch_A_BUS_m_axi<64,32,5,16,16,16,16,C_M_AXI_A_BUS_ID_WIDTH,C_M_AXI_A_BUS_ADDR_WIDTH,C_M_AXI_A_BUS_DATA_WIDTH,C_M_AXI_A_BUS_AWUSER_WIDTH,C_M_AXI_A_BUS_ARUSER_WIDTH,C_M_AXI_A_BUS_WUSER_WIDTH,C_M_AXI_A_BUS_RUSER_WIDTH,C_M_AXI_A_BUS_BUSER_WIDTH,C_M_AXI_A_BUS_USER_VALUE,C_M_AXI_A_BUS_PROT_VALUE,C_M_AXI_A_BUS_CACHE_VALUE>* skip_prefetch_A_BUS_m_axi_U;
    skip_prefetch_PREF_WINDOW_m_axi<32,32,5,16,16,16,16,C_M_AXI_PREF_WINDOW_ID_WIDTH,C_M_AXI_PREF_WINDOW_ADDR_WIDTH,C_M_AXI_PREF_WINDOW_DATA_WIDTH,C_M_AXI_PREF_WINDOW_AWUSER_WIDTH,C_M_AXI_PREF_WINDOW_ARUSER_WIDTH,C_M_AXI_PREF_WINDOW_WUSER_WIDTH,C_M_AXI_PREF_WINDOW_RUSER_WIDTH,C_M_AXI_PREF_WINDOW_BUSER_WIDTH,C_M_AXI_PREF_WINDOW_USER_VALUE,C_M_AXI_PREF_WINDOW_PROT_VALUE,C_M_AXI_PREF_WINDOW_CACHE_VALUE>* skip_prefetch_PREF_WINDOW_m_axi_U;
    skip_prefetch_buff* buff_U;
    skip_prefetch_mulbkb<1,6,32,34,65>* skip_prefetch_mulbkb_U0;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<29> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > a;
    sc_signal< sc_lv<32> > n;
    sc_signal< sc_logic > A_BUS_blk_n_AR;
    sc_signal< sc_lv<1> > ap_CS_fsm_state11;
    sc_signal< sc_logic > A_BUS_blk_n_R;
    sc_signal< sc_lv<1> > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond_reg_570;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter8_exitcond_reg_570;
    sc_signal< sc_logic > PREF_WINDOW_blk_n_AR;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_logic > PREF_WINDOW_blk_n_R;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_logic > A_BUS_AWREADY;
    sc_signal< sc_logic > A_BUS_WREADY;
    sc_signal< sc_logic > A_BUS_ARVALID;
    sc_signal< sc_logic > A_BUS_ARREADY;
    sc_signal< sc_lv<32> > A_BUS_ARADDR;
    sc_signal< sc_logic > A_BUS_RVALID;
    sc_signal< sc_logic > A_BUS_RREADY;
    sc_signal< sc_lv<64> > A_BUS_RDATA;
    sc_signal< sc_logic > A_BUS_RLAST;
    sc_signal< sc_lv<1> > A_BUS_RID;
    sc_signal< sc_lv<1> > A_BUS_RUSER;
    sc_signal< sc_lv<2> > A_BUS_RRESP;
    sc_signal< sc_logic > A_BUS_BVALID;
    sc_signal< sc_lv<2> > A_BUS_BRESP;
    sc_signal< sc_lv<1> > A_BUS_BID;
    sc_signal< sc_lv<1> > A_BUS_BUSER;
    sc_signal< sc_logic > PREF_WINDOW_AWREADY;
    sc_signal< sc_logic > PREF_WINDOW_WREADY;
    sc_signal< sc_logic > PREF_WINDOW_ARVALID;
    sc_signal< sc_logic > PREF_WINDOW_ARREADY;
    sc_signal< sc_logic > PREF_WINDOW_RVALID;
    sc_signal< sc_logic > PREF_WINDOW_RREADY;
    sc_signal< sc_lv<32> > PREF_WINDOW_RDATA;
    sc_signal< sc_logic > PREF_WINDOW_RLAST;
    sc_signal< sc_lv<1> > PREF_WINDOW_RID;
    sc_signal< sc_lv<1> > PREF_WINDOW_RUSER;
    sc_signal< sc_lv<2> > PREF_WINDOW_RRESP;
    sc_signal< sc_logic > PREF_WINDOW_BVALID;
    sc_signal< sc_lv<2> > PREF_WINDOW_BRESP;
    sc_signal< sc_lv<1> > PREF_WINDOW_BID;
    sc_signal< sc_lv<1> > PREF_WINDOW_BUSER;
    sc_signal< sc_lv<3> > j_reg_209;
    sc_signal< sc_lv<16> > reg_230;
    sc_signal< sc_logic > ap_sig_ioackin_A_BUS_ARREADY;
    sc_signal< sc_lv<30> > n3_reg_473;
    sc_signal< sc_lv<29> > a1_reg_478;
    sc_signal< sc_logic > ap_sig_ioackin_PREF_WINDOW_ARREADY;
    sc_signal< sc_lv<32> > tmp_10_fu_264_p1;
    sc_signal< sc_lv<32> > tmp_10_reg_496;
    sc_signal< sc_lv<31> > tmp_10_cast_fu_267_p1;
    sc_signal< sc_lv<31> > tmp_10_cast_reg_501;
    sc_signal< sc_lv<32> > i_cast2_fu_275_p1;
    sc_signal< sc_lv<32> > i_cast2_reg_506;
    sc_signal< sc_lv<1> > ap_CS_fsm_state10;
    sc_signal< sc_lv<3> > i_1_fu_285_p2;
    sc_signal< sc_lv<3> > i_1_reg_514;
    sc_signal< sc_lv<31> > a2_sum_fu_295_p2;
    sc_signal< sc_lv<31> > a2_sum_reg_519;
    sc_signal< sc_lv<1> > exitcond1_fu_279_p2;
    sc_signal< sc_lv<32> > A_BUS_addr_reg_524;
    sc_signal< sc_lv<16> > tmp_4_reg_530;
    sc_signal< sc_lv<19> > cum_offs_1_fu_338_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > ap_CS_fsm_state21;
    sc_signal< sc_lv<1> > tmp_14_reg_545;
    sc_signal< sc_lv<65> > grp_fu_357_p2;
    sc_signal< sc_lv<65> > mul_reg_551;
    sc_signal< sc_lv<1> > ap_CS_fsm_state26;
    sc_signal< sc_lv<30> > tmp_16_reg_556;
    sc_signal< sc_lv<1> > tmp_7_fu_423_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state27;
    sc_signal< sc_lv<32> > i_2_fu_429_p2;
    sc_signal< sc_lv<32> > i_2_reg_565;
    sc_signal< sc_lv<1> > exitcond_fu_435_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter2_exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter3_exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter4_exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter5_exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter6_exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter7_exitcond_reg_570;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter9_exitcond_reg_570;
    sc_signal< sc_lv<3> > j_1_fu_441_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter1_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter2_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter3_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter4_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter5_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter6_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter7_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter8_buff_addr_1_reg_579;
    sc_signal< sc_lv<3> > ap_pipeline_reg_pp0_iter9_buff_addr_1_reg_579;
    sc_signal< sc_lv<32> > buff_q0;
    sc_signal< sc_lv<32> > buff_load_reg_585;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter2_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter3_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter4_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter5_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter6_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter7_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter8_buff_load_reg_585;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp0_iter9_buff_load_reg_585;
    sc_signal< sc_lv<32> > a2_sum5_fu_452_p2;
    sc_signal< sc_lv<32> > a2_sum5_reg_590;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_lv<3> > buff_address0;
    sc_signal< sc_logic > buff_ce0;
    sc_signal< sc_logic > buff_we0;
    sc_signal< sc_lv<32> > buff_d0;
    sc_signal< sc_logic > buff_ce1;
    sc_signal< sc_logic > buff_we1;
    sc_signal< sc_lv<32> > buff_d1;
    sc_signal< sc_lv<19> > cum_offs_reg_175;
    sc_signal< sc_lv<3> > i_reg_187;
    sc_signal< sc_lv<32> > i1_reg_198;
    sc_signal< sc_lv<1> > ap_CS_fsm_state39;
    sc_signal< sc_lv<32> > j_cast1_fu_447_p1;
    sc_signal< sc_lv<32> > tmp_fu_254_p1;
    sc_signal< sc_lv<32> > a2_sum_cast_fu_300_p1;
    sc_signal< sc_logic > ap_reg_ioackin_PREF_WINDOW_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_A_BUS_ARREADY;
    sc_signal< sc_lv<32> > N_fu_114;
    sc_signal< sc_lv<31> > cum_offs_cast6_cast_fu_291_p1;
    sc_signal< sc_lv<19> > tmp_cast_fu_310_p1;
    sc_signal< sc_lv<19> > tmp_1_fu_314_p2;
    sc_signal< sc_lv<19> > tmp_2_cast_fu_335_p1;
    sc_signal< sc_lv<32> > tmp_5_fu_347_p2;
    sc_signal< sc_lv<34> > grp_fu_357_p1;
    sc_signal< sc_lv<65> > neg_mul_fu_381_p2;
    sc_signal< sc_lv<30> > tmp_15_fu_386_p4;
    sc_signal< sc_lv<32> > tmp_11_fu_396_p1;
    sc_signal< sc_lv<32> > tmp_12_fu_400_p1;
    sc_signal< sc_lv<32> > tmp_13_fu_403_p3;
    sc_signal< sc_lv<32> > neg_ti_fu_410_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_416_p3;
    sc_signal< sc_lv<32> > tmp_9_fu_463_p1;
    sc_signal< sc_lv<29> > ap_NS_fsm;
    sc_signal< bool > ap_condition_629;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<29> ap_ST_fsm_state1;
    static const sc_lv<29> ap_ST_fsm_state2;
    static const sc_lv<29> ap_ST_fsm_state3;
    static const sc_lv<29> ap_ST_fsm_state4;
    static const sc_lv<29> ap_ST_fsm_state5;
    static const sc_lv<29> ap_ST_fsm_state6;
    static const sc_lv<29> ap_ST_fsm_state7;
    static const sc_lv<29> ap_ST_fsm_state8;
    static const sc_lv<29> ap_ST_fsm_state9;
    static const sc_lv<29> ap_ST_fsm_state10;
    static const sc_lv<29> ap_ST_fsm_state11;
    static const sc_lv<29> ap_ST_fsm_state12;
    static const sc_lv<29> ap_ST_fsm_state13;
    static const sc_lv<29> ap_ST_fsm_state14;
    static const sc_lv<29> ap_ST_fsm_state15;
    static const sc_lv<29> ap_ST_fsm_state16;
    static const sc_lv<29> ap_ST_fsm_state17;
    static const sc_lv<29> ap_ST_fsm_state18;
    static const sc_lv<29> ap_ST_fsm_state19;
    static const sc_lv<29> ap_ST_fsm_state20;
    static const sc_lv<29> ap_ST_fsm_state21;
    static const sc_lv<29> ap_ST_fsm_state22;
    static const sc_lv<29> ap_ST_fsm_state23;
    static const sc_lv<29> ap_ST_fsm_state24;
    static const sc_lv<29> ap_ST_fsm_state25;
    static const sc_lv<29> ap_ST_fsm_state26;
    static const sc_lv<29> ap_ST_fsm_state27;
    static const sc_lv<29> ap_ST_fsm_pp0_stage0;
    static const sc_lv<29> ap_ST_fsm_state39;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_A_BUS_USER_VALUE;
    static const int C_M_AXI_A_BUS_PROT_VALUE;
    static const int C_M_AXI_A_BUS_CACHE_VALUE;
    static const int C_M_AXI_PREF_WINDOW_USER_VALUE;
    static const int C_M_AXI_PREF_WINDOW_PROT_VALUE;
    static const int C_M_AXI_PREF_WINDOW_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<19> ap_const_lv19_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFB;
    static const sc_lv<65> ap_const_lv65_19999999A;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<65> ap_const_lv65_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_clk_no_reset_();
    void thread_A_BUS_ARADDR();
    void thread_A_BUS_ARVALID();
    void thread_A_BUS_RREADY();
    void thread_A_BUS_blk_n_AR();
    void thread_A_BUS_blk_n_R();
    void thread_PREF_WINDOW_ARVALID();
    void thread_PREF_WINDOW_RREADY();
    void thread_PREF_WINDOW_blk_n_AR();
    void thread_PREF_WINDOW_blk_n_R();
    void thread_a2_sum5_fu_452_p2();
    void thread_a2_sum_cast_fu_300_p1();
    void thread_a2_sum_fu_295_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_629();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_A_BUS_ARREADY();
    void thread_ap_sig_ioackin_PREF_WINDOW_ARREADY();
    void thread_buff_address0();
    void thread_buff_ce0();
    void thread_buff_ce1();
    void thread_buff_d0();
    void thread_buff_d1();
    void thread_buff_we0();
    void thread_buff_we1();
    void thread_cum_offs_1_fu_338_p2();
    void thread_cum_offs_cast6_cast_fu_291_p1();
    void thread_exitcond1_fu_279_p2();
    void thread_exitcond_fu_435_p2();
    void thread_grp_fu_357_p1();
    void thread_i_1_fu_285_p2();
    void thread_i_2_fu_429_p2();
    void thread_i_cast2_fu_275_p1();
    void thread_j_1_fu_441_p2();
    void thread_j_cast1_fu_447_p1();
    void thread_neg_mul_fu_381_p2();
    void thread_neg_ti_fu_410_p2();
    void thread_tmp_10_cast_fu_267_p1();
    void thread_tmp_10_fu_264_p1();
    void thread_tmp_11_fu_396_p1();
    void thread_tmp_12_fu_400_p1();
    void thread_tmp_13_fu_403_p3();
    void thread_tmp_15_fu_386_p4();
    void thread_tmp_1_fu_314_p2();
    void thread_tmp_2_cast_fu_335_p1();
    void thread_tmp_5_fu_347_p2();
    void thread_tmp_6_fu_416_p3();
    void thread_tmp_7_fu_423_p2();
    void thread_tmp_9_fu_463_p1();
    void thread_tmp_cast_fu_310_p1();
    void thread_tmp_fu_254_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
