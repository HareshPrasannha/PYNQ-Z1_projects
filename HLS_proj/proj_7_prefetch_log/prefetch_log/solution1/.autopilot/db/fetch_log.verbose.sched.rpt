

================================================================
== Vivado HLS Report for 'fetch_log'
================================================================
* Date:           Wed Apr 08 13:21:24 2020

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        prefetch_log
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  128001|  128001|  128002|  128002|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+--------+--------+----------+-----------+-----------+------+----------+
        |          |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  128000|  128000|        16|          -|          -|  8000|    no    |
        +----------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 17
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (tmp)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: log_read (5)  [1/1] 1.00ns
:0  %log_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %log)

ST_1: a_read (6)  [1/1] 1.00ns
:1  %a_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %a)

ST_1: log3 (7)  [1/1] 0.00ns
:2  %log3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %log_read, i32 2, i32 31)

ST_1: tmp_1 (8)  [1/1] 0.00ns
:3  %tmp_1 = zext i30 %log3 to i32

ST_1: LOG_BUS_addr (9)  [1/1] 0.00ns
:4  %LOG_BUS_addr = getelementptr i32* %LOG_BUS, i32 %tmp_1

ST_1: tmp_3 (10)  [1/1] 0.00ns
:5  %tmp_3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %a_read, i32 2, i32 31)

ST_1: tmp_3_cast (11)  [1/1] 0.00ns
:6  %tmp_3_cast = zext i30 %tmp_3 to i31

ST_1: StgValue_25 (12)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %LOG_BUS), !map !24

ST_1: StgValue_26 (13)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i32* %A_BUS), !map !28

ST_1: StgValue_27 (14)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !34

ST_1: StgValue_28 (15)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @fetch_log_str) nounwind

ST_1: StgValue_29 (16)  [1/1] 0.00ns  loc: fetch_log.cpp:5
:11  call void (...)* @_ssdm_op_SpecInterface(i32* %A_BUS, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 64000, [6 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_30 (17)  [1/1] 0.00ns  loc: fetch_log.cpp:5
:12  call void (...)* @_ssdm_op_SpecInterface(i32 %a, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 64000, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_31 (18)  [1/1] 0.00ns  loc: fetch_log.cpp:6
:13  call void (...)* @_ssdm_op_SpecInterface(i32* %LOG_BUS, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [8 x i8]* @p_str4, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_32 (19)  [1/1] 0.00ns  loc: fetch_log.cpp:6
:14  call void (...)* @_ssdm_op_SpecInterface(i32 %log, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_33 (20)  [1/1] 0.00ns  loc: fetch_log.cpp:7
:15  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_34 (21)  [1/1] 1.57ns  loc: fetch_log.cpp:11
:16  br label %1


 <State 2>: 2.44ns
ST_2: ret_val (23)  [1/1] 0.00ns  loc: fetch_log.cpp:16
:0  %ret_val = phi i32 [ 0, %0 ], [ %p_ret_val, %2 ]

ST_2: i (24)  [1/1] 0.00ns
:1  %i = phi i16 [ 0, %0 ], [ %i_1, %2 ]

ST_2: i_cast1 (25)  [1/1] 0.00ns  loc: fetch_log.cpp:11
:2  %i_cast1 = zext i16 %i to i32

ST_2: i_cast1_cast (26)  [1/1] 0.00ns  loc: fetch_log.cpp:11
:3  %i_cast1_cast = zext i16 %i to i31

ST_2: tmp (27)  [1/1] 2.28ns  loc: fetch_log.cpp:11
:4  %tmp = icmp ult i16 %i, -1536

ST_2: empty (28)  [1/1] 0.00ns
:5  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8000, i64 8000, i64 8000) nounwind

ST_2: StgValue_41 (29)  [1/1] 0.00ns  loc: fetch_log.cpp:11
:6  br i1 %tmp, label %2, label %3

ST_2: a2_sum (31)  [1/1] 2.44ns  loc: fetch_log.cpp:13
:0  %a2_sum = add i31 %tmp_3_cast, %i_cast1_cast

ST_2: tmp_2 (43)  [1/1] 2.28ns  loc: fetch_log.cpp:16
:12  %tmp_2 = icmp eq i16 %i, 16

ST_2: i_1 (45)  [1/1] 1.96ns  loc: fetch_log.cpp:11
:14  %i_1 = add i16 %i, 8

ST_2: StgValue_45 (48)  [1/1] 0.00ns  loc: fetch_log.cpp:19
:0  ret i32 %ret_val


 <State 3>: 8.75ns
ST_3: a2_sum_cast (32)  [1/1] 0.00ns  loc: fetch_log.cpp:13
:1  %a2_sum_cast = zext i31 %a2_sum to i32

ST_3: A_BUS_addr (33)  [1/1] 0.00ns  loc: fetch_log.cpp:13
:2  %A_BUS_addr = getelementptr inbounds i32* %A_BUS, i32 %a2_sum_cast

ST_3: temp_req (34)  [7/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 4>: 8.75ns
ST_4: temp_req (34)  [6/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 5>: 8.75ns
ST_5: temp_req (34)  [5/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 6>: 8.75ns
ST_6: temp_req (34)  [4/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 7>: 8.75ns
ST_7: temp_req (34)  [3/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 8>: 8.75ns
ST_8: temp_req (34)  [2/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 9>: 8.75ns
ST_9: temp_req (34)  [1/7] 8.75ns  loc: fetch_log.cpp:13
:3  %temp_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)


 <State 10>: 8.75ns
ST_10: temp (35)  [1/1] 8.75ns  loc: fetch_log.cpp:13
:4  %temp = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %A_BUS_addr)


 <State 11>: 8.75ns
ST_11: ret_val_1 (36)  [1/1] 2.44ns  loc: fetch_log.cpp:14
:5  %ret_val_1 = add nsw i32 %temp, 10

ST_11: A_BUS_addr_req (37)  [1/1] 8.75ns  loc: fetch_log.cpp:14
:6  %A_BUS_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %A_BUS_addr, i32 1)

ST_11: LOG_BUS_addr_req (40)  [1/1] 8.75ns  loc: fetch_log.cpp:15
:9  %LOG_BUS_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %LOG_BUS_addr, i32 1)

ST_11: p_ret_val (44)  [1/1] 1.37ns  loc: fetch_log.cpp:16
:13  %p_ret_val = select i1 %tmp_2, i32 %ret_val_1, i32 %ret_val


 <State 12>: 8.75ns
ST_12: StgValue_60 (38)  [1/1] 8.75ns  loc: fetch_log.cpp:14
:7  call void @_ssdm_op_Write.m_axi.i32P(i32* %A_BUS_addr, i32 %ret_val_1, i4 -1)

ST_12: StgValue_61 (41)  [1/1] 8.75ns  loc: fetch_log.cpp:15
:10  call void @_ssdm_op_Write.m_axi.i32P(i32* %LOG_BUS_addr, i32 %i_cast1, i4 -1)


 <State 13>: 8.75ns
ST_13: A_BUS_addr_resp (39)  [5/5] 8.75ns  loc: fetch_log.cpp:14
:8  %A_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %A_BUS_addr)

ST_13: LOG_BUS_addr_resp (42)  [5/5] 8.75ns  loc: fetch_log.cpp:15
:11  %LOG_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %LOG_BUS_addr)


 <State 14>: 8.75ns
ST_14: A_BUS_addr_resp (39)  [4/5] 8.75ns  loc: fetch_log.cpp:14
:8  %A_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %A_BUS_addr)

ST_14: LOG_BUS_addr_resp (42)  [4/5] 8.75ns  loc: fetch_log.cpp:15
:11  %LOG_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %LOG_BUS_addr)


 <State 15>: 8.75ns
ST_15: A_BUS_addr_resp (39)  [3/5] 8.75ns  loc: fetch_log.cpp:14
:8  %A_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %A_BUS_addr)

ST_15: LOG_BUS_addr_resp (42)  [3/5] 8.75ns  loc: fetch_log.cpp:15
:11  %LOG_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %LOG_BUS_addr)


 <State 16>: 8.75ns
ST_16: A_BUS_addr_resp (39)  [2/5] 8.75ns  loc: fetch_log.cpp:14
:8  %A_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %A_BUS_addr)

ST_16: LOG_BUS_addr_resp (42)  [2/5] 8.75ns  loc: fetch_log.cpp:15
:11  %LOG_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %LOG_BUS_addr)


 <State 17>: 8.75ns
ST_17: A_BUS_addr_resp (39)  [1/5] 8.75ns  loc: fetch_log.cpp:14
:8  %A_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %A_BUS_addr)

ST_17: LOG_BUS_addr_resp (42)  [1/5] 8.75ns  loc: fetch_log.cpp:15
:11  %LOG_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %LOG_BUS_addr)

ST_17: StgValue_72 (46)  [1/1] 0.00ns  loc: fetch_log.cpp:11
:15  br label %1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('ret_val', fetch_log.cpp:16) with incoming values : ('p_ret_val', fetch_log.cpp:16) [23]  (1.57 ns)

 <State 2>: 2.44ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', fetch_log.cpp:11) [24]  (0 ns)
	'add' operation ('a2_sum', fetch_log.cpp:13) [31]  (2.44 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr', fetch_log.cpp:13) [33]  (0 ns)
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:13) [34]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (fetch_log.cpp:13) [35]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (fetch_log.cpp:14) [37]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus write on port 'A_BUS' (fetch_log.cpp:14) [38]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (fetch_log.cpp:14) [39]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (fetch_log.cpp:14) [39]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (fetch_log.cpp:14) [39]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (fetch_log.cpp:14) [39]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus access on port 'A_BUS' (fetch_log.cpp:14) [39]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
