-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fetch_readalloc is
generic (
    C_M_AXI_A_BUS_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_A_BUS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_A_BUS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_A_BUS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_BUS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_BUS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_A_BUS_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LOG_BUS_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_LOG_BUS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_LOG_BUS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LOG_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_LOG_BUS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LOG_BUS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LOG_BUS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_LOG_BUS_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_A_BUS_USER_VALUE : INTEGER := 0;
    C_M_AXI_LOG_BUS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_A_BUS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_LOG_BUS_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_A_BUS_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_LOG_BUS_USER_VALUE : INTEGER := 0 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_A_BUS_AWVALID : OUT STD_LOGIC;
    m_axi_A_BUS_AWREADY : IN STD_LOGIC;
    m_axi_A_BUS_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_A_BUS_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ID_WIDTH-1 downto 0);
    m_axi_A_BUS_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_A_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_BUS_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_AWUSER_WIDTH-1 downto 0);
    m_axi_A_BUS_WVALID : OUT STD_LOGIC;
    m_axi_A_BUS_WREADY : IN STD_LOGIC;
    m_axi_A_BUS_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_DATA_WIDTH-1 downto 0);
    m_axi_A_BUS_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_DATA_WIDTH/8-1 downto 0);
    m_axi_A_BUS_WLAST : OUT STD_LOGIC;
    m_axi_A_BUS_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ID_WIDTH-1 downto 0);
    m_axi_A_BUS_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_WUSER_WIDTH-1 downto 0);
    m_axi_A_BUS_ARVALID : OUT STD_LOGIC;
    m_axi_A_BUS_ARREADY : IN STD_LOGIC;
    m_axi_A_BUS_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_A_BUS_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ID_WIDTH-1 downto 0);
    m_axi_A_BUS_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_A_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_A_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_A_BUS_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ARUSER_WIDTH-1 downto 0);
    m_axi_A_BUS_RVALID : IN STD_LOGIC;
    m_axi_A_BUS_RREADY : OUT STD_LOGIC;
    m_axi_A_BUS_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_A_BUS_DATA_WIDTH-1 downto 0);
    m_axi_A_BUS_RLAST : IN STD_LOGIC;
    m_axi_A_BUS_RID : IN STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ID_WIDTH-1 downto 0);
    m_axi_A_BUS_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_A_BUS_RUSER_WIDTH-1 downto 0);
    m_axi_A_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BUS_BVALID : IN STD_LOGIC;
    m_axi_A_BUS_BREADY : OUT STD_LOGIC;
    m_axi_A_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_A_BUS_BID : IN STD_LOGIC_VECTOR (C_M_AXI_A_BUS_ID_WIDTH-1 downto 0);
    m_axi_A_BUS_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_A_BUS_BUSER_WIDTH-1 downto 0);
    m_axi_LOG_BUS_AWVALID : OUT STD_LOGIC;
    m_axi_LOG_BUS_AWREADY : IN STD_LOGIC;
    m_axi_LOG_BUS_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_LOG_BUS_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ID_WIDTH-1 downto 0);
    m_axi_LOG_BUS_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_LOG_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_LOG_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_LOG_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_LOG_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_LOG_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_LOG_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_LOG_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_LOG_BUS_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_AWUSER_WIDTH-1 downto 0);
    m_axi_LOG_BUS_WVALID : OUT STD_LOGIC;
    m_axi_LOG_BUS_WREADY : IN STD_LOGIC;
    m_axi_LOG_BUS_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_DATA_WIDTH-1 downto 0);
    m_axi_LOG_BUS_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_DATA_WIDTH/8-1 downto 0);
    m_axi_LOG_BUS_WLAST : OUT STD_LOGIC;
    m_axi_LOG_BUS_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ID_WIDTH-1 downto 0);
    m_axi_LOG_BUS_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_WUSER_WIDTH-1 downto 0);
    m_axi_LOG_BUS_ARVALID : OUT STD_LOGIC;
    m_axi_LOG_BUS_ARREADY : IN STD_LOGIC;
    m_axi_LOG_BUS_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_LOG_BUS_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ID_WIDTH-1 downto 0);
    m_axi_LOG_BUS_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_LOG_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_LOG_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_LOG_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_LOG_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_LOG_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_LOG_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_LOG_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_LOG_BUS_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ARUSER_WIDTH-1 downto 0);
    m_axi_LOG_BUS_RVALID : IN STD_LOGIC;
    m_axi_LOG_BUS_RREADY : OUT STD_LOGIC;
    m_axi_LOG_BUS_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_DATA_WIDTH-1 downto 0);
    m_axi_LOG_BUS_RLAST : IN STD_LOGIC;
    m_axi_LOG_BUS_RID : IN STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ID_WIDTH-1 downto 0);
    m_axi_LOG_BUS_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_RUSER_WIDTH-1 downto 0);
    m_axi_LOG_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_LOG_BUS_BVALID : IN STD_LOGIC;
    m_axi_LOG_BUS_BREADY : OUT STD_LOGIC;
    m_axi_LOG_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_LOG_BUS_BID : IN STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_ID_WIDTH-1 downto 0);
    m_axi_LOG_BUS_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_LOG_BUS_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of fetch_readalloc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fetch_readalloc,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=76801,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3210,HLS_SYN_LUT=4652}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (60 downto 0) := "0000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (60 downto 0) := "0000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (60 downto 0) := "0000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (60 downto 0) := "0000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (60 downto 0) := "0000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (60 downto 0) := "0000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (60 downto 0) := "0001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (60 downto 0) := "0010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (60 downto 0) := "0100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (60 downto 0) := "1000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv16_FA00 : STD_LOGIC_VECTOR (15 downto 0) := "1111101000000000";
    constant ap_const_lv16_31 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv16_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000111";
    constant ap_const_lv16_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_const_lv16_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001001";
    constant ap_const_lv16_A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    constant ap_const_lv16_B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001011";
    constant ap_const_lv16_C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001100";
    constant ap_const_lv16_D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001101";
    constant ap_const_lv16_E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001110";
    constant ap_const_lv16_F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001111";
    constant ap_const_lv16_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_const_lv16_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010001";
    constant ap_const_lv16_12 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010010";
    constant ap_const_lv16_13 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010011";
    constant ap_const_lv16_14 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010100";
    constant ap_const_lv16_15 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010101";
    constant ap_const_lv16_16 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010110";
    constant ap_const_lv16_17 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010111";
    constant ap_const_lv16_18 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011000";
    constant ap_const_lv16_19 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011001";
    constant ap_const_lv16_1A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011010";
    constant ap_const_lv16_1B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011011";
    constant ap_const_lv16_1C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011100";
    constant ap_const_lv16_1D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011101";
    constant ap_const_lv16_1E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011110";
    constant ap_const_lv16_1F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000011111";
    constant ap_const_lv16_20 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_const_lv16_21 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100001";
    constant ap_const_lv16_22 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100010";
    constant ap_const_lv16_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100011";
    constant ap_const_lv16_24 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100100";
    constant ap_const_lv16_25 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100101";
    constant ap_const_lv16_26 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100110";
    constant ap_const_lv16_27 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100111";
    constant ap_const_lv16_28 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101000";
    constant ap_const_lv16_29 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101001";
    constant ap_const_lv16_2A : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101010";
    constant ap_const_lv16_2B : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101011";
    constant ap_const_lv16_2C : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101100";
    constant ap_const_lv16_2D : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101101";
    constant ap_const_lv16_2E : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101110";
    constant ap_const_lv16_2F : STD_LOGIC_VECTOR (15 downto 0) := "0000000000101111";
    constant ap_const_lv16_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110000";
    constant ap_const_lv16_32 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal a : STD_LOGIC_VECTOR (31 downto 0);
    signal log : STD_LOGIC_VECTOR (31 downto 0);
    signal A_BUS_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal A_BUS_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state52 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal LOG_BUS_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal LOG_BUS_blk_n_W : STD_LOGIC;
    signal LOG_BUS_blk_n_B : STD_LOGIC;
    signal A_BUS_AWREADY : STD_LOGIC;
    signal A_BUS_WREADY : STD_LOGIC;
    signal A_BUS_ARVALID : STD_LOGIC;
    signal A_BUS_ARREADY : STD_LOGIC;
    signal A_BUS_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal A_BUS_RVALID : STD_LOGIC;
    signal A_BUS_RREADY : STD_LOGIC;
    signal A_BUS_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal A_BUS_RLAST : STD_LOGIC;
    signal A_BUS_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal A_BUS_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal A_BUS_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal A_BUS_BVALID : STD_LOGIC;
    signal A_BUS_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal A_BUS_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal A_BUS_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal LOG_BUS_AWVALID : STD_LOGIC;
    signal LOG_BUS_AWREADY : STD_LOGIC;
    signal LOG_BUS_WVALID : STD_LOGIC;
    signal LOG_BUS_WREADY : STD_LOGIC;
    signal LOG_BUS_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal LOG_BUS_ARREADY : STD_LOGIC;
    signal LOG_BUS_RVALID : STD_LOGIC;
    signal LOG_BUS_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal LOG_BUS_RLAST : STD_LOGIC;
    signal LOG_BUS_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal LOG_BUS_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal LOG_BUS_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal LOG_BUS_BVALID : STD_LOGIC;
    signal LOG_BUS_BREADY : STD_LOGIC;
    signal LOG_BUS_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal LOG_BUS_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal LOG_BUS_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_231 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_ioackin_A_BUS_ARREADY : STD_LOGIC;
    signal reg_235 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_239 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_273 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_277 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_305 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_309 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal grp_fu_313_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_325 : STD_LOGIC_VECTOR (31 downto 0);
    signal LOG_BUS_addr_reg_1639 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast_fu_365_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_cast_reg_1644 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum_fu_379_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum_reg_1701 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_ioackin_LOG_BUS_AWREADY : STD_LOGIC;
    signal i_1_48_fu_384_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_48_reg_1706 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_ioackin_LOG_BUS_WREADY : STD_LOGIC;
    signal a2_sum5_fu_410_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum5_reg_1718 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum6_fu_439_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum6_reg_1729 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum7_fu_464_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum7_reg_1740 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum8_fu_489_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum8_reg_1751 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum9_fu_514_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum9_reg_1762 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum1_fu_539_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum1_reg_1773 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum2_fu_564_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum2_reg_1784 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum3_fu_589_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum3_reg_1795 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum4_fu_614_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum4_reg_1806 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum10_fu_639_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum10_reg_1817 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum11_fu_664_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum11_reg_1828 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum12_fu_689_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum12_reg_1839 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum13_fu_714_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum13_reg_1850 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum14_fu_739_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum14_reg_1861 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum15_fu_764_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum15_reg_1872 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum16_fu_789_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum16_reg_1883 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum17_fu_814_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum17_reg_1894 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum18_fu_839_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum18_reg_1905 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum19_fu_864_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum19_reg_1916 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum20_fu_889_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum20_reg_1927 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum21_fu_914_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum21_reg_1938 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum22_fu_939_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum22_reg_1949 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum23_fu_964_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum23_reg_1960 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum24_fu_989_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum24_reg_1971 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum25_fu_1014_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum25_reg_1982 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum26_fu_1039_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum26_reg_1993 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum27_fu_1064_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum27_reg_2004 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum28_fu_1089_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum28_reg_2015 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum29_fu_1114_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum29_reg_2026 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum30_fu_1139_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum30_reg_2037 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum31_fu_1164_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum31_reg_2048 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum32_fu_1189_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum32_reg_2059 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum33_fu_1214_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum33_reg_2070 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum34_fu_1239_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum34_reg_2081 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2086 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum35_fu_1264_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum35_reg_2097 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum36_fu_1289_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum36_reg_2108 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum37_fu_1314_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum37_reg_2119 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum38_fu_1339_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum38_reg_2130 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum39_fu_1364_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum39_reg_2141 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum40_fu_1389_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum40_reg_2152 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum41_fu_1414_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum41_reg_2163 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum42_fu_1439_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum42_reg_2174 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum43_fu_1464_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum43_reg_2185 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum44_fu_1489_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum44_reg_2196 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum45_fu_1514_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum45_reg_2207 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum46_fu_1539_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum46_reg_2218 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum47_fu_1564_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum47_reg_2229 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum48_fu_1579_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum48_reg_2234 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum49_fu_1587_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal a2_sum49_reg_2239 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_49_fu_1592_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_49_reg_2244 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_1_s_fu_1633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal sum_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_219 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum_cast_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum5_cast_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum6_cast_fu_444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum7_cast_fu_469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum8_cast_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum9_cast_fu_519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum1_cast_fu_544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum2_cast_fu_569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum3_cast_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum4_cast_fu_619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum10_cast_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum11_cast_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum12_cast_fu_694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum13_cast_fu_719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum14_cast_fu_744_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum15_cast_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum16_cast_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum17_cast_fu_819_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum18_cast_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum19_cast_fu_869_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum20_cast_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum21_cast_fu_919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum22_cast_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum23_cast_fu_969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum24_cast_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum25_cast_fu_1019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum26_cast_fu_1044_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum27_cast_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum28_cast_fu_1094_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum29_cast_fu_1119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum30_cast_fu_1144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum31_cast_fu_1169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum32_cast_fu_1194_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum33_cast_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum34_cast_fu_1244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum35_cast_fu_1269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum36_cast_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum37_cast_fu_1319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum38_cast_fu_1344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum39_cast_fu_1369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum40_cast_fu_1394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum41_cast_fu_1419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum42_cast_fu_1444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum43_cast_fu_1469_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum44_cast_fu_1494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum45_cast_fu_1519_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum46_cast_fu_1544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum47_cast_fu_1598_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum48_cast_fu_1608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_sum49_cast_fu_1618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_LOG_BUS_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_LOG_BUS_WREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_A_BUS_ARREADY : STD_LOGIC := '0';
    signal grp_fu_243_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_255_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal log3_fu_335_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_2_fu_355_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal i_cast_cast_fu_369_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_s_fu_400_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_cast_cast_fu_406_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_1_fu_429_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_1_cast_cast_fu_435_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_2_fu_454_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_2_cast_cast_fu_460_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_3_fu_479_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_3_cast_cast_fu_485_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_4_fu_504_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_4_cast_cast_fu_510_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_5_fu_529_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_5_cast_cast_fu_535_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_6_fu_554_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_6_cast_cast_fu_560_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_7_fu_579_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_7_cast_cast_fu_585_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_8_fu_604_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_8_cast_cast_fu_610_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_9_fu_629_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_9_cast_cast_fu_635_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_10_fu_654_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_10_cast_cast_fu_660_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_11_fu_679_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_11_cast_cast_fu_685_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_12_fu_704_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_12_cast_cast_fu_710_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_13_fu_729_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_13_cast_cast_fu_735_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_14_fu_754_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_14_cast_cast_fu_760_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_15_fu_779_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_15_cast_cast_fu_785_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_16_fu_804_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_16_cast_cast_fu_810_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_17_fu_829_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_17_cast_cast_fu_835_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_18_fu_854_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_18_cast_cast_fu_860_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_19_fu_879_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_19_cast_cast_fu_885_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_20_fu_904_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_20_cast_cast_fu_910_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_21_fu_929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_21_cast_cast_fu_935_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_22_fu_954_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_22_cast_cast_fu_960_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_23_fu_979_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_23_cast_cast_fu_985_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_24_fu_1004_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_24_cast_cast_fu_1010_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_25_fu_1029_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_25_cast_cast_fu_1035_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_26_fu_1054_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_26_cast_cast_fu_1060_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_27_fu_1079_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_27_cast_cast_fu_1085_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_28_fu_1104_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_28_cast_cast_fu_1110_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_29_fu_1129_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_29_cast_cast_fu_1135_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_30_fu_1154_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_30_cast_cast_fu_1160_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_31_fu_1179_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_31_cast_cast_fu_1185_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_32_fu_1204_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_32_cast_cast_fu_1210_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_33_fu_1229_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_33_cast_cast_fu_1235_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_34_fu_1254_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_34_cast_cast_fu_1260_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_35_fu_1279_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_35_cast_cast_fu_1285_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_36_fu_1304_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_36_cast_cast_fu_1310_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_37_fu_1329_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_37_cast_cast_fu_1335_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_38_fu_1354_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_38_cast_cast_fu_1360_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_39_fu_1379_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_39_cast_cast_fu_1385_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_40_fu_1404_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_40_cast_cast_fu_1410_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_41_fu_1429_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_41_cast_cast_fu_1435_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_42_fu_1454_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_42_cast_cast_fu_1460_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_43_fu_1479_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_43_cast_cast_fu_1485_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_44_fu_1504_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_44_cast_cast_fu_1510_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_45_fu_1529_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_45_cast_cast_fu_1535_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_46_fu_1554_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_46_cast_cast_fu_1560_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_47_fu_1569_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_47_cast_cast_fu_1575_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_48_cast_cast_fu_1584_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_s_fu_1628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_return : STD_LOGIC_VECTOR (31 downto 0);

    component fetch_readalloc_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (31 downto 0);
        a : OUT STD_LOGIC_VECTOR (31 downto 0);
        log : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fetch_readalloc_A_BUS_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fetch_readalloc_LOG_BUS_m_axi IS
    generic (
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    fetch_readalloc_AXILiteS_s_axi_U : component fetch_readalloc_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => sum_reg_207,
        a => a,
        log => log);

    fetch_readalloc_A_BUS_m_axi_U : component fetch_readalloc_A_BUS_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_A_BUS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_A_BUS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_A_BUS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_A_BUS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_A_BUS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_A_BUS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_A_BUS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_A_BUS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_A_BUS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_A_BUS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_A_BUS_CACHE_VALUE)
    port map (
        AWVALID => m_axi_A_BUS_AWVALID,
        AWREADY => m_axi_A_BUS_AWREADY,
        AWADDR => m_axi_A_BUS_AWADDR,
        AWID => m_axi_A_BUS_AWID,
        AWLEN => m_axi_A_BUS_AWLEN,
        AWSIZE => m_axi_A_BUS_AWSIZE,
        AWBURST => m_axi_A_BUS_AWBURST,
        AWLOCK => m_axi_A_BUS_AWLOCK,
        AWCACHE => m_axi_A_BUS_AWCACHE,
        AWPROT => m_axi_A_BUS_AWPROT,
        AWQOS => m_axi_A_BUS_AWQOS,
        AWREGION => m_axi_A_BUS_AWREGION,
        AWUSER => m_axi_A_BUS_AWUSER,
        WVALID => m_axi_A_BUS_WVALID,
        WREADY => m_axi_A_BUS_WREADY,
        WDATA => m_axi_A_BUS_WDATA,
        WSTRB => m_axi_A_BUS_WSTRB,
        WLAST => m_axi_A_BUS_WLAST,
        WID => m_axi_A_BUS_WID,
        WUSER => m_axi_A_BUS_WUSER,
        ARVALID => m_axi_A_BUS_ARVALID,
        ARREADY => m_axi_A_BUS_ARREADY,
        ARADDR => m_axi_A_BUS_ARADDR,
        ARID => m_axi_A_BUS_ARID,
        ARLEN => m_axi_A_BUS_ARLEN,
        ARSIZE => m_axi_A_BUS_ARSIZE,
        ARBURST => m_axi_A_BUS_ARBURST,
        ARLOCK => m_axi_A_BUS_ARLOCK,
        ARCACHE => m_axi_A_BUS_ARCACHE,
        ARPROT => m_axi_A_BUS_ARPROT,
        ARQOS => m_axi_A_BUS_ARQOS,
        ARREGION => m_axi_A_BUS_ARREGION,
        ARUSER => m_axi_A_BUS_ARUSER,
        RVALID => m_axi_A_BUS_RVALID,
        RREADY => m_axi_A_BUS_RREADY,
        RDATA => m_axi_A_BUS_RDATA,
        RLAST => m_axi_A_BUS_RLAST,
        RID => m_axi_A_BUS_RID,
        RUSER => m_axi_A_BUS_RUSER,
        RRESP => m_axi_A_BUS_RRESP,
        BVALID => m_axi_A_BUS_BVALID,
        BREADY => m_axi_A_BUS_BREADY,
        BRESP => m_axi_A_BUS_BRESP,
        BID => m_axi_A_BUS_BID,
        BUSER => m_axi_A_BUS_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => A_BUS_ARVALID,
        I_ARREADY => A_BUS_ARREADY,
        I_ARADDR => A_BUS_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => A_BUS_RVALID,
        I_RREADY => A_BUS_RREADY,
        I_RDATA => A_BUS_RDATA,
        I_RID => A_BUS_RID,
        I_RUSER => A_BUS_RUSER,
        I_RRESP => A_BUS_RRESP,
        I_RLAST => A_BUS_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => A_BUS_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => A_BUS_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => A_BUS_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => A_BUS_BRESP,
        I_BID => A_BUS_BID,
        I_BUSER => A_BUS_BUSER);

    fetch_readalloc_LOG_BUS_m_axi_U : component fetch_readalloc_LOG_BUS_m_axi
    generic map (
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_LOG_BUS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_LOG_BUS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_LOG_BUS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_LOG_BUS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_LOG_BUS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_LOG_BUS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_LOG_BUS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_LOG_BUS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_LOG_BUS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_LOG_BUS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_LOG_BUS_CACHE_VALUE)
    port map (
        AWVALID => m_axi_LOG_BUS_AWVALID,
        AWREADY => m_axi_LOG_BUS_AWREADY,
        AWADDR => m_axi_LOG_BUS_AWADDR,
        AWID => m_axi_LOG_BUS_AWID,
        AWLEN => m_axi_LOG_BUS_AWLEN,
        AWSIZE => m_axi_LOG_BUS_AWSIZE,
        AWBURST => m_axi_LOG_BUS_AWBURST,
        AWLOCK => m_axi_LOG_BUS_AWLOCK,
        AWCACHE => m_axi_LOG_BUS_AWCACHE,
        AWPROT => m_axi_LOG_BUS_AWPROT,
        AWQOS => m_axi_LOG_BUS_AWQOS,
        AWREGION => m_axi_LOG_BUS_AWREGION,
        AWUSER => m_axi_LOG_BUS_AWUSER,
        WVALID => m_axi_LOG_BUS_WVALID,
        WREADY => m_axi_LOG_BUS_WREADY,
        WDATA => m_axi_LOG_BUS_WDATA,
        WSTRB => m_axi_LOG_BUS_WSTRB,
        WLAST => m_axi_LOG_BUS_WLAST,
        WID => m_axi_LOG_BUS_WID,
        WUSER => m_axi_LOG_BUS_WUSER,
        ARVALID => m_axi_LOG_BUS_ARVALID,
        ARREADY => m_axi_LOG_BUS_ARREADY,
        ARADDR => m_axi_LOG_BUS_ARADDR,
        ARID => m_axi_LOG_BUS_ARID,
        ARLEN => m_axi_LOG_BUS_ARLEN,
        ARSIZE => m_axi_LOG_BUS_ARSIZE,
        ARBURST => m_axi_LOG_BUS_ARBURST,
        ARLOCK => m_axi_LOG_BUS_ARLOCK,
        ARCACHE => m_axi_LOG_BUS_ARCACHE,
        ARPROT => m_axi_LOG_BUS_ARPROT,
        ARQOS => m_axi_LOG_BUS_ARQOS,
        ARREGION => m_axi_LOG_BUS_ARREGION,
        ARUSER => m_axi_LOG_BUS_ARUSER,
        RVALID => m_axi_LOG_BUS_RVALID,
        RREADY => m_axi_LOG_BUS_RREADY,
        RDATA => m_axi_LOG_BUS_RDATA,
        RLAST => m_axi_LOG_BUS_RLAST,
        RID => m_axi_LOG_BUS_RID,
        RUSER => m_axi_LOG_BUS_RUSER,
        RRESP => m_axi_LOG_BUS_RRESP,
        BVALID => m_axi_LOG_BUS_BVALID,
        BREADY => m_axi_LOG_BUS_BREADY,
        BRESP => m_axi_LOG_BUS_BRESP,
        BID => m_axi_LOG_BUS_BID,
        BUSER => m_axi_LOG_BUS_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => LOG_BUS_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => LOG_BUS_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => LOG_BUS_RDATA,
        I_RID => LOG_BUS_RID,
        I_RUSER => LOG_BUS_RUSER,
        I_RRESP => LOG_BUS_RRESP,
        I_RLAST => LOG_BUS_RLAST,
        I_AWVALID => LOG_BUS_AWVALID,
        I_AWREADY => LOG_BUS_AWREADY,
        I_AWADDR => LOG_BUS_addr_reg_1639,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => LOG_BUS_WVALID,
        I_WREADY => LOG_BUS_WREADY,
        I_WDATA => LOG_BUS_WDATA,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => LOG_BUS_BVALID,
        I_BREADY => LOG_BUS_BREADY,
        I_BRESP => LOG_BUS_BRESP,
        I_BID => LOG_BUS_BID,
        I_BUSER => LOG_BUS_BUSER);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_A_BUS_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_A_BUS_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state22) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state35) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state38) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state44) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state50) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state11) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state23) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state29) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state42) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state45) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state48) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state51) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state21) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state27) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state30) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state37) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state43) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state49) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state3) and not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_WREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) or ((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) or ((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (LOG_BUS_BVALID = ap_const_logic_0)))) or ((ap_const_lv1_1 = ap_CS_fsm_state9) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then 
                    ap_reg_ioackin_A_BUS_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_logic_1 = A_BUS_ARREADY) and not((LOG_BUS_BVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state11) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state12) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state21) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state22) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state23) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state27) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state29) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state30) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state35) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state37) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state38) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state42) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state43) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state44) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state45) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state48) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state49) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state50) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state51) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_1 = A_BUS_ARREADY)))) then 
                    ap_reg_ioackin_A_BUS_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_LOG_BUS_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_LOG_BUS_AWREADY <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (exitcond_fu_373_p2 = ap_const_lv1_0))) then
                    if (not(((exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_AWREADY)))) then 
                        ap_reg_ioackin_LOG_BUS_AWREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = LOG_BUS_AWREADY)) then 
                        ap_reg_ioackin_LOG_BUS_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_LOG_BUS_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_LOG_BUS_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_state3)) then
                    if (not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_WREADY)))) then 
                        ap_reg_ioackin_LOG_BUS_WREADY <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = LOG_BUS_WREADY)) then 
                        ap_reg_ioackin_LOG_BUS_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    i_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
                i_reg_219 <= i_1_49_reg_2244;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_219 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    sum_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state61))) then 
                sum_reg_207 <= sum_1_s_fu_1633_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                sum_reg_207 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                    LOG_BUS_addr_reg_1639(29 downto 0) <= tmp_1_fu_345_p1(29 downto 0);
                    tmp_2_cast_reg_1644(29 downto 0) <= tmp_2_cast_fu_365_p1(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum10_reg_1817 <= a2_sum10_fu_639_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum11_reg_1828 <= a2_sum11_fu_664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum12_reg_1839 <= a2_sum12_fu_689_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum13_reg_1850 <= a2_sum13_fu_714_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum14_reg_1861 <= a2_sum14_fu_739_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum15_reg_1872 <= a2_sum15_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state18) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum16_reg_1883 <= a2_sum16_fu_789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state19) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum17_reg_1894 <= a2_sum17_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state20) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum18_reg_1905 <= a2_sum18_fu_839_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state21) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum19_reg_1916 <= a2_sum19_fu_864_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (LOG_BUS_BVALID = ap_const_logic_0))))) then
                a2_sum1_reg_1773 <= a2_sum1_fu_539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state22) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum20_reg_1927 <= a2_sum20_fu_889_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state23) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum21_reg_1938 <= a2_sum21_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state24) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum22_reg_1949 <= a2_sum22_fu_939_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state25) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum23_reg_1960 <= a2_sum23_fu_964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state26) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum24_reg_1971 <= a2_sum24_fu_989_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state27) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum25_reg_1982 <= a2_sum25_fu_1014_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state28) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum26_reg_1993 <= a2_sum26_fu_1039_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state29) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum27_reg_2004 <= a2_sum27_fu_1064_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state30) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum28_reg_2015 <= a2_sum28_fu_1089_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state31) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum29_reg_2026 <= a2_sum29_fu_1114_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state9) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                a2_sum2_reg_1784 <= a2_sum2_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state32) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum30_reg_2037 <= a2_sum30_fu_1139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state33) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum31_reg_2048 <= a2_sum31_fu_1164_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state34) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum32_reg_2059 <= a2_sum32_fu_1189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state35) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum33_reg_2070 <= a2_sum33_fu_1214_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state36) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum34_reg_2081 <= a2_sum34_fu_1239_p2;
                tmp_reg_2086 <= grp_fu_329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state37) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum35_reg_2097 <= a2_sum35_fu_1264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state38) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum36_reg_2108 <= a2_sum36_fu_1289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state39) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum37_reg_2119 <= a2_sum37_fu_1314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state40) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum38_reg_2130 <= a2_sum38_fu_1339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state41) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum39_reg_2141 <= a2_sum39_fu_1364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state10) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum3_reg_1795 <= a2_sum3_fu_589_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state42) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum40_reg_2152 <= a2_sum40_fu_1389_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state43) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum41_reg_2163 <= a2_sum41_fu_1414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state44) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum42_reg_2174 <= a2_sum42_fu_1439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state45) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum43_reg_2185 <= a2_sum43_fu_1464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state46) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum44_reg_2196 <= a2_sum44_fu_1489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state47) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum45_reg_2207 <= a2_sum45_fu_1514_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state48) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum46_reg_2218 <= a2_sum46_fu_1539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state49) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum47_reg_2229 <= a2_sum47_fu_1564_p2;
                a2_sum48_reg_2234 <= a2_sum48_fu_1579_p2;
                a2_sum49_reg_2239 <= a2_sum49_fu_1587_p2;
                i_1_49_reg_2244 <= i_1_49_fu_1592_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state11) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))))) then
                a2_sum4_reg_1806 <= a2_sum4_fu_614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state3) and not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_WREADY))))) then
                a2_sum5_reg_1718 <= a2_sum5_fu_410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state4) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                a2_sum6_reg_1729 <= a2_sum6_fu_439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state5) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                a2_sum7_reg_1740 <= a2_sum7_fu_464_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                a2_sum8_reg_1751 <= a2_sum8_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state7) and not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                a2_sum9_reg_1762 <= a2_sum9_fu_514_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (exitcond_fu_373_p2 = ap_const_lv1_0) and not(((exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_AWREADY))))) then
                a2_sum_reg_1701 <= a2_sum_fu_379_p2;
                i_1_48_reg_1706 <= i_1_48_fu_384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state22) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state35) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state38) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state44) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state50) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state56) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state58) and not((A_BUS_RVALID = ap_const_logic_0))))) then
                reg_231 <= A_BUS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state11) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state23) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state29) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state42) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state45) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state48) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state51) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state54) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state57) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state59) and not((A_BUS_RVALID = ap_const_logic_0))))) then
                reg_235 <= A_BUS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state21) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state27) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state30) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state37) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state43) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state49) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state55) and not((A_BUS_RVALID = ap_const_logic_0))))) then
                reg_239 <= A_BUS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state38) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state44) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state50) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state56) and not((A_BUS_RVALID = ap_const_logic_0))))) then
                reg_273 <= grp_fu_249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state33) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state58) and not((A_BUS_RVALID = ap_const_logic_0))))) then
                reg_277 <= grp_fu_267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and not((A_BUS_RVALID = ap_const_logic_0))))) then
                reg_305 <= grp_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state35) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state60)))) then
                reg_309 <= grp_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_state22) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))))) then
                reg_325 <= grp_fu_313_p2;
            end if;
        end if;
    end process;
    LOG_BUS_addr_reg_1639(31 downto 30) <= "00";
    tmp_2_cast_reg_1644(30) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_fu_373_p2, A_BUS_RVALID, LOG_BUS_BVALID, ap_sig_ioackin_A_BUS_ARREADY, ap_sig_ioackin_LOG_BUS_AWREADY, ap_sig_ioackin_LOG_BUS_WREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_AWREADY))) and not((exitcond_fu_373_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((exitcond_fu_373_p2 = ap_const_lv1_0) and not(((exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_AWREADY))))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_WREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (LOG_BUS_BVALID = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (not((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                if (not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state58 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                if (not((A_BUS_RVALID = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_BUS_ARADDR_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state8, ap_CS_fsm_state15, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, A_BUS_RVALID, LOG_BUS_BVALID, a2_sum_cast_fu_390_p1, a2_sum5_cast_fu_419_p1, a2_sum6_cast_fu_444_p1, a2_sum7_cast_fu_469_p1, a2_sum8_cast_fu_494_p1, a2_sum9_cast_fu_519_p1, a2_sum1_cast_fu_544_p1, a2_sum2_cast_fu_569_p1, a2_sum3_cast_fu_594_p1, a2_sum4_cast_fu_619_p1, a2_sum10_cast_fu_644_p1, a2_sum11_cast_fu_669_p1, a2_sum12_cast_fu_694_p1, a2_sum13_cast_fu_719_p1, a2_sum14_cast_fu_744_p1, a2_sum15_cast_fu_769_p1, a2_sum16_cast_fu_794_p1, a2_sum17_cast_fu_819_p1, a2_sum18_cast_fu_844_p1, a2_sum19_cast_fu_869_p1, a2_sum20_cast_fu_894_p1, a2_sum21_cast_fu_919_p1, a2_sum22_cast_fu_944_p1, a2_sum23_cast_fu_969_p1, a2_sum24_cast_fu_994_p1, a2_sum25_cast_fu_1019_p1, a2_sum26_cast_fu_1044_p1, a2_sum27_cast_fu_1069_p1, a2_sum28_cast_fu_1094_p1, a2_sum29_cast_fu_1119_p1, a2_sum30_cast_fu_1144_p1, a2_sum31_cast_fu_1169_p1, a2_sum32_cast_fu_1194_p1, a2_sum33_cast_fu_1219_p1, a2_sum34_cast_fu_1244_p1, a2_sum35_cast_fu_1269_p1, a2_sum36_cast_fu_1294_p1, a2_sum37_cast_fu_1319_p1, a2_sum38_cast_fu_1344_p1, a2_sum39_cast_fu_1369_p1, a2_sum40_cast_fu_1394_p1, a2_sum41_cast_fu_1419_p1, a2_sum42_cast_fu_1444_p1, a2_sum43_cast_fu_1469_p1, a2_sum44_cast_fu_1494_p1, a2_sum45_cast_fu_1519_p1, a2_sum46_cast_fu_1544_p1, a2_sum47_cast_fu_1598_p1, a2_sum48_cast_fu_1608_p1, a2_sum49_cast_fu_1618_p1, ap_reg_ioackin_A_BUS_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) then
            if (((ap_const_lv1_1 = ap_CS_fsm_state52) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum49_cast_fu_1618_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state51) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum48_cast_fu_1608_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state50) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum47_cast_fu_1598_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state49) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum46_cast_fu_1544_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state48) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum45_cast_fu_1519_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state47) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum44_cast_fu_1494_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state46) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum43_cast_fu_1469_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state45) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum42_cast_fu_1444_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state44) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum41_cast_fu_1419_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state43) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum40_cast_fu_1394_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state42) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum39_cast_fu_1369_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state41) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum38_cast_fu_1344_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state40) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum37_cast_fu_1319_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state39) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum36_cast_fu_1294_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state38) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum35_cast_fu_1269_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state37) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum34_cast_fu_1244_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state36) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum33_cast_fu_1219_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state35) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum32_cast_fu_1194_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state34) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum31_cast_fu_1169_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state33) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum30_cast_fu_1144_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state32) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum29_cast_fu_1119_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state31) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum28_cast_fu_1094_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state30) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum27_cast_fu_1069_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state29) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum26_cast_fu_1044_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state28) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum25_cast_fu_1019_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state27) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum24_cast_fu_994_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state26) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum23_cast_fu_969_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state25) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum22_cast_fu_944_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state24) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum21_cast_fu_919_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state23) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum20_cast_fu_894_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state22) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum19_cast_fu_869_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state21) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum18_cast_fu_844_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state20) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum17_cast_fu_819_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state19) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum16_cast_fu_794_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state18) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum15_cast_fu_769_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state17) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum14_cast_fu_744_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state16) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum13_cast_fu_719_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state15) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum12_cast_fu_694_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state14) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum11_cast_fu_669_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state13) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum10_cast_fu_644_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state12) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum4_cast_fu_619_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state11) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum3_cast_fu_594_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state10) and not((A_BUS_RVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum2_cast_fu_569_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_state9)) then 
                A_BUS_ARADDR <= a2_sum1_cast_fu_544_p1;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state8) and not((LOG_BUS_BVALID = ap_const_logic_0)))) then 
                A_BUS_ARADDR <= a2_sum9_cast_fu_519_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_state7)) then 
                A_BUS_ARADDR <= a2_sum8_cast_fu_494_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_state6)) then 
                A_BUS_ARADDR <= a2_sum7_cast_fu_469_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_state5)) then 
                A_BUS_ARADDR <= a2_sum6_cast_fu_444_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_state4)) then 
                A_BUS_ARADDR <= a2_sum5_cast_fu_419_p1;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_state3)) then 
                A_BUS_ARADDR <= a2_sum_cast_fu_390_p1;
            else 
                A_BUS_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            A_BUS_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    A_BUS_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state8, ap_CS_fsm_state15, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, A_BUS_RVALID, LOG_BUS_BVALID, ap_reg_ioackin_A_BUS_ARREADY)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state4) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state5) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state7) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY) and not((LOG_BUS_BVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state9) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state10) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state11) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state12) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state21) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state22) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state23) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state27) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state29) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state30) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state35) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state37) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state38) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state42) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state43) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state44) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state45) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state48) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state49) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state50) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state51) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not((A_BUS_RVALID = ap_const_logic_0)) and (ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)))) then 
            A_BUS_ARVALID <= ap_const_logic_1;
        else 
            A_BUS_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    A_BUS_RREADY_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, A_BUS_RVALID, ap_sig_ioackin_A_BUS_ARREADY)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state13) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state16) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state19) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state22) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state25) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state28) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state31) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state33) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state35) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state38) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state41) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state44) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state47) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state50) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state53) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state56) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state58) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state11) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state14) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state17) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state20) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state23) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state26) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state29) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state32) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state34) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state36) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state39) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state42) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state45) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state48) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state51) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state54) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state57) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state59) and not((A_BUS_RVALID = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_state12) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state15) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state18) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state21) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state24) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state27) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state30) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state37) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state40) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state43) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state46) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state49) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state52) and not(((A_BUS_RVALID = ap_const_logic_0) or (ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY)))) or ((ap_const_lv1_1 = ap_CS_fsm_state55) and not((A_BUS_RVALID = ap_const_logic_0))))) then 
            A_BUS_RREADY <= ap_const_logic_1;
        else 
            A_BUS_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    A_BUS_blk_n_AR_assign_proc : process(m_axi_A_BUS_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state13, ap_CS_fsm_state7, ap_CS_fsm_state14, ap_CS_fsm_state8, ap_CS_fsm_state15, ap_CS_fsm_state9, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state3)) or ((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state4)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state5)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state6)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state8)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)) or ((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state28)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)) or ((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state47)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_lv1_1 = ap_CS_fsm_state49)) or ((ap_const_lv1_1 = ap_CS_fsm_state50)) or ((ap_const_lv1_1 = ap_CS_fsm_state51)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)))) then 
            A_BUS_blk_n_AR <= m_axi_A_BUS_ARREADY;
        else 
            A_BUS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    A_BUS_blk_n_R_assign_proc : process(m_axi_A_BUS_RVALID, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state10)) or ((ap_const_lv1_1 = ap_CS_fsm_state11)) or ((ap_const_lv1_1 = ap_CS_fsm_state12)) or ((ap_const_lv1_1 = ap_CS_fsm_state13)) or ((ap_const_lv1_1 = ap_CS_fsm_state14)) or ((ap_const_lv1_1 = ap_CS_fsm_state15)) or ((ap_const_lv1_1 = ap_CS_fsm_state16)) or ((ap_const_lv1_1 = ap_CS_fsm_state17)) or ((ap_const_lv1_1 = ap_CS_fsm_state18)) or ((ap_const_lv1_1 = ap_CS_fsm_state19)) or ((ap_const_lv1_1 = ap_CS_fsm_state20)) or ((ap_const_lv1_1 = ap_CS_fsm_state21)) or ((ap_const_lv1_1 = ap_CS_fsm_state22)) or ((ap_const_lv1_1 = ap_CS_fsm_state23)) or ((ap_const_lv1_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = ap_CS_fsm_state25)) or ((ap_const_lv1_1 = ap_CS_fsm_state26)) or ((ap_const_lv1_1 = ap_CS_fsm_state27)) or ((ap_const_lv1_1 = ap_CS_fsm_state28)) or ((ap_const_lv1_1 = ap_CS_fsm_state29)) or ((ap_const_lv1_1 = ap_CS_fsm_state30)) or ((ap_const_lv1_1 = ap_CS_fsm_state31)) or ((ap_const_lv1_1 = ap_CS_fsm_state32)) or ((ap_const_lv1_1 = ap_CS_fsm_state33)) or ((ap_const_lv1_1 = ap_CS_fsm_state34)) or ((ap_const_lv1_1 = ap_CS_fsm_state35)) or ((ap_const_lv1_1 = ap_CS_fsm_state36)) or ((ap_const_lv1_1 = ap_CS_fsm_state37)) or ((ap_const_lv1_1 = ap_CS_fsm_state38)) or ((ap_const_lv1_1 = ap_CS_fsm_state39)) or ((ap_const_lv1_1 = ap_CS_fsm_state40)) or ((ap_const_lv1_1 = ap_CS_fsm_state41)) or ((ap_const_lv1_1 = ap_CS_fsm_state42)) or ((ap_const_lv1_1 = ap_CS_fsm_state43)) or ((ap_const_lv1_1 = ap_CS_fsm_state44)) or ((ap_const_lv1_1 = ap_CS_fsm_state45)) or ((ap_const_lv1_1 = ap_CS_fsm_state46)) or ((ap_const_lv1_1 = ap_CS_fsm_state47)) or ((ap_const_lv1_1 = ap_CS_fsm_state48)) or ((ap_const_lv1_1 = ap_CS_fsm_state49)) or ((ap_const_lv1_1 = ap_CS_fsm_state50)) or ((ap_const_lv1_1 = ap_CS_fsm_state51)) or ((ap_const_lv1_1 = ap_CS_fsm_state52)) or ((ap_const_lv1_1 = ap_CS_fsm_state53)) or ((ap_const_lv1_1 = ap_CS_fsm_state54)) or ((ap_const_lv1_1 = ap_CS_fsm_state55)) or ((ap_const_lv1_1 = ap_CS_fsm_state56)) or ((ap_const_lv1_1 = ap_CS_fsm_state57)) or ((ap_const_lv1_1 = ap_CS_fsm_state58)) or ((ap_const_lv1_1 = ap_CS_fsm_state59)))) then 
            A_BUS_blk_n_R <= m_axi_A_BUS_RVALID;
        else 
            A_BUS_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    LOG_BUS_AWVALID_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_373_p2, ap_reg_ioackin_LOG_BUS_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_reg_ioackin_LOG_BUS_AWREADY))) then 
            LOG_BUS_AWVALID <= ap_const_logic_1;
        else 
            LOG_BUS_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    LOG_BUS_BREADY_assign_proc : process(ap_CS_fsm_state8, LOG_BUS_BVALID, ap_sig_ioackin_A_BUS_ARREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8) and not(((ap_const_logic_0 = ap_sig_ioackin_A_BUS_ARREADY) or (LOG_BUS_BVALID = ap_const_logic_0))))) then 
            LOG_BUS_BREADY <= ap_const_logic_1;
        else 
            LOG_BUS_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    LOG_BUS_WDATA <= std_logic_vector(resize(unsigned(i_1_48_reg_1706),32));

    LOG_BUS_WVALID_assign_proc : process(ap_CS_fsm_state3, ap_reg_ioackin_LOG_BUS_WREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3) and (ap_const_logic_0 = ap_reg_ioackin_LOG_BUS_WREADY))) then 
            LOG_BUS_WVALID <= ap_const_logic_1;
        else 
            LOG_BUS_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    LOG_BUS_blk_n_AW_assign_proc : process(m_axi_LOG_BUS_AWREADY, ap_CS_fsm_state2, exitcond_fu_373_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (exitcond_fu_373_p2 = ap_const_lv1_0))) then 
            LOG_BUS_blk_n_AW <= m_axi_LOG_BUS_AWREADY;
        else 
            LOG_BUS_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    LOG_BUS_blk_n_B_assign_proc : process(m_axi_LOG_BUS_BVALID, ap_CS_fsm_state8)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state8))) then 
            LOG_BUS_blk_n_B <= m_axi_LOG_BUS_BVALID;
        else 
            LOG_BUS_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    LOG_BUS_blk_n_W_assign_proc : process(m_axi_LOG_BUS_WREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state3))) then 
            LOG_BUS_blk_n_W <= m_axi_LOG_BUS_WREADY;
        else 
            LOG_BUS_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    a2_sum10_cast_fu_644_p1 <= std_logic_vector(resize(unsigned(a2_sum10_reg_1817),32));
    a2_sum10_fu_639_p2 <= std_logic_vector(unsigned(i_1_9_cast_cast_fu_635_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum11_cast_fu_669_p1 <= std_logic_vector(resize(unsigned(a2_sum11_reg_1828),32));
    a2_sum11_fu_664_p2 <= std_logic_vector(unsigned(i_1_10_cast_cast_fu_660_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum12_cast_fu_694_p1 <= std_logic_vector(resize(unsigned(a2_sum12_reg_1839),32));
    a2_sum12_fu_689_p2 <= std_logic_vector(unsigned(i_1_11_cast_cast_fu_685_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum13_cast_fu_719_p1 <= std_logic_vector(resize(unsigned(a2_sum13_reg_1850),32));
    a2_sum13_fu_714_p2 <= std_logic_vector(unsigned(i_1_12_cast_cast_fu_710_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum14_cast_fu_744_p1 <= std_logic_vector(resize(unsigned(a2_sum14_reg_1861),32));
    a2_sum14_fu_739_p2 <= std_logic_vector(unsigned(i_1_13_cast_cast_fu_735_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum15_cast_fu_769_p1 <= std_logic_vector(resize(unsigned(a2_sum15_reg_1872),32));
    a2_sum15_fu_764_p2 <= std_logic_vector(unsigned(i_1_14_cast_cast_fu_760_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum16_cast_fu_794_p1 <= std_logic_vector(resize(unsigned(a2_sum16_reg_1883),32));
    a2_sum16_fu_789_p2 <= std_logic_vector(unsigned(i_1_15_cast_cast_fu_785_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum17_cast_fu_819_p1 <= std_logic_vector(resize(unsigned(a2_sum17_reg_1894),32));
    a2_sum17_fu_814_p2 <= std_logic_vector(unsigned(i_1_16_cast_cast_fu_810_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum18_cast_fu_844_p1 <= std_logic_vector(resize(unsigned(a2_sum18_reg_1905),32));
    a2_sum18_fu_839_p2 <= std_logic_vector(unsigned(i_1_17_cast_cast_fu_835_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum19_cast_fu_869_p1 <= std_logic_vector(resize(unsigned(a2_sum19_reg_1916),32));
    a2_sum19_fu_864_p2 <= std_logic_vector(unsigned(i_1_18_cast_cast_fu_860_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum1_cast_fu_544_p1 <= std_logic_vector(resize(unsigned(a2_sum1_reg_1773),32));
    a2_sum1_fu_539_p2 <= std_logic_vector(unsigned(i_1_5_cast_cast_fu_535_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum20_cast_fu_894_p1 <= std_logic_vector(resize(unsigned(a2_sum20_reg_1927),32));
    a2_sum20_fu_889_p2 <= std_logic_vector(unsigned(i_1_19_cast_cast_fu_885_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum21_cast_fu_919_p1 <= std_logic_vector(resize(unsigned(a2_sum21_reg_1938),32));
    a2_sum21_fu_914_p2 <= std_logic_vector(unsigned(i_1_20_cast_cast_fu_910_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum22_cast_fu_944_p1 <= std_logic_vector(resize(unsigned(a2_sum22_reg_1949),32));
    a2_sum22_fu_939_p2 <= std_logic_vector(unsigned(i_1_21_cast_cast_fu_935_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum23_cast_fu_969_p1 <= std_logic_vector(resize(unsigned(a2_sum23_reg_1960),32));
    a2_sum23_fu_964_p2 <= std_logic_vector(unsigned(i_1_22_cast_cast_fu_960_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum24_cast_fu_994_p1 <= std_logic_vector(resize(unsigned(a2_sum24_reg_1971),32));
    a2_sum24_fu_989_p2 <= std_logic_vector(unsigned(i_1_23_cast_cast_fu_985_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum25_cast_fu_1019_p1 <= std_logic_vector(resize(unsigned(a2_sum25_reg_1982),32));
    a2_sum25_fu_1014_p2 <= std_logic_vector(unsigned(i_1_24_cast_cast_fu_1010_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum26_cast_fu_1044_p1 <= std_logic_vector(resize(unsigned(a2_sum26_reg_1993),32));
    a2_sum26_fu_1039_p2 <= std_logic_vector(unsigned(i_1_25_cast_cast_fu_1035_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum27_cast_fu_1069_p1 <= std_logic_vector(resize(unsigned(a2_sum27_reg_2004),32));
    a2_sum27_fu_1064_p2 <= std_logic_vector(unsigned(i_1_26_cast_cast_fu_1060_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum28_cast_fu_1094_p1 <= std_logic_vector(resize(unsigned(a2_sum28_reg_2015),32));
    a2_sum28_fu_1089_p2 <= std_logic_vector(unsigned(i_1_27_cast_cast_fu_1085_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum29_cast_fu_1119_p1 <= std_logic_vector(resize(unsigned(a2_sum29_reg_2026),32));
    a2_sum29_fu_1114_p2 <= std_logic_vector(unsigned(i_1_28_cast_cast_fu_1110_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum2_cast_fu_569_p1 <= std_logic_vector(resize(unsigned(a2_sum2_reg_1784),32));
    a2_sum2_fu_564_p2 <= std_logic_vector(unsigned(i_1_6_cast_cast_fu_560_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum30_cast_fu_1144_p1 <= std_logic_vector(resize(unsigned(a2_sum30_reg_2037),32));
    a2_sum30_fu_1139_p2 <= std_logic_vector(unsigned(i_1_29_cast_cast_fu_1135_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum31_cast_fu_1169_p1 <= std_logic_vector(resize(unsigned(a2_sum31_reg_2048),32));
    a2_sum31_fu_1164_p2 <= std_logic_vector(unsigned(i_1_30_cast_cast_fu_1160_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum32_cast_fu_1194_p1 <= std_logic_vector(resize(unsigned(a2_sum32_reg_2059),32));
    a2_sum32_fu_1189_p2 <= std_logic_vector(unsigned(i_1_31_cast_cast_fu_1185_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum33_cast_fu_1219_p1 <= std_logic_vector(resize(unsigned(a2_sum33_reg_2070),32));
    a2_sum33_fu_1214_p2 <= std_logic_vector(unsigned(i_1_32_cast_cast_fu_1210_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum34_cast_fu_1244_p1 <= std_logic_vector(resize(unsigned(a2_sum34_reg_2081),32));
    a2_sum34_fu_1239_p2 <= std_logic_vector(unsigned(i_1_33_cast_cast_fu_1235_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum35_cast_fu_1269_p1 <= std_logic_vector(resize(unsigned(a2_sum35_reg_2097),32));
    a2_sum35_fu_1264_p2 <= std_logic_vector(unsigned(i_1_34_cast_cast_fu_1260_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum36_cast_fu_1294_p1 <= std_logic_vector(resize(unsigned(a2_sum36_reg_2108),32));
    a2_sum36_fu_1289_p2 <= std_logic_vector(unsigned(i_1_35_cast_cast_fu_1285_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum37_cast_fu_1319_p1 <= std_logic_vector(resize(unsigned(a2_sum37_reg_2119),32));
    a2_sum37_fu_1314_p2 <= std_logic_vector(unsigned(i_1_36_cast_cast_fu_1310_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum38_cast_fu_1344_p1 <= std_logic_vector(resize(unsigned(a2_sum38_reg_2130),32));
    a2_sum38_fu_1339_p2 <= std_logic_vector(unsigned(i_1_37_cast_cast_fu_1335_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum39_cast_fu_1369_p1 <= std_logic_vector(resize(unsigned(a2_sum39_reg_2141),32));
    a2_sum39_fu_1364_p2 <= std_logic_vector(unsigned(i_1_38_cast_cast_fu_1360_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum3_cast_fu_594_p1 <= std_logic_vector(resize(unsigned(a2_sum3_reg_1795),32));
    a2_sum3_fu_589_p2 <= std_logic_vector(unsigned(i_1_7_cast_cast_fu_585_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum40_cast_fu_1394_p1 <= std_logic_vector(resize(unsigned(a2_sum40_reg_2152),32));
    a2_sum40_fu_1389_p2 <= std_logic_vector(unsigned(i_1_39_cast_cast_fu_1385_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum41_cast_fu_1419_p1 <= std_logic_vector(resize(unsigned(a2_sum41_reg_2163),32));
    a2_sum41_fu_1414_p2 <= std_logic_vector(unsigned(i_1_40_cast_cast_fu_1410_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum42_cast_fu_1444_p1 <= std_logic_vector(resize(unsigned(a2_sum42_reg_2174),32));
    a2_sum42_fu_1439_p2 <= std_logic_vector(unsigned(i_1_41_cast_cast_fu_1435_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum43_cast_fu_1469_p1 <= std_logic_vector(resize(unsigned(a2_sum43_reg_2185),32));
    a2_sum43_fu_1464_p2 <= std_logic_vector(unsigned(i_1_42_cast_cast_fu_1460_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum44_cast_fu_1494_p1 <= std_logic_vector(resize(unsigned(a2_sum44_reg_2196),32));
    a2_sum44_fu_1489_p2 <= std_logic_vector(unsigned(i_1_43_cast_cast_fu_1485_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum45_cast_fu_1519_p1 <= std_logic_vector(resize(unsigned(a2_sum45_reg_2207),32));
    a2_sum45_fu_1514_p2 <= std_logic_vector(unsigned(i_1_44_cast_cast_fu_1510_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum46_cast_fu_1544_p1 <= std_logic_vector(resize(unsigned(a2_sum46_reg_2218),32));
    a2_sum46_fu_1539_p2 <= std_logic_vector(unsigned(i_1_45_cast_cast_fu_1535_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum47_cast_fu_1598_p1 <= std_logic_vector(resize(unsigned(a2_sum47_reg_2229),32));
    a2_sum47_fu_1564_p2 <= std_logic_vector(unsigned(i_1_46_cast_cast_fu_1560_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum48_cast_fu_1608_p1 <= std_logic_vector(resize(unsigned(a2_sum48_reg_2234),32));
    a2_sum48_fu_1579_p2 <= std_logic_vector(unsigned(i_1_47_cast_cast_fu_1575_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum49_cast_fu_1618_p1 <= std_logic_vector(resize(unsigned(a2_sum49_reg_2239),32));
    a2_sum49_fu_1587_p2 <= std_logic_vector(unsigned(i_1_48_cast_cast_fu_1584_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum4_cast_fu_619_p1 <= std_logic_vector(resize(unsigned(a2_sum4_reg_1806),32));
    a2_sum4_fu_614_p2 <= std_logic_vector(unsigned(i_1_8_cast_cast_fu_610_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum5_cast_fu_419_p1 <= std_logic_vector(resize(unsigned(a2_sum5_reg_1718),32));
    a2_sum5_fu_410_p2 <= std_logic_vector(unsigned(i_1_cast_cast_fu_406_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum6_cast_fu_444_p1 <= std_logic_vector(resize(unsigned(a2_sum6_reg_1729),32));
    a2_sum6_fu_439_p2 <= std_logic_vector(unsigned(i_1_1_cast_cast_fu_435_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum7_cast_fu_469_p1 <= std_logic_vector(resize(unsigned(a2_sum7_reg_1740),32));
    a2_sum7_fu_464_p2 <= std_logic_vector(unsigned(i_1_2_cast_cast_fu_460_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum8_cast_fu_494_p1 <= std_logic_vector(resize(unsigned(a2_sum8_reg_1751),32));
    a2_sum8_fu_489_p2 <= std_logic_vector(unsigned(i_1_3_cast_cast_fu_485_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum9_cast_fu_519_p1 <= std_logic_vector(resize(unsigned(a2_sum9_reg_1762),32));
    a2_sum9_fu_514_p2 <= std_logic_vector(unsigned(i_1_4_cast_cast_fu_510_p1) + unsigned(tmp_2_cast_reg_1644));
    a2_sum_cast_fu_390_p1 <= std_logic_vector(resize(unsigned(a2_sum_reg_1701),32));
    a2_sum_fu_379_p2 <= std_logic_vector(unsigned(i_cast_cast_fu_369_p1) + unsigned(tmp_2_cast_reg_1644));
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28 downto 28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29 downto 29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30 downto 30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31 downto 31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32 downto 32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33 downto 33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34 downto 34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35 downto 35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36 downto 36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37 downto 37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38 downto 38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39 downto 39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40 downto 40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41 downto 41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42 downto 42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43 downto 43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44 downto 44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45 downto 45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46 downto 46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47 downto 47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48 downto 48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49 downto 49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50 downto 50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51 downto 51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52 downto 52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53 downto 53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54 downto 54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55 downto 55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56 downto 56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57 downto 57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58 downto 58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59 downto 59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60 downto 60);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_done_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_373_p2, ap_sig_ioackin_LOG_BUS_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not(((exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_AWREADY))) and not((exitcond_fu_373_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_373_p2, ap_sig_ioackin_LOG_BUS_AWREADY)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not(((exitcond_fu_373_p2 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_LOG_BUS_AWREADY))) and not((exitcond_fu_373_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_A_BUS_ARREADY_assign_proc : process(A_BUS_ARREADY, ap_reg_ioackin_A_BUS_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_A_BUS_ARREADY)) then 
            ap_sig_ioackin_A_BUS_ARREADY <= A_BUS_ARREADY;
        else 
            ap_sig_ioackin_A_BUS_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_LOG_BUS_AWREADY_assign_proc : process(LOG_BUS_AWREADY, ap_reg_ioackin_LOG_BUS_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_LOG_BUS_AWREADY)) then 
            ap_sig_ioackin_LOG_BUS_AWREADY <= LOG_BUS_AWREADY;
        else 
            ap_sig_ioackin_LOG_BUS_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_LOG_BUS_WREADY_assign_proc : process(LOG_BUS_WREADY, ap_reg_ioackin_LOG_BUS_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_LOG_BUS_WREADY)) then 
            ap_sig_ioackin_LOG_BUS_WREADY <= LOG_BUS_WREADY;
        else 
            ap_sig_ioackin_LOG_BUS_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond_fu_373_p2 <= "1" when (i_reg_219 = ap_const_lv16_FA00) else "0";
    grp_fu_243_p2 <= std_logic_vector(unsigned(reg_239) + unsigned(reg_235));
    grp_fu_249_p2 <= std_logic_vector(unsigned(reg_231) + unsigned(grp_fu_243_p2));
    grp_fu_255_p2 <= std_logic_vector(unsigned(reg_239) + unsigned(reg_235));
    grp_fu_261_p2 <= std_logic_vector(unsigned(reg_231) + unsigned(grp_fu_255_p2));
    grp_fu_267_p2 <= std_logic_vector(unsigned(reg_235) + unsigned(reg_231));
    grp_fu_281_p2 <= std_logic_vector(unsigned(reg_273) + unsigned(grp_fu_261_p2));
    grp_fu_287_p2 <= std_logic_vector(unsigned(reg_273) + unsigned(grp_fu_249_p2));
    grp_fu_293_p2 <= std_logic_vector(unsigned(reg_277) + unsigned(grp_fu_267_p2));
    grp_fu_299_p2 <= std_logic_vector(unsigned(reg_273) + unsigned(grp_fu_293_p2));
    grp_fu_313_p2 <= std_logic_vector(unsigned(reg_305) + unsigned(grp_fu_287_p2));
    grp_fu_319_p2 <= std_logic_vector(unsigned(reg_305) + unsigned(reg_309));
    grp_fu_329_p2 <= std_logic_vector(unsigned(reg_325) + unsigned(grp_fu_319_p2));
    i_1_10_cast_cast_fu_660_p1 <= std_logic_vector(resize(unsigned(i_1_10_fu_654_p2),31));
    i_1_10_fu_654_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_B));
    i_1_11_cast_cast_fu_685_p1 <= std_logic_vector(resize(unsigned(i_1_11_fu_679_p2),31));
    i_1_11_fu_679_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_C));
    i_1_12_cast_cast_fu_710_p1 <= std_logic_vector(resize(unsigned(i_1_12_fu_704_p2),31));
    i_1_12_fu_704_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_D));
    i_1_13_cast_cast_fu_735_p1 <= std_logic_vector(resize(unsigned(i_1_13_fu_729_p2),31));
    i_1_13_fu_729_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_E));
    i_1_14_cast_cast_fu_760_p1 <= std_logic_vector(resize(unsigned(i_1_14_fu_754_p2),31));
    i_1_14_fu_754_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_F));
    i_1_15_cast_cast_fu_785_p1 <= std_logic_vector(resize(unsigned(i_1_15_fu_779_p2),31));
    i_1_15_fu_779_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_10));
    i_1_16_cast_cast_fu_810_p1 <= std_logic_vector(resize(unsigned(i_1_16_fu_804_p2),31));
    i_1_16_fu_804_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_11));
    i_1_17_cast_cast_fu_835_p1 <= std_logic_vector(resize(unsigned(i_1_17_fu_829_p2),31));
    i_1_17_fu_829_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_12));
    i_1_18_cast_cast_fu_860_p1 <= std_logic_vector(resize(unsigned(i_1_18_fu_854_p2),31));
    i_1_18_fu_854_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_13));
    i_1_19_cast_cast_fu_885_p1 <= std_logic_vector(resize(unsigned(i_1_19_fu_879_p2),31));
    i_1_19_fu_879_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_14));
    i_1_1_cast_cast_fu_435_p1 <= std_logic_vector(resize(unsigned(i_1_1_fu_429_p2),31));
    i_1_1_fu_429_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2));
    i_1_20_cast_cast_fu_910_p1 <= std_logic_vector(resize(unsigned(i_1_20_fu_904_p2),31));
    i_1_20_fu_904_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_15));
    i_1_21_cast_cast_fu_935_p1 <= std_logic_vector(resize(unsigned(i_1_21_fu_929_p2),31));
    i_1_21_fu_929_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_16));
    i_1_22_cast_cast_fu_960_p1 <= std_logic_vector(resize(unsigned(i_1_22_fu_954_p2),31));
    i_1_22_fu_954_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_17));
    i_1_23_cast_cast_fu_985_p1 <= std_logic_vector(resize(unsigned(i_1_23_fu_979_p2),31));
    i_1_23_fu_979_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_18));
    i_1_24_cast_cast_fu_1010_p1 <= std_logic_vector(resize(unsigned(i_1_24_fu_1004_p2),31));
    i_1_24_fu_1004_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_19));
    i_1_25_cast_cast_fu_1035_p1 <= std_logic_vector(resize(unsigned(i_1_25_fu_1029_p2),31));
    i_1_25_fu_1029_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_1A));
    i_1_26_cast_cast_fu_1060_p1 <= std_logic_vector(resize(unsigned(i_1_26_fu_1054_p2),31));
    i_1_26_fu_1054_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_1B));
    i_1_27_cast_cast_fu_1085_p1 <= std_logic_vector(resize(unsigned(i_1_27_fu_1079_p2),31));
    i_1_27_fu_1079_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_1C));
    i_1_28_cast_cast_fu_1110_p1 <= std_logic_vector(resize(unsigned(i_1_28_fu_1104_p2),31));
    i_1_28_fu_1104_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_1D));
    i_1_29_cast_cast_fu_1135_p1 <= std_logic_vector(resize(unsigned(i_1_29_fu_1129_p2),31));
    i_1_29_fu_1129_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_1E));
    i_1_2_cast_cast_fu_460_p1 <= std_logic_vector(resize(unsigned(i_1_2_fu_454_p2),31));
    i_1_2_fu_454_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_3));
    i_1_30_cast_cast_fu_1160_p1 <= std_logic_vector(resize(unsigned(i_1_30_fu_1154_p2),31));
    i_1_30_fu_1154_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_1F));
    i_1_31_cast_cast_fu_1185_p1 <= std_logic_vector(resize(unsigned(i_1_31_fu_1179_p2),31));
    i_1_31_fu_1179_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_20));
    i_1_32_cast_cast_fu_1210_p1 <= std_logic_vector(resize(unsigned(i_1_32_fu_1204_p2),31));
    i_1_32_fu_1204_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_21));
    i_1_33_cast_cast_fu_1235_p1 <= std_logic_vector(resize(unsigned(i_1_33_fu_1229_p2),31));
    i_1_33_fu_1229_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_22));
    i_1_34_cast_cast_fu_1260_p1 <= std_logic_vector(resize(unsigned(i_1_34_fu_1254_p2),31));
    i_1_34_fu_1254_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_23));
    i_1_35_cast_cast_fu_1285_p1 <= std_logic_vector(resize(unsigned(i_1_35_fu_1279_p2),31));
    i_1_35_fu_1279_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_24));
    i_1_36_cast_cast_fu_1310_p1 <= std_logic_vector(resize(unsigned(i_1_36_fu_1304_p2),31));
    i_1_36_fu_1304_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_25));
    i_1_37_cast_cast_fu_1335_p1 <= std_logic_vector(resize(unsigned(i_1_37_fu_1329_p2),31));
    i_1_37_fu_1329_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_26));
    i_1_38_cast_cast_fu_1360_p1 <= std_logic_vector(resize(unsigned(i_1_38_fu_1354_p2),31));
    i_1_38_fu_1354_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_27));
    i_1_39_cast_cast_fu_1385_p1 <= std_logic_vector(resize(unsigned(i_1_39_fu_1379_p2),31));
    i_1_39_fu_1379_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_28));
    i_1_3_cast_cast_fu_485_p1 <= std_logic_vector(resize(unsigned(i_1_3_fu_479_p2),31));
    i_1_3_fu_479_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_4));
    i_1_40_cast_cast_fu_1410_p1 <= std_logic_vector(resize(unsigned(i_1_40_fu_1404_p2),31));
    i_1_40_fu_1404_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_29));
    i_1_41_cast_cast_fu_1435_p1 <= std_logic_vector(resize(unsigned(i_1_41_fu_1429_p2),31));
    i_1_41_fu_1429_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2A));
    i_1_42_cast_cast_fu_1460_p1 <= std_logic_vector(resize(unsigned(i_1_42_fu_1454_p2),31));
    i_1_42_fu_1454_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2B));
    i_1_43_cast_cast_fu_1485_p1 <= std_logic_vector(resize(unsigned(i_1_43_fu_1479_p2),31));
    i_1_43_fu_1479_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2C));
    i_1_44_cast_cast_fu_1510_p1 <= std_logic_vector(resize(unsigned(i_1_44_fu_1504_p2),31));
    i_1_44_fu_1504_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2D));
    i_1_45_cast_cast_fu_1535_p1 <= std_logic_vector(resize(unsigned(i_1_45_fu_1529_p2),31));
    i_1_45_fu_1529_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2E));
    i_1_46_cast_cast_fu_1560_p1 <= std_logic_vector(resize(unsigned(i_1_46_fu_1554_p2),31));
    i_1_46_fu_1554_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_2F));
    i_1_47_cast_cast_fu_1575_p1 <= std_logic_vector(resize(unsigned(i_1_47_fu_1569_p2),31));
    i_1_47_fu_1569_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_30));
    i_1_48_cast_cast_fu_1584_p1 <= std_logic_vector(resize(unsigned(i_1_48_reg_1706),31));
    i_1_48_fu_384_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_31));
    i_1_49_fu_1592_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_32));
    i_1_4_cast_cast_fu_510_p1 <= std_logic_vector(resize(unsigned(i_1_4_fu_504_p2),31));
    i_1_4_fu_504_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_5));
    i_1_5_cast_cast_fu_535_p1 <= std_logic_vector(resize(unsigned(i_1_5_fu_529_p2),31));
    i_1_5_fu_529_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_6));
    i_1_6_cast_cast_fu_560_p1 <= std_logic_vector(resize(unsigned(i_1_6_fu_554_p2),31));
    i_1_6_fu_554_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_7));
    i_1_7_cast_cast_fu_585_p1 <= std_logic_vector(resize(unsigned(i_1_7_fu_579_p2),31));
    i_1_7_fu_579_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_8));
    i_1_8_cast_cast_fu_610_p1 <= std_logic_vector(resize(unsigned(i_1_8_fu_604_p2),31));
    i_1_8_fu_604_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_9));
    i_1_9_cast_cast_fu_635_p1 <= std_logic_vector(resize(unsigned(i_1_9_fu_629_p2),31));
    i_1_9_fu_629_p2 <= std_logic_vector(unsigned(i_reg_219) + unsigned(ap_const_lv16_A));
    i_1_cast_cast_fu_406_p1 <= std_logic_vector(resize(unsigned(i_1_s_fu_400_p2),31));
    i_1_s_fu_400_p2 <= (i_reg_219 or ap_const_lv16_1);
    i_cast_cast_fu_369_p1 <= std_logic_vector(resize(unsigned(i_reg_219),31));
    log3_fu_335_p4 <= log(31 downto 2);
    sum_1_s_fu_1633_p2 <= std_logic_vector(unsigned(tmp_s_fu_1628_p2) + unsigned(sum_reg_207));
    tmp_1_fu_345_p1 <= std_logic_vector(resize(unsigned(log3_fu_335_p4),32));
    tmp_2_cast_fu_365_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_355_p4),31));
    tmp_2_fu_355_p4 <= a(31 downto 2);
    tmp_s_fu_1628_p2 <= std_logic_vector(unsigned(tmp_reg_2086) + unsigned(grp_fu_329_p2));
end behav;
