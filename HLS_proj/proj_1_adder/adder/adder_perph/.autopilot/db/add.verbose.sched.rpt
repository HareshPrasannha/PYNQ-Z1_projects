

================================================================
== Vivado HLS Report for 'add'
================================================================
* Date:           Mon Mar 23 14:48:20 2020

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        adder
* Solution:       adder_perph
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.08|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1008|  1008|  1009|  1009|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  1006|  1006|         8|          1|          1|  1000|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 8


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 1
  Pipeline-0: II = 1, D = 8, States = { 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	10  / (exitcond)
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	2  / true
10 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: StgValue_11 (16)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %inStream_V_data_V), !map !55

ST_1: StgValue_12 (17)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i4* %inStream_V_keep_V), !map !59

ST_1: StgValue_13 (18)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %inStream_V_strb_V), !map !63

ST_1: StgValue_14 (19)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i2* %inStream_V_user_V), !map !67

ST_1: StgValue_15 (20)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %inStream_V_last_V), !map !71

ST_1: StgValue_16 (21)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i5* %inStream_V_id_V), !map !75

ST_1: StgValue_17 (22)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i6* %inStream_V_dest_V), !map !79

ST_1: StgValue_18 (23)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %outStream_V_data_V), !map !83

ST_1: StgValue_19 (24)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outStream_V_keep_V), !map !87

ST_1: StgValue_20 (25)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outStream_V_strb_V), !map !91

ST_1: StgValue_21 (26)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap(i2* %outStream_V_user_V), !map !95

ST_1: StgValue_22 (27)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outStream_V_last_V), !map !99

ST_1: StgValue_23 (28)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i5* %outStream_V_id_V), !map !103

ST_1: StgValue_24 (29)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i6* %outStream_V_dest_V), !map !107

ST_1: StgValue_25 (30)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i32 %gain), !map !111

ST_1: StgValue_26 (31)  [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @add_str) nounwind

ST_1: gain_read (32)  [1/1] 1.00ns
:16  %gain_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %gain)

ST_1: StgValue_28 (33)  [1/1] 0.00ns  loc: add.cpp:10
:17  call void (...)* @_ssdm_op_SpecInterface(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: StgValue_29 (34)  [1/1] 0.00ns  loc: add.cpp:11
:18  call void (...)* @_ssdm_op_SpecInterface(i32* %inStream_V_data_V, i4* %inStream_V_keep_V, i4* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: StgValue_30 (35)  [1/1] 0.00ns  loc: add.cpp:12
:19  call void (...)* @_ssdm_op_SpecInterface(i32 %gain, [10 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str4, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: StgValue_31 (36)  [1/1] 0.00ns  loc: add.cpp:13
:20  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str4, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind

ST_1: StgValue_32 (37)  [1/1] 1.57ns  loc: add.cpp:16
:21  br label %1


 <State 2>: 3.44ns
ST_2: idx (39)  [1/1] 0.00ns
:0  %idx = phi i10 [ 0, %0 ], [ %idx_1, %2 ]

ST_2: exitcond (40)  [1/1] 2.07ns  loc: add.cpp:16
:1  %exitcond = icmp eq i10 %idx, -24

ST_2: idx_1 (41)  [1/1] 1.84ns  loc: add.cpp:16
:2  %idx_1 = add i10 %idx, 1

ST_2: StgValue_36 (42)  [1/1] 0.00ns  loc: add.cpp:16
:3  br i1 %exitcond, label %3, label %2

ST_2: empty_2 (47)  [2/2] 0.00ns  loc: add.cpp:20
:3  %empty_2 = call { i32, i4, i4, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %inStream_V_data_V, i4* %inStream_V_keep_V, i4* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V)


 <State 3>: 6.08ns
ST_3: empty_2 (47)  [1/2] 0.00ns  loc: add.cpp:20
:3  %empty_2 = call { i32, i4, i4, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %inStream_V_data_V, i4* %inStream_V_keep_V, i4* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V)

ST_3: tmp_data_V (48)  [1/1] 0.00ns  loc: add.cpp:20
:4  %tmp_data_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 0

ST_3: tmp_keep_V (49)  [1/1] 0.00ns  loc: add.cpp:20
:5  %tmp_keep_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 1

ST_3: tmp_strb_V (50)  [1/1] 0.00ns  loc: add.cpp:20
:6  %tmp_strb_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 2

ST_3: tmp_user_V (51)  [1/1] 0.00ns  loc: add.cpp:20
:7  %tmp_user_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 3

ST_3: tmp_last_V (52)  [1/1] 0.00ns  loc: add.cpp:20
:8  %tmp_last_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 4

ST_3: tmp_id_V (53)  [1/1] 0.00ns  loc: add.cpp:20
:9  %tmp_id_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 5

ST_3: tmp_dest_V (54)  [1/1] 0.00ns  loc: add.cpp:20
:10  %tmp_dest_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 6

ST_3: tmp_data_V_1 (55)  [6/6] 6.08ns  loc: add.cpp:23
:11  %tmp_data_V_1 = mul i32 %tmp_data_V, %gain_read


 <State 4>: 6.08ns
ST_4: tmp_data_V_1 (55)  [5/6] 6.08ns  loc: add.cpp:23
:11  %tmp_data_V_1 = mul i32 %tmp_data_V, %gain_read


 <State 5>: 6.08ns
ST_5: tmp_data_V_1 (55)  [4/6] 6.08ns  loc: add.cpp:23
:11  %tmp_data_V_1 = mul i32 %tmp_data_V, %gain_read


 <State 6>: 6.08ns
ST_6: tmp_data_V_1 (55)  [3/6] 6.08ns  loc: add.cpp:23
:11  %tmp_data_V_1 = mul i32 %tmp_data_V, %gain_read


 <State 7>: 6.08ns
ST_7: tmp_data_V_1 (55)  [2/6] 6.08ns  loc: add.cpp:23
:11  %tmp_data_V_1 = mul i32 %tmp_data_V, %gain_read


 <State 8>: 6.08ns
ST_8: tmp_data_V_1 (55)  [1/6] 6.08ns  loc: add.cpp:23
:11  %tmp_data_V_1 = mul i32 %tmp_data_V, %gain_read

ST_8: StgValue_52 (56)  [2/2] 0.00ns  loc: add.cpp:34
:12  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, i32 %tmp_data_V_1, i4 %tmp_keep_V, i4 %tmp_strb_V, i2 %tmp_user_V, i1 %tmp_last_V, i5 %tmp_id_V, i6 %tmp_dest_V)


 <State 9>: 0.00ns
ST_9: empty (44)  [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1000, i64 1000, i64 1000)

ST_9: tmp (45)  [1/1] 0.00ns  loc: add.cpp:17
:1  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)

ST_9: StgValue_55 (46)  [1/1] 0.00ns  loc: add.cpp:18
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind

ST_9: StgValue_56 (56)  [1/2] 0.00ns  loc: add.cpp:34
:12  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, i32 %tmp_data_V_1, i4 %tmp_keep_V, i4 %tmp_strb_V, i2 %tmp_user_V, i1 %tmp_last_V, i5 %tmp_id_V, i6 %tmp_dest_V)

ST_9: empty_3 (57)  [1/1] 0.00ns  loc: add.cpp:36
:13  %empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp)

ST_9: StgValue_58 (58)  [1/1] 0.00ns  loc: add.cpp:16
:14  br label %1


 <State 10>: 0.00ns
ST_10: StgValue_59 (60)  [1/1] 0.00ns  loc: add.cpp:38
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('idx') with incoming values : ('idx', add.cpp:16) [39]  (1.57 ns)

 <State 2>: 3.44ns
The critical path consists of the following:
	'icmp' operation ('exitcond', add.cpp:16) [40]  (2.07 ns)
	blocking operation 1.37 ns on control path)

 <State 3>: 6.08ns
The critical path consists of the following:
	axis read on port 'inStream_V_data_V' (add.cpp:20) [47]  (0 ns)
	'mul' operation ('tmp.data.V', add.cpp:23) [55]  (6.08 ns)

 <State 4>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp.data.V', add.cpp:23) [55]  (6.08 ns)

 <State 5>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp.data.V', add.cpp:23) [55]  (6.08 ns)

 <State 6>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp.data.V', add.cpp:23) [55]  (6.08 ns)

 <State 7>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp.data.V', add.cpp:23) [55]  (6.08 ns)

 <State 8>: 6.08ns
The critical path consists of the following:
	'mul' operation ('tmp.data.V', add.cpp:23) [55]  (6.08 ns)
	axis write on port 'outStream_V_data_V' (add.cpp:34) [56]  (0 ns)

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
