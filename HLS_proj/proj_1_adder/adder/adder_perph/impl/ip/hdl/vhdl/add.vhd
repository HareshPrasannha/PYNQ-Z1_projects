-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity add is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inStream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    inStream_TVALID : IN STD_LOGIC;
    inStream_TREADY : OUT STD_LOGIC;
    inStream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    inStream_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    inStream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    inStream_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    inStream_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    outStream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    outStream_TVALID : OUT STD_LOGIC;
    outStream_TREADY : IN STD_LOGIC;
    outStream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    outStream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    outStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    outStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    outStream_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    outStream_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0);
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of add is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "add,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.080000,HLS_SYN_LAT=1008,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=4,HLS_SYN_FF=422,HLS_SYN_LUT=334}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_3E8 : STD_LOGIC_VECTOR (9 downto 0) := "1111101000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal inStream_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_vld_in : STD_LOGIC;
    signal inStream_V_data_V_0_vld_out : STD_LOGIC;
    signal inStream_V_data_V_0_ack_in : STD_LOGIC;
    signal inStream_V_data_V_0_ack_out : STD_LOGIC;
    signal inStream_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_data_V_0_sel : STD_LOGIC;
    signal inStream_V_data_V_0_load_A : STD_LOGIC;
    signal inStream_V_data_V_0_load_B : STD_LOGIC;
    signal inStream_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_keep_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_keep_V_0_vld_in : STD_LOGIC;
    signal inStream_V_keep_V_0_vld_out : STD_LOGIC;
    signal inStream_V_keep_V_0_ack_in : STD_LOGIC;
    signal inStream_V_keep_V_0_ack_out : STD_LOGIC;
    signal inStream_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_keep_V_0_sel : STD_LOGIC;
    signal inStream_V_keep_V_0_load_A : STD_LOGIC;
    signal inStream_V_keep_V_0_load_B : STD_LOGIC;
    signal inStream_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_strb_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_strb_V_0_vld_in : STD_LOGIC;
    signal inStream_V_strb_V_0_vld_out : STD_LOGIC;
    signal inStream_V_strb_V_0_ack_in : STD_LOGIC;
    signal inStream_V_strb_V_0_ack_out : STD_LOGIC;
    signal inStream_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal inStream_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_strb_V_0_sel : STD_LOGIC;
    signal inStream_V_strb_V_0_load_A : STD_LOGIC;
    signal inStream_V_strb_V_0_load_B : STD_LOGIC;
    signal inStream_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_user_V_0_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal inStream_V_user_V_0_vld_in : STD_LOGIC;
    signal inStream_V_user_V_0_vld_out : STD_LOGIC;
    signal inStream_V_user_V_0_ack_in : STD_LOGIC;
    signal inStream_V_user_V_0_ack_out : STD_LOGIC;
    signal inStream_V_user_V_0_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal inStream_V_user_V_0_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal inStream_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_user_V_0_sel : STD_LOGIC;
    signal inStream_V_user_V_0_load_A : STD_LOGIC;
    signal inStream_V_user_V_0_load_B : STD_LOGIC;
    signal inStream_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal inStream_V_last_V_0_vld_in : STD_LOGIC;
    signal inStream_V_last_V_0_vld_out : STD_LOGIC;
    signal inStream_V_last_V_0_ack_in : STD_LOGIC;
    signal inStream_V_last_V_0_ack_out : STD_LOGIC;
    signal inStream_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal inStream_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal inStream_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_last_V_0_sel : STD_LOGIC;
    signal inStream_V_last_V_0_load_A : STD_LOGIC;
    signal inStream_V_last_V_0_load_B : STD_LOGIC;
    signal inStream_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_id_V_0_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal inStream_V_id_V_0_vld_in : STD_LOGIC;
    signal inStream_V_id_V_0_vld_out : STD_LOGIC;
    signal inStream_V_id_V_0_ack_in : STD_LOGIC;
    signal inStream_V_id_V_0_ack_out : STD_LOGIC;
    signal inStream_V_id_V_0_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal inStream_V_id_V_0_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal inStream_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_id_V_0_sel : STD_LOGIC;
    signal inStream_V_id_V_0_load_A : STD_LOGIC;
    signal inStream_V_id_V_0_load_B : STD_LOGIC;
    signal inStream_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal inStream_V_dest_V_0_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal inStream_V_dest_V_0_vld_in : STD_LOGIC;
    signal inStream_V_dest_V_0_vld_out : STD_LOGIC;
    signal inStream_V_dest_V_0_ack_in : STD_LOGIC;
    signal inStream_V_dest_V_0_ack_out : STD_LOGIC;
    signal inStream_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal inStream_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal inStream_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal inStream_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal inStream_V_dest_V_0_sel : STD_LOGIC;
    signal inStream_V_dest_V_0_load_A : STD_LOGIC;
    signal inStream_V_dest_V_0_load_B : STD_LOGIC;
    signal inStream_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal inStream_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal outStream_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_vld_in : STD_LOGIC;
    signal outStream_V_data_V_1_vld_out : STD_LOGIC;
    signal outStream_V_data_V_1_ack_in : STD_LOGIC;
    signal outStream_V_data_V_1_ack_out : STD_LOGIC;
    signal outStream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal outStream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_data_V_1_sel : STD_LOGIC;
    signal outStream_V_data_V_1_load_A : STD_LOGIC;
    signal outStream_V_data_V_1_load_B : STD_LOGIC;
    signal outStream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_keep_V_1_vld_in : STD_LOGIC;
    signal outStream_V_keep_V_1_vld_out : STD_LOGIC;
    signal outStream_V_keep_V_1_ack_in : STD_LOGIC;
    signal outStream_V_keep_V_1_ack_out : STD_LOGIC;
    signal outStream_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_keep_V_1_sel : STD_LOGIC;
    signal outStream_V_keep_V_1_load_A : STD_LOGIC;
    signal outStream_V_keep_V_1_load_B : STD_LOGIC;
    signal outStream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_strb_V_1_vld_in : STD_LOGIC;
    signal outStream_V_strb_V_1_vld_out : STD_LOGIC;
    signal outStream_V_strb_V_1_ack_in : STD_LOGIC;
    signal outStream_V_strb_V_1_ack_out : STD_LOGIC;
    signal outStream_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal outStream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_strb_V_1_sel : STD_LOGIC;
    signal outStream_V_strb_V_1_load_A : STD_LOGIC;
    signal outStream_V_strb_V_1_load_B : STD_LOGIC;
    signal outStream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal outStream_V_user_V_1_vld_in : STD_LOGIC;
    signal outStream_V_user_V_1_vld_out : STD_LOGIC;
    signal outStream_V_user_V_1_ack_in : STD_LOGIC;
    signal outStream_V_user_V_1_ack_out : STD_LOGIC;
    signal outStream_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal outStream_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal outStream_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_user_V_1_sel : STD_LOGIC;
    signal outStream_V_user_V_1_load_A : STD_LOGIC;
    signal outStream_V_user_V_1_load_B : STD_LOGIC;
    signal outStream_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_vld_in : STD_LOGIC;
    signal outStream_V_last_V_1_vld_out : STD_LOGIC;
    signal outStream_V_last_V_1_ack_in : STD_LOGIC;
    signal outStream_V_last_V_1_ack_out : STD_LOGIC;
    signal outStream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_last_V_1_sel : STD_LOGIC;
    signal outStream_V_last_V_1_load_A : STD_LOGIC;
    signal outStream_V_last_V_1_load_B : STD_LOGIC;
    signal outStream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal outStream_V_id_V_1_vld_in : STD_LOGIC;
    signal outStream_V_id_V_1_vld_out : STD_LOGIC;
    signal outStream_V_id_V_1_ack_in : STD_LOGIC;
    signal outStream_V_id_V_1_ack_out : STD_LOGIC;
    signal outStream_V_id_V_1_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal outStream_V_id_V_1_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal outStream_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_id_V_1_sel : STD_LOGIC;
    signal outStream_V_id_V_1_load_A : STD_LOGIC;
    signal outStream_V_id_V_1_load_B : STD_LOGIC;
    signal outStream_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal outStream_V_dest_V_1_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal outStream_V_dest_V_1_vld_in : STD_LOGIC;
    signal outStream_V_dest_V_1_vld_out : STD_LOGIC;
    signal outStream_V_dest_V_1_ack_in : STD_LOGIC;
    signal outStream_V_dest_V_1_ack_out : STD_LOGIC;
    signal outStream_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal outStream_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal outStream_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal outStream_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal outStream_V_dest_V_1_sel : STD_LOGIC;
    signal outStream_V_dest_V_1_load_A : STD_LOGIC;
    signal outStream_V_dest_V_1_load_B : STD_LOGIC;
    signal outStream_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal outStream_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal gain : STD_LOGIC_VECTOR (31 downto 0);
    signal inStream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal outStream_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter5_exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter6_exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_reg_127 : STD_LOGIC_VECTOR (9 downto 0);
    signal gain_read_reg_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter1_exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_exitcond_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_1_fu_144_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_keep_V_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_keep_V_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_keep_V_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_keep_V_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_keep_V_reg_203 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_reg_208 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_strb_V_reg_208 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_strb_V_reg_208 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_strb_V_reg_208 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_strb_V_reg_208 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_user_V_reg_213 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_user_V_reg_213 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_user_V_reg_213 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_user_V_reg_213 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_user_V_reg_213 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_last_V_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_last_V_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_last_V_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_last_V_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_223 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_id_V_reg_223 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_id_V_reg_223 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_id_V_reg_223 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_id_V_reg_223 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_228 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter2_tmp_dest_V_reg_228 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter3_tmp_dest_V_reg_228 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter4_tmp_dest_V_reg_228 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter5_tmp_dest_V_reg_228 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_178_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal grp_fu_178_ce : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_condition_1125 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component add_mul_32s_32s_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component add_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        gain : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    add_CRTL_BUS_s_axi_U : component add_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        gain => gain);

    add_mul_32s_32s_3bkb_U0 : component add_mul_32s_32s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => inStream_V_data_V_0_data_out,
        din1 => gain_read_reg_184,
        ce => grp_fu_178_ce,
        dout => grp_fu_178_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_fu_138_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_lv1_0 = exitcond_fu_138_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_lv1_0 = exitcond_fu_138_p2))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (ap_const_logic_1 = inStream_V_data_V_0_vld_out))) then 
                                        inStream_V_data_V_0_sel_rd <= not(inStream_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_in))) then 
                                        inStream_V_data_V_0_sel_wr <= not(inStream_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (inStream_V_data_V_0_state = ap_const_lv2_2)))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_0 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_1)))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (inStream_V_data_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = inStream_V_data_V_0_ack_out) and (inStream_V_data_V_0_state = ap_const_lv2_1)) or ((inStream_V_data_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = inStream_V_data_V_0_vld_in) and (ap_const_logic_0 = inStream_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_data_V_0_vld_in) and (ap_const_logic_1 = inStream_V_data_V_0_ack_out)))))) then 
                    inStream_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_logic_1 = inStream_V_dest_V_0_vld_out))) then 
                                        inStream_V_dest_V_0_sel_rd <= not(inStream_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_in))) then 
                                        inStream_V_dest_V_0_sel_wr <= not(inStream_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_dest_V_0_state)) or ((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_dest_V_0_state)))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_0 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_dest_V_0_state)) or ((ap_const_logic_0 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_dest_V_0_state)))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_dest_V_0_state)) or ((ap_const_logic_1 = inStream_V_dest_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_dest_V_0_state)) or ((ap_const_lv2_3 = inStream_V_dest_V_0_state) and not(((ap_const_logic_1 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_0 = inStream_V_dest_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_dest_V_0_vld_in) and (ap_const_logic_1 = inStream_V_dest_V_0_ack_out)))))) then 
                    inStream_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_id_V_0_ack_out) and (ap_const_logic_1 = inStream_V_id_V_0_vld_out))) then 
                                        inStream_V_id_V_0_sel_rd <= not(inStream_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_id_V_0_vld_in) and (ap_const_logic_1 = inStream_V_id_V_0_ack_in))) then 
                                        inStream_V_id_V_0_sel_wr <= not(inStream_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_id_V_0_vld_in) and (ap_const_logic_1 = inStream_V_id_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_id_V_0_state)) or ((ap_const_logic_0 = inStream_V_id_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_id_V_0_state)))) then 
                    inStream_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_id_V_0_vld_in) and (ap_const_logic_0 = inStream_V_id_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_id_V_0_state)) or ((ap_const_logic_0 = inStream_V_id_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_id_V_0_state)))) then 
                    inStream_V_id_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_id_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_id_V_0_state)) or ((ap_const_logic_1 = inStream_V_id_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_id_V_0_state)) or ((ap_const_lv2_3 = inStream_V_id_V_0_state) and not(((ap_const_logic_1 = inStream_V_id_V_0_vld_in) and (ap_const_logic_0 = inStream_V_id_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_id_V_0_vld_in) and (ap_const_logic_1 = inStream_V_id_V_0_ack_out)))))) then 
                    inStream_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_keep_V_0_ack_out) and (ap_const_logic_1 = inStream_V_keep_V_0_vld_out))) then 
                                        inStream_V_keep_V_0_sel_rd <= not(inStream_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_keep_V_0_vld_in) and (ap_const_logic_1 = inStream_V_keep_V_0_ack_in))) then 
                                        inStream_V_keep_V_0_sel_wr <= not(inStream_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_keep_V_0_vld_in) and (ap_const_logic_1 = inStream_V_keep_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_keep_V_0_state)) or ((ap_const_logic_0 = inStream_V_keep_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_keep_V_0_state)))) then 
                    inStream_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_keep_V_0_vld_in) and (ap_const_logic_0 = inStream_V_keep_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_keep_V_0_state)) or ((ap_const_logic_0 = inStream_V_keep_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_keep_V_0_state)))) then 
                    inStream_V_keep_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_keep_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_keep_V_0_state)) or ((ap_const_logic_1 = inStream_V_keep_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_keep_V_0_state)) or ((ap_const_lv2_3 = inStream_V_keep_V_0_state) and not(((ap_const_logic_1 = inStream_V_keep_V_0_vld_in) and (ap_const_logic_0 = inStream_V_keep_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_keep_V_0_vld_in) and (ap_const_logic_1 = inStream_V_keep_V_0_ack_out)))))) then 
                    inStream_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_last_V_0_ack_out) and (ap_const_logic_1 = inStream_V_last_V_0_vld_out))) then 
                                        inStream_V_last_V_0_sel_rd <= not(inStream_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_last_V_0_vld_in) and (ap_const_logic_1 = inStream_V_last_V_0_ack_in))) then 
                                        inStream_V_last_V_0_sel_wr <= not(inStream_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_last_V_0_vld_in) and (ap_const_logic_1 = inStream_V_last_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_last_V_0_state)) or ((ap_const_logic_0 = inStream_V_last_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_last_V_0_state)))) then 
                    inStream_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_last_V_0_vld_in) and (ap_const_logic_0 = inStream_V_last_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_last_V_0_state)) or ((ap_const_logic_0 = inStream_V_last_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_last_V_0_state)))) then 
                    inStream_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_last_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_last_V_0_state)) or ((ap_const_logic_1 = inStream_V_last_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_last_V_0_state)) or ((ap_const_lv2_3 = inStream_V_last_V_0_state) and not(((ap_const_logic_1 = inStream_V_last_V_0_vld_in) and (ap_const_logic_0 = inStream_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_last_V_0_vld_in) and (ap_const_logic_1 = inStream_V_last_V_0_ack_out)))))) then 
                    inStream_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_strb_V_0_ack_out) and (ap_const_logic_1 = inStream_V_strb_V_0_vld_out))) then 
                                        inStream_V_strb_V_0_sel_rd <= not(inStream_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_strb_V_0_vld_in) and (ap_const_logic_1 = inStream_V_strb_V_0_ack_in))) then 
                                        inStream_V_strb_V_0_sel_wr <= not(inStream_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_strb_V_0_vld_in) and (ap_const_logic_1 = inStream_V_strb_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_strb_V_0_state)) or ((ap_const_logic_0 = inStream_V_strb_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_strb_V_0_state)))) then 
                    inStream_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_strb_V_0_vld_in) and (ap_const_logic_0 = inStream_V_strb_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_strb_V_0_state)) or ((ap_const_logic_0 = inStream_V_strb_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_strb_V_0_state)))) then 
                    inStream_V_strb_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_strb_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_strb_V_0_state)) or ((ap_const_logic_1 = inStream_V_strb_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_strb_V_0_state)) or ((ap_const_lv2_3 = inStream_V_strb_V_0_state) and not(((ap_const_logic_1 = inStream_V_strb_V_0_vld_in) and (ap_const_logic_0 = inStream_V_strb_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_strb_V_0_vld_in) and (ap_const_logic_1 = inStream_V_strb_V_0_ack_out)))))) then 
                    inStream_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    inStream_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_user_V_0_ack_out) and (ap_const_logic_1 = inStream_V_user_V_0_vld_out))) then 
                                        inStream_V_user_V_0_sel_rd <= not(inStream_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = inStream_V_user_V_0_vld_in) and (ap_const_logic_1 = inStream_V_user_V_0_ack_in))) then 
                                        inStream_V_user_V_0_sel_wr <= not(inStream_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    inStream_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                inStream_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = inStream_V_user_V_0_vld_in) and (ap_const_logic_1 = inStream_V_user_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_user_V_0_state)) or ((ap_const_logic_0 = inStream_V_user_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_user_V_0_state)))) then 
                    inStream_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = inStream_V_user_V_0_vld_in) and (ap_const_logic_0 = inStream_V_user_V_0_ack_out) and (ap_const_lv2_3 = inStream_V_user_V_0_state)) or ((ap_const_logic_0 = inStream_V_user_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_user_V_0_state)))) then 
                    inStream_V_user_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = inStream_V_user_V_0_vld_in) and (ap_const_lv2_2 = inStream_V_user_V_0_state)) or ((ap_const_logic_1 = inStream_V_user_V_0_ack_out) and (ap_const_lv2_1 = inStream_V_user_V_0_state)) or ((ap_const_lv2_3 = inStream_V_user_V_0_state) and not(((ap_const_logic_1 = inStream_V_user_V_0_vld_in) and (ap_const_logic_0 = inStream_V_user_V_0_ack_out))) and not(((ap_const_logic_0 = inStream_V_user_V_0_vld_in) and (ap_const_logic_1 = inStream_V_user_V_0_ack_out)))))) then 
                    inStream_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    inStream_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_logic_1 = outStream_V_data_V_1_vld_out))) then 
                                        outStream_V_data_V_1_sel_rd <= not(outStream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_in))) then 
                                        outStream_V_data_V_1_sel_wr <= not(outStream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_data_V_1_state)) or ((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_data_V_1_state)))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_0 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_data_V_1_state)) or ((ap_const_logic_0 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_data_V_1_state)))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_data_V_1_state)) or ((ap_const_logic_1 = outStream_V_data_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_data_V_1_state)) or ((ap_const_lv2_3 = outStream_V_data_V_1_state) and not(((ap_const_logic_1 = outStream_V_data_V_1_vld_in) and (ap_const_logic_0 = outStream_V_data_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_data_V_1_vld_in) and (ap_const_logic_1 = outStream_V_data_V_1_ack_out)))))) then 
                    outStream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_logic_1 = outStream_V_dest_V_1_vld_out))) then 
                                        outStream_V_dest_V_1_sel_rd <= not(outStream_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_in))) then 
                                        outStream_V_dest_V_1_sel_wr <= not(outStream_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_dest_V_1_state)) or ((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_dest_V_1_state)))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_0 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_dest_V_1_state)) or ((ap_const_logic_0 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_dest_V_1_state)))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_dest_V_1_state)) or ((ap_const_logic_1 = outStream_V_dest_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_dest_V_1_state)) or ((ap_const_lv2_3 = outStream_V_dest_V_1_state) and not(((ap_const_logic_1 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_0 = outStream_V_dest_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_dest_V_1_vld_in) and (ap_const_logic_1 = outStream_V_dest_V_1_ack_out)))))) then 
                    outStream_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_logic_1 = outStream_V_id_V_1_vld_out))) then 
                                        outStream_V_id_V_1_sel_rd <= not(outStream_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_in))) then 
                                        outStream_V_id_V_1_sel_wr <= not(outStream_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_id_V_1_state)) or ((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_id_V_1_state)))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_0 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_id_V_1_state)) or ((ap_const_logic_0 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_id_V_1_state)))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_id_V_1_state)) or ((ap_const_logic_1 = outStream_V_id_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_id_V_1_state)) or ((ap_const_lv2_3 = outStream_V_id_V_1_state) and not(((ap_const_logic_1 = outStream_V_id_V_1_vld_in) and (ap_const_logic_0 = outStream_V_id_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_id_V_1_vld_in) and (ap_const_logic_1 = outStream_V_id_V_1_ack_out)))))) then 
                    outStream_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_logic_1 = outStream_V_keep_V_1_vld_out))) then 
                                        outStream_V_keep_V_1_sel_rd <= not(outStream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_in))) then 
                                        outStream_V_keep_V_1_sel_wr <= not(outStream_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_keep_V_1_state)) or ((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_keep_V_1_state)))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_0 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_keep_V_1_state)) or ((ap_const_logic_0 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_keep_V_1_state)))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_keep_V_1_state)) or ((ap_const_logic_1 = outStream_V_keep_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_keep_V_1_state)) or ((ap_const_lv2_3 = outStream_V_keep_V_1_state) and not(((ap_const_logic_1 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_0 = outStream_V_keep_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_keep_V_1_vld_in) and (ap_const_logic_1 = outStream_V_keep_V_1_ack_out)))))) then 
                    outStream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_logic_1 = outStream_V_last_V_1_vld_out))) then 
                                        outStream_V_last_V_1_sel_rd <= not(outStream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_in))) then 
                                        outStream_V_last_V_1_sel_wr <= not(outStream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_last_V_1_state)) or ((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_last_V_1_state)))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_0 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_last_V_1_state)) or ((ap_const_logic_0 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_last_V_1_state)))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_last_V_1_state)) or ((ap_const_logic_1 = outStream_V_last_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_last_V_1_state)) or ((ap_const_lv2_3 = outStream_V_last_V_1_state) and not(((ap_const_logic_1 = outStream_V_last_V_1_vld_in) and (ap_const_logic_0 = outStream_V_last_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_last_V_1_vld_in) and (ap_const_logic_1 = outStream_V_last_V_1_ack_out)))))) then 
                    outStream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_logic_1 = outStream_V_strb_V_1_vld_out))) then 
                                        outStream_V_strb_V_1_sel_rd <= not(outStream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_in))) then 
                                        outStream_V_strb_V_1_sel_wr <= not(outStream_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_strb_V_1_state)) or ((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_strb_V_1_state)))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_0 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_strb_V_1_state)) or ((ap_const_logic_0 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_strb_V_1_state)))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_strb_V_1_state)) or ((ap_const_logic_1 = outStream_V_strb_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_strb_V_1_state)) or ((ap_const_lv2_3 = outStream_V_strb_V_1_state) and not(((ap_const_logic_1 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_0 = outStream_V_strb_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_strb_V_1_vld_in) and (ap_const_logic_1 = outStream_V_strb_V_1_ack_out)))))) then 
                    outStream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_logic_1 = outStream_V_user_V_1_vld_out))) then 
                                        outStream_V_user_V_1_sel_rd <= not(outStream_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_in))) then 
                                        outStream_V_user_V_1_sel_wr <= not(outStream_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    outStream_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                outStream_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_user_V_1_state)) or ((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_user_V_1_state)))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_0 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_3 = outStream_V_user_V_1_state)) or ((ap_const_logic_0 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_user_V_1_state)))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_lv2_2 = outStream_V_user_V_1_state)) or ((ap_const_logic_1 = outStream_V_user_V_1_ack_out) and (ap_const_lv2_1 = outStream_V_user_V_1_state)) or ((ap_const_lv2_3 = outStream_V_user_V_1_state) and not(((ap_const_logic_1 = outStream_V_user_V_1_vld_in) and (ap_const_logic_0 = outStream_V_user_V_1_ack_out))) and not(((ap_const_logic_0 = outStream_V_user_V_1_vld_in) and (ap_const_logic_1 = outStream_V_user_V_1_ack_out)))))) then 
                    outStream_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    outStream_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    idx_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_0 = exitcond_fu_138_p2))) then 
                idx_reg_127 <= idx_1_fu_144_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                idx_reg_127 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                ap_pipeline_reg_pp0_iter1_exitcond_reg_189 <= exitcond_reg_189;
                exitcond_reg_189 <= exitcond_fu_138_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in))))) then
                ap_pipeline_reg_pp0_iter2_exitcond_reg_189 <= ap_pipeline_reg_pp0_iter1_exitcond_reg_189;
                ap_pipeline_reg_pp0_iter2_tmp_dest_V_reg_228 <= tmp_dest_V_reg_228;
                ap_pipeline_reg_pp0_iter2_tmp_id_V_reg_223 <= tmp_id_V_reg_223;
                ap_pipeline_reg_pp0_iter2_tmp_keep_V_reg_203 <= tmp_keep_V_reg_203;
                ap_pipeline_reg_pp0_iter2_tmp_last_V_reg_218 <= tmp_last_V_reg_218;
                ap_pipeline_reg_pp0_iter2_tmp_strb_V_reg_208 <= tmp_strb_V_reg_208;
                ap_pipeline_reg_pp0_iter2_tmp_user_V_reg_213 <= tmp_user_V_reg_213;
                ap_pipeline_reg_pp0_iter3_exitcond_reg_189 <= ap_pipeline_reg_pp0_iter2_exitcond_reg_189;
                ap_pipeline_reg_pp0_iter3_tmp_dest_V_reg_228 <= ap_pipeline_reg_pp0_iter2_tmp_dest_V_reg_228;
                ap_pipeline_reg_pp0_iter3_tmp_id_V_reg_223 <= ap_pipeline_reg_pp0_iter2_tmp_id_V_reg_223;
                ap_pipeline_reg_pp0_iter3_tmp_keep_V_reg_203 <= ap_pipeline_reg_pp0_iter2_tmp_keep_V_reg_203;
                ap_pipeline_reg_pp0_iter3_tmp_last_V_reg_218 <= ap_pipeline_reg_pp0_iter2_tmp_last_V_reg_218;
                ap_pipeline_reg_pp0_iter3_tmp_strb_V_reg_208 <= ap_pipeline_reg_pp0_iter2_tmp_strb_V_reg_208;
                ap_pipeline_reg_pp0_iter3_tmp_user_V_reg_213 <= ap_pipeline_reg_pp0_iter2_tmp_user_V_reg_213;
                ap_pipeline_reg_pp0_iter4_exitcond_reg_189 <= ap_pipeline_reg_pp0_iter3_exitcond_reg_189;
                ap_pipeline_reg_pp0_iter4_tmp_dest_V_reg_228 <= ap_pipeline_reg_pp0_iter3_tmp_dest_V_reg_228;
                ap_pipeline_reg_pp0_iter4_tmp_id_V_reg_223 <= ap_pipeline_reg_pp0_iter3_tmp_id_V_reg_223;
                ap_pipeline_reg_pp0_iter4_tmp_keep_V_reg_203 <= ap_pipeline_reg_pp0_iter3_tmp_keep_V_reg_203;
                ap_pipeline_reg_pp0_iter4_tmp_last_V_reg_218 <= ap_pipeline_reg_pp0_iter3_tmp_last_V_reg_218;
                ap_pipeline_reg_pp0_iter4_tmp_strb_V_reg_208 <= ap_pipeline_reg_pp0_iter3_tmp_strb_V_reg_208;
                ap_pipeline_reg_pp0_iter4_tmp_user_V_reg_213 <= ap_pipeline_reg_pp0_iter3_tmp_user_V_reg_213;
                ap_pipeline_reg_pp0_iter5_exitcond_reg_189 <= ap_pipeline_reg_pp0_iter4_exitcond_reg_189;
                ap_pipeline_reg_pp0_iter5_tmp_dest_V_reg_228 <= ap_pipeline_reg_pp0_iter4_tmp_dest_V_reg_228;
                ap_pipeline_reg_pp0_iter5_tmp_id_V_reg_223 <= ap_pipeline_reg_pp0_iter4_tmp_id_V_reg_223;
                ap_pipeline_reg_pp0_iter5_tmp_keep_V_reg_203 <= ap_pipeline_reg_pp0_iter4_tmp_keep_V_reg_203;
                ap_pipeline_reg_pp0_iter5_tmp_last_V_reg_218 <= ap_pipeline_reg_pp0_iter4_tmp_last_V_reg_218;
                ap_pipeline_reg_pp0_iter5_tmp_strb_V_reg_208 <= ap_pipeline_reg_pp0_iter4_tmp_strb_V_reg_208;
                ap_pipeline_reg_pp0_iter5_tmp_user_V_reg_213 <= ap_pipeline_reg_pp0_iter4_tmp_user_V_reg_213;
                ap_pipeline_reg_pp0_iter6_exitcond_reg_189 <= ap_pipeline_reg_pp0_iter5_exitcond_reg_189;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then
                gain_read_reg_184 <= gain;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_data_V_0_load_A)) then
                inStream_V_data_V_0_payload_A <= inStream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_data_V_0_load_B)) then
                inStream_V_data_V_0_payload_B <= inStream_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_dest_V_0_load_A)) then
                inStream_V_dest_V_0_payload_A <= inStream_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_dest_V_0_load_B)) then
                inStream_V_dest_V_0_payload_B <= inStream_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_id_V_0_load_A)) then
                inStream_V_id_V_0_payload_A <= inStream_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_id_V_0_load_B)) then
                inStream_V_id_V_0_payload_B <= inStream_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_keep_V_0_load_A)) then
                inStream_V_keep_V_0_payload_A <= inStream_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_keep_V_0_load_B)) then
                inStream_V_keep_V_0_payload_B <= inStream_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_last_V_0_load_A)) then
                inStream_V_last_V_0_payload_A <= inStream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_last_V_0_load_B)) then
                inStream_V_last_V_0_payload_B <= inStream_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_strb_V_0_load_A)) then
                inStream_V_strb_V_0_payload_A <= inStream_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_strb_V_0_load_B)) then
                inStream_V_strb_V_0_payload_B <= inStream_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_user_V_0_load_A)) then
                inStream_V_user_V_0_payload_A <= inStream_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = inStream_V_user_V_0_load_B)) then
                inStream_V_user_V_0_payload_B <= inStream_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_data_V_1_load_A)) then
                outStream_V_data_V_1_payload_A <= grp_fu_178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_data_V_1_load_B)) then
                outStream_V_data_V_1_payload_B <= grp_fu_178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_dest_V_1_load_A)) then
                outStream_V_dest_V_1_payload_A <= ap_pipeline_reg_pp0_iter5_tmp_dest_V_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_dest_V_1_load_B)) then
                outStream_V_dest_V_1_payload_B <= ap_pipeline_reg_pp0_iter5_tmp_dest_V_reg_228;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_id_V_1_load_A)) then
                outStream_V_id_V_1_payload_A <= ap_pipeline_reg_pp0_iter5_tmp_id_V_reg_223;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_id_V_1_load_B)) then
                outStream_V_id_V_1_payload_B <= ap_pipeline_reg_pp0_iter5_tmp_id_V_reg_223;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_keep_V_1_load_A)) then
                outStream_V_keep_V_1_payload_A <= ap_pipeline_reg_pp0_iter5_tmp_keep_V_reg_203;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_keep_V_1_load_B)) then
                outStream_V_keep_V_1_payload_B <= ap_pipeline_reg_pp0_iter5_tmp_keep_V_reg_203;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_last_V_1_load_A)) then
                outStream_V_last_V_1_payload_A <= ap_pipeline_reg_pp0_iter5_tmp_last_V_reg_218;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_last_V_1_load_B)) then
                outStream_V_last_V_1_payload_B <= ap_pipeline_reg_pp0_iter5_tmp_last_V_reg_218;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_strb_V_1_load_A)) then
                outStream_V_strb_V_1_payload_A <= ap_pipeline_reg_pp0_iter5_tmp_strb_V_reg_208;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_strb_V_1_load_B)) then
                outStream_V_strb_V_1_payload_B <= ap_pipeline_reg_pp0_iter5_tmp_strb_V_reg_208;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_user_V_1_load_A)) then
                outStream_V_user_V_1_payload_A <= ap_pipeline_reg_pp0_iter5_tmp_user_V_reg_213;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = outStream_V_user_V_1_load_B)) then
                outStream_V_user_V_1_payload_B <= ap_pipeline_reg_pp0_iter5_tmp_user_V_reg_213;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then
                tmp_dest_V_reg_228 <= inStream_V_dest_V_0_data_out;
                tmp_id_V_reg_223 <= inStream_V_id_V_0_data_out;
                tmp_keep_V_reg_203 <= inStream_V_keep_V_0_data_out;
                tmp_last_V_reg_218 <= inStream_V_last_V_0_data_out;
                tmp_strb_V_reg_208 <= inStream_V_strb_V_0_data_out;
                tmp_user_V_reg_213 <= inStream_V_user_V_0_data_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189, exitcond_fu_138_p2, ap_enable_reg_pp0_iter0, ap_condition_1125)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter6)))) and not((not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_138_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter6))) or (not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_fu_138_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                if (not((ap_condition_1125 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state10 <= ap_CS_fsm(2 downto 2);

    ap_condition_1125_assign_proc : process(outStream_V_data_V_1_ack_in, outStream_V_keep_V_1_ack_in, outStream_V_strb_V_1_ack_in, outStream_V_user_V_1_ack_in, outStream_V_last_V_1_ack_in, outStream_V_id_V_1_ack_in, outStream_V_dest_V_1_ack_in)
    begin
                ap_condition_1125 <= ((outStream_V_data_V_1_ack_in = ap_const_logic_0) or (outStream_V_keep_V_1_ack_in = ap_const_logic_0) or (outStream_V_strb_V_1_ack_in = ap_const_logic_0) or (outStream_V_user_V_1_ack_in = ap_const_logic_0) or (outStream_V_last_V_1_ack_in = ap_const_logic_0) or (outStream_V_id_V_1_ack_in = ap_const_logic_0) or (outStream_V_dest_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state10, ap_condition_1125)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_condition_1125 = ap_const_boolean_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10, ap_condition_1125)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state10) and not((ap_condition_1125 = ap_const_boolean_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    exitcond_fu_138_p2 <= "1" when (idx_reg_127 = ap_const_lv10_3E8) else "0";

    grp_fu_178_ce_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            grp_fu_178_ce <= ap_const_logic_1;
        else 
            grp_fu_178_ce <= ap_const_logic_0;
        end if; 
    end process;

    idx_1_fu_144_p2 <= std_logic_vector(unsigned(idx_reg_127) + unsigned(ap_const_lv10_1));

    inStream_TDATA_blk_n_assign_proc : process(inStream_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189))) then 
            inStream_TDATA_blk_n <= inStream_V_data_V_0_state(0);
        else 
            inStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    inStream_TREADY <= inStream_V_dest_V_0_state(1);
    inStream_V_data_V_0_ack_in <= inStream_V_data_V_0_state(1);

    inStream_V_data_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_data_V_0_data_out_assign_proc : process(inStream_V_data_V_0_payload_A, inStream_V_data_V_0_payload_B, inStream_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_data_V_0_sel)) then 
            inStream_V_data_V_0_data_out <= inStream_V_data_V_0_payload_B;
        else 
            inStream_V_data_V_0_data_out <= inStream_V_data_V_0_payload_A;
        end if; 
    end process;

    inStream_V_data_V_0_load_A <= (inStream_V_data_V_0_state_cmp_full and not(inStream_V_data_V_0_sel_wr));
    inStream_V_data_V_0_load_B <= (inStream_V_data_V_0_sel_wr and inStream_V_data_V_0_state_cmp_full);
    inStream_V_data_V_0_sel <= inStream_V_data_V_0_sel_rd;
    inStream_V_data_V_0_state_cmp_full <= '0' when (inStream_V_data_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_data_V_0_vld_in <= inStream_TVALID;
    inStream_V_data_V_0_vld_out <= inStream_V_data_V_0_state(0);
    inStream_V_dest_V_0_ack_in <= inStream_V_dest_V_0_state(1);

    inStream_V_dest_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_dest_V_0_data_out_assign_proc : process(inStream_V_dest_V_0_payload_A, inStream_V_dest_V_0_payload_B, inStream_V_dest_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_dest_V_0_sel)) then 
            inStream_V_dest_V_0_data_out <= inStream_V_dest_V_0_payload_B;
        else 
            inStream_V_dest_V_0_data_out <= inStream_V_dest_V_0_payload_A;
        end if; 
    end process;

    inStream_V_dest_V_0_load_A <= (inStream_V_dest_V_0_state_cmp_full and not(inStream_V_dest_V_0_sel_wr));
    inStream_V_dest_V_0_load_B <= (inStream_V_dest_V_0_sel_wr and inStream_V_dest_V_0_state_cmp_full);
    inStream_V_dest_V_0_sel <= inStream_V_dest_V_0_sel_rd;
    inStream_V_dest_V_0_state_cmp_full <= '0' when (inStream_V_dest_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_dest_V_0_vld_in <= inStream_TVALID;
    inStream_V_dest_V_0_vld_out <= inStream_V_dest_V_0_state(0);
    inStream_V_id_V_0_ack_in <= inStream_V_id_V_0_state(1);

    inStream_V_id_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_id_V_0_data_out_assign_proc : process(inStream_V_id_V_0_payload_A, inStream_V_id_V_0_payload_B, inStream_V_id_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_id_V_0_sel)) then 
            inStream_V_id_V_0_data_out <= inStream_V_id_V_0_payload_B;
        else 
            inStream_V_id_V_0_data_out <= inStream_V_id_V_0_payload_A;
        end if; 
    end process;

    inStream_V_id_V_0_load_A <= (inStream_V_id_V_0_state_cmp_full and not(inStream_V_id_V_0_sel_wr));
    inStream_V_id_V_0_load_B <= (inStream_V_id_V_0_sel_wr and inStream_V_id_V_0_state_cmp_full);
    inStream_V_id_V_0_sel <= inStream_V_id_V_0_sel_rd;
    inStream_V_id_V_0_state_cmp_full <= '0' when (inStream_V_id_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_id_V_0_vld_in <= inStream_TVALID;
    inStream_V_id_V_0_vld_out <= inStream_V_id_V_0_state(0);
    inStream_V_keep_V_0_ack_in <= inStream_V_keep_V_0_state(1);

    inStream_V_keep_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_keep_V_0_data_out_assign_proc : process(inStream_V_keep_V_0_payload_A, inStream_V_keep_V_0_payload_B, inStream_V_keep_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_keep_V_0_sel)) then 
            inStream_V_keep_V_0_data_out <= inStream_V_keep_V_0_payload_B;
        else 
            inStream_V_keep_V_0_data_out <= inStream_V_keep_V_0_payload_A;
        end if; 
    end process;

    inStream_V_keep_V_0_load_A <= (inStream_V_keep_V_0_state_cmp_full and not(inStream_V_keep_V_0_sel_wr));
    inStream_V_keep_V_0_load_B <= (inStream_V_keep_V_0_sel_wr and inStream_V_keep_V_0_state_cmp_full);
    inStream_V_keep_V_0_sel <= inStream_V_keep_V_0_sel_rd;
    inStream_V_keep_V_0_state_cmp_full <= '0' when (inStream_V_keep_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_keep_V_0_vld_in <= inStream_TVALID;
    inStream_V_keep_V_0_vld_out <= inStream_V_keep_V_0_state(0);
    inStream_V_last_V_0_ack_in <= inStream_V_last_V_0_state(1);

    inStream_V_last_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_last_V_0_data_out_assign_proc : process(inStream_V_last_V_0_payload_A, inStream_V_last_V_0_payload_B, inStream_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_last_V_0_sel)) then 
            inStream_V_last_V_0_data_out <= inStream_V_last_V_0_payload_B;
        else 
            inStream_V_last_V_0_data_out <= inStream_V_last_V_0_payload_A;
        end if; 
    end process;

    inStream_V_last_V_0_load_A <= (inStream_V_last_V_0_state_cmp_full and not(inStream_V_last_V_0_sel_wr));
    inStream_V_last_V_0_load_B <= (inStream_V_last_V_0_sel_wr and inStream_V_last_V_0_state_cmp_full);
    inStream_V_last_V_0_sel <= inStream_V_last_V_0_sel_rd;
    inStream_V_last_V_0_state_cmp_full <= '0' when (inStream_V_last_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_last_V_0_vld_in <= inStream_TVALID;
    inStream_V_last_V_0_vld_out <= inStream_V_last_V_0_state(0);
    inStream_V_strb_V_0_ack_in <= inStream_V_strb_V_0_state(1);

    inStream_V_strb_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_strb_V_0_data_out_assign_proc : process(inStream_V_strb_V_0_payload_A, inStream_V_strb_V_0_payload_B, inStream_V_strb_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_strb_V_0_sel)) then 
            inStream_V_strb_V_0_data_out <= inStream_V_strb_V_0_payload_B;
        else 
            inStream_V_strb_V_0_data_out <= inStream_V_strb_V_0_payload_A;
        end if; 
    end process;

    inStream_V_strb_V_0_load_A <= (inStream_V_strb_V_0_state_cmp_full and not(inStream_V_strb_V_0_sel_wr));
    inStream_V_strb_V_0_load_B <= (inStream_V_strb_V_0_sel_wr and inStream_V_strb_V_0_state_cmp_full);
    inStream_V_strb_V_0_sel <= inStream_V_strb_V_0_sel_rd;
    inStream_V_strb_V_0_state_cmp_full <= '0' when (inStream_V_strb_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_strb_V_0_vld_in <= inStream_TVALID;
    inStream_V_strb_V_0_vld_out <= inStream_V_strb_V_0_state(0);
    inStream_V_user_V_0_ack_in <= inStream_V_user_V_0_state(1);

    inStream_V_user_V_0_ack_out_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            inStream_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            inStream_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    inStream_V_user_V_0_data_out_assign_proc : process(inStream_V_user_V_0_payload_A, inStream_V_user_V_0_payload_B, inStream_V_user_V_0_sel)
    begin
        if ((ap_const_logic_1 = inStream_V_user_V_0_sel)) then 
            inStream_V_user_V_0_data_out <= inStream_V_user_V_0_payload_B;
        else 
            inStream_V_user_V_0_data_out <= inStream_V_user_V_0_payload_A;
        end if; 
    end process;

    inStream_V_user_V_0_load_A <= (inStream_V_user_V_0_state_cmp_full and not(inStream_V_user_V_0_sel_wr));
    inStream_V_user_V_0_load_B <= (inStream_V_user_V_0_sel_wr and inStream_V_user_V_0_state_cmp_full);
    inStream_V_user_V_0_sel <= inStream_V_user_V_0_sel_rd;
    inStream_V_user_V_0_state_cmp_full <= '0' when (inStream_V_user_V_0_state = ap_const_lv2_1) else '1';
    inStream_V_user_V_0_vld_in <= inStream_TVALID;
    inStream_V_user_V_0_vld_out <= inStream_V_user_V_0_state(0);
    outStream_TDATA <= outStream_V_data_V_1_data_out;

    outStream_TDATA_blk_n_assign_proc : process(outStream_V_data_V_1_state, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189)))) then 
            outStream_TDATA_blk_n <= outStream_V_data_V_1_state(1);
        else 
            outStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_TDEST <= outStream_V_dest_V_1_data_out;
    outStream_TID <= outStream_V_id_V_1_data_out;
    outStream_TKEEP <= outStream_V_keep_V_1_data_out;
    outStream_TLAST <= outStream_V_last_V_1_data_out;
    outStream_TSTRB <= outStream_V_strb_V_1_data_out;
    outStream_TUSER <= outStream_V_user_V_1_data_out;
    outStream_TVALID <= outStream_V_dest_V_1_state(0);
    outStream_V_data_V_1_ack_in <= outStream_V_data_V_1_state(1);
    outStream_V_data_V_1_ack_out <= outStream_TREADY;

    outStream_V_data_V_1_data_out_assign_proc : process(outStream_V_data_V_1_payload_A, outStream_V_data_V_1_payload_B, outStream_V_data_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_data_V_1_sel)) then 
            outStream_V_data_V_1_data_out <= outStream_V_data_V_1_payload_B;
        else 
            outStream_V_data_V_1_data_out <= outStream_V_data_V_1_payload_A;
        end if; 
    end process;

    outStream_V_data_V_1_load_A <= (outStream_V_data_V_1_state_cmp_full and not(outStream_V_data_V_1_sel_wr));
    outStream_V_data_V_1_load_B <= (outStream_V_data_V_1_sel_wr and outStream_V_data_V_1_state_cmp_full);
    outStream_V_data_V_1_sel <= outStream_V_data_V_1_sel_rd;
    outStream_V_data_V_1_state_cmp_full <= '0' when (outStream_V_data_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_data_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_data_V_1_vld_out <= outStream_V_data_V_1_state(0);
    outStream_V_dest_V_1_ack_in <= outStream_V_dest_V_1_state(1);
    outStream_V_dest_V_1_ack_out <= outStream_TREADY;

    outStream_V_dest_V_1_data_out_assign_proc : process(outStream_V_dest_V_1_payload_A, outStream_V_dest_V_1_payload_B, outStream_V_dest_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_dest_V_1_sel)) then 
            outStream_V_dest_V_1_data_out <= outStream_V_dest_V_1_payload_B;
        else 
            outStream_V_dest_V_1_data_out <= outStream_V_dest_V_1_payload_A;
        end if; 
    end process;

    outStream_V_dest_V_1_load_A <= (outStream_V_dest_V_1_state_cmp_full and not(outStream_V_dest_V_1_sel_wr));
    outStream_V_dest_V_1_load_B <= (outStream_V_dest_V_1_sel_wr and outStream_V_dest_V_1_state_cmp_full);
    outStream_V_dest_V_1_sel <= outStream_V_dest_V_1_sel_rd;
    outStream_V_dest_V_1_state_cmp_full <= '0' when (outStream_V_dest_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_dest_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_dest_V_1_vld_out <= outStream_V_dest_V_1_state(0);
    outStream_V_id_V_1_ack_in <= outStream_V_id_V_1_state(1);
    outStream_V_id_V_1_ack_out <= outStream_TREADY;

    outStream_V_id_V_1_data_out_assign_proc : process(outStream_V_id_V_1_payload_A, outStream_V_id_V_1_payload_B, outStream_V_id_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_id_V_1_sel)) then 
            outStream_V_id_V_1_data_out <= outStream_V_id_V_1_payload_B;
        else 
            outStream_V_id_V_1_data_out <= outStream_V_id_V_1_payload_A;
        end if; 
    end process;

    outStream_V_id_V_1_load_A <= (outStream_V_id_V_1_state_cmp_full and not(outStream_V_id_V_1_sel_wr));
    outStream_V_id_V_1_load_B <= (outStream_V_id_V_1_sel_wr and outStream_V_id_V_1_state_cmp_full);
    outStream_V_id_V_1_sel <= outStream_V_id_V_1_sel_rd;
    outStream_V_id_V_1_state_cmp_full <= '0' when (outStream_V_id_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_id_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_id_V_1_vld_out <= outStream_V_id_V_1_state(0);
    outStream_V_keep_V_1_ack_in <= outStream_V_keep_V_1_state(1);
    outStream_V_keep_V_1_ack_out <= outStream_TREADY;

    outStream_V_keep_V_1_data_out_assign_proc : process(outStream_V_keep_V_1_payload_A, outStream_V_keep_V_1_payload_B, outStream_V_keep_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_keep_V_1_sel)) then 
            outStream_V_keep_V_1_data_out <= outStream_V_keep_V_1_payload_B;
        else 
            outStream_V_keep_V_1_data_out <= outStream_V_keep_V_1_payload_A;
        end if; 
    end process;

    outStream_V_keep_V_1_load_A <= (outStream_V_keep_V_1_state_cmp_full and not(outStream_V_keep_V_1_sel_wr));
    outStream_V_keep_V_1_load_B <= (outStream_V_keep_V_1_sel_wr and outStream_V_keep_V_1_state_cmp_full);
    outStream_V_keep_V_1_sel <= outStream_V_keep_V_1_sel_rd;
    outStream_V_keep_V_1_state_cmp_full <= '0' when (outStream_V_keep_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_keep_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_keep_V_1_vld_out <= outStream_V_keep_V_1_state(0);
    outStream_V_last_V_1_ack_in <= outStream_V_last_V_1_state(1);
    outStream_V_last_V_1_ack_out <= outStream_TREADY;

    outStream_V_last_V_1_data_out_assign_proc : process(outStream_V_last_V_1_payload_A, outStream_V_last_V_1_payload_B, outStream_V_last_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_last_V_1_sel)) then 
            outStream_V_last_V_1_data_out <= outStream_V_last_V_1_payload_B;
        else 
            outStream_V_last_V_1_data_out <= outStream_V_last_V_1_payload_A;
        end if; 
    end process;

    outStream_V_last_V_1_load_A <= (outStream_V_last_V_1_state_cmp_full and not(outStream_V_last_V_1_sel_wr));
    outStream_V_last_V_1_load_B <= (outStream_V_last_V_1_sel_wr and outStream_V_last_V_1_state_cmp_full);
    outStream_V_last_V_1_sel <= outStream_V_last_V_1_sel_rd;
    outStream_V_last_V_1_state_cmp_full <= '0' when (outStream_V_last_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_last_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_last_V_1_vld_out <= outStream_V_last_V_1_state(0);
    outStream_V_strb_V_1_ack_in <= outStream_V_strb_V_1_state(1);
    outStream_V_strb_V_1_ack_out <= outStream_TREADY;

    outStream_V_strb_V_1_data_out_assign_proc : process(outStream_V_strb_V_1_payload_A, outStream_V_strb_V_1_payload_B, outStream_V_strb_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_strb_V_1_sel)) then 
            outStream_V_strb_V_1_data_out <= outStream_V_strb_V_1_payload_B;
        else 
            outStream_V_strb_V_1_data_out <= outStream_V_strb_V_1_payload_A;
        end if; 
    end process;

    outStream_V_strb_V_1_load_A <= (outStream_V_strb_V_1_state_cmp_full and not(outStream_V_strb_V_1_sel_wr));
    outStream_V_strb_V_1_load_B <= (outStream_V_strb_V_1_sel_wr and outStream_V_strb_V_1_state_cmp_full);
    outStream_V_strb_V_1_sel <= outStream_V_strb_V_1_sel_rd;
    outStream_V_strb_V_1_state_cmp_full <= '0' when (outStream_V_strb_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_strb_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_strb_V_1_vld_out <= outStream_V_strb_V_1_state(0);
    outStream_V_user_V_1_ack_in <= outStream_V_user_V_1_state(1);
    outStream_V_user_V_1_ack_out <= outStream_TREADY;

    outStream_V_user_V_1_data_out_assign_proc : process(outStream_V_user_V_1_payload_A, outStream_V_user_V_1_payload_B, outStream_V_user_V_1_sel)
    begin
        if ((ap_const_logic_1 = outStream_V_user_V_1_sel)) then 
            outStream_V_user_V_1_data_out <= outStream_V_user_V_1_payload_B;
        else 
            outStream_V_user_V_1_data_out <= outStream_V_user_V_1_payload_A;
        end if; 
    end process;

    outStream_V_user_V_1_load_A <= (outStream_V_user_V_1_state_cmp_full and not(outStream_V_user_V_1_sel_wr));
    outStream_V_user_V_1_load_B <= (outStream_V_user_V_1_sel_wr and outStream_V_user_V_1_state_cmp_full);
    outStream_V_user_V_1_sel <= outStream_V_user_V_1_sel_rd;
    outStream_V_user_V_1_state_cmp_full <= '0' when (outStream_V_user_V_1_state = ap_const_lv2_1) else '1';

    outStream_V_user_V_1_vld_in_assign_proc : process(inStream_V_data_V_0_vld_out, outStream_V_data_V_1_ack_in, ap_enable_reg_pp0_iter1, exitcond_reg_189, ap_enable_reg_pp0_iter6, ap_pipeline_reg_pp0_iter5_exitcond_reg_189, ap_enable_reg_pp0_iter7, ap_pipeline_reg_pp0_iter6_exitcond_reg_189)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and not((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = exitcond_reg_189) and (inStream_V_data_V_0_vld_out = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter5_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter6_exitcond_reg_189) and (ap_const_logic_0 = outStream_V_data_V_1_ack_in)))))) then 
            outStream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            outStream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    outStream_V_user_V_1_vld_out <= outStream_V_user_V_1_state(0);
end behav;
