// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "skipprefetch_Nelem.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic skipprefetch_Nelem::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic skipprefetch_Nelem::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state1 = "1";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state2 = "10";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state3 = "100";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state4 = "1000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state5 = "10000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state6 = "100000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state7 = "1000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state8 = "10000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state9 = "100000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state10 = "1000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state11 = "10000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state12 = "100000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage0 = "1000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage1 = "10000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage2 = "100000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage3 = "1000000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage4 = "10000000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage5 = "100000000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage6 = "1000000000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage7 = "10000000000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_pp0_stage8 = "100000000000000000000000000000000000000000000";
const sc_lv<46> skipprefetch_Nelem::ap_ST_fsm_state54 = "1000000000000000000000000000000000000000000000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> skipprefetch_Nelem::ap_const_lv1_1 = "1";
const bool skipprefetch_Nelem::ap_const_boolean_1 = true;
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_11 = "10001";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_18 = "11000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_12 = "10010";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_19 = "11001";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_24 = "100100";
const sc_lv<1> skipprefetch_Nelem::ap_const_lv1_0 = "0";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2B = "101011";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_1B = "11011";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_22 = "100010";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_1 = "1";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_8 = "1000";
const int skipprefetch_Nelem::C_S_AXI_DATA_WIDTH = "100000";
const int skipprefetch_Nelem::C_M_AXI_DATA_WIDTH = "100000";
const int skipprefetch_Nelem::C_M_AXI_A_BUS_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int skipprefetch_Nelem::C_M_AXI_A_BUS_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int skipprefetch_Nelem::C_M_AXI_A_BUS_CACHE_VALUE = "11";
const int skipprefetch_Nelem::C_M_AXI_PREF_WINDOW_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int skipprefetch_Nelem::C_M_AXI_PREF_WINDOW_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int skipprefetch_Nelem::C_M_AXI_PREF_WINDOW_CACHE_VALUE = "11";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_9 = "1001";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_E = "1110";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_F = "1111";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_10 = "10000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_1A = "11010";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2C = "101100";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_23 = "100011";
const sc_lv<26> skipprefetch_Nelem::ap_const_lv26_0 = "00000000000000000000000000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2D = "101101";
const sc_lv<6> skipprefetch_Nelem::ap_const_lv6_0 = "000000";
const sc_lv<3> skipprefetch_Nelem::ap_const_lv3_0 = "000";
const sc_lv<2> skipprefetch_Nelem::ap_const_lv2_0 = "00";
const sc_lv<4> skipprefetch_Nelem::ap_const_lv4_0 = "0000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_20 = "100000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2F = "101111";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_2 = "10";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_1F = "11111";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_3 = "11";
const sc_lv<65> skipprefetch_Nelem::ap_const_lv65_147AE147B = "101000111101011100001010001111011";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_26 = "100110";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_40 = "1000000";
const sc_lv<65> skipprefetch_Nelem::ap_const_lv65_0 = "00000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<26> skipprefetch_Nelem::ap_const_lv26_1 = "1";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_30 = "110000";
const sc_lv<32> skipprefetch_Nelem::ap_const_lv32_3F = "111111";
const sc_lv<6> skipprefetch_Nelem::ap_const_lv6_31 = "110001";
const sc_lv<6> skipprefetch_Nelem::ap_const_lv6_1 = "1";
const sc_lv<64> skipprefetch_Nelem::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> skipprefetch_Nelem::ap_const_lv8_0 = "00000000";

skipprefetch_Nelem::skipprefetch_Nelem(sc_module_name name) : sc_module(name), mVcdFile(0) {
    skipprefetch_Nelem_CFG_s_axi_U = new skipprefetch_Nelem_CFG_s_axi<C_S_AXI_CFG_ADDR_WIDTH,C_S_AXI_CFG_DATA_WIDTH>("skipprefetch_Nelem_CFG_s_axi_U");
    skipprefetch_Nelem_CFG_s_axi_U->AWVALID(s_axi_CFG_AWVALID);
    skipprefetch_Nelem_CFG_s_axi_U->AWREADY(s_axi_CFG_AWREADY);
    skipprefetch_Nelem_CFG_s_axi_U->AWADDR(s_axi_CFG_AWADDR);
    skipprefetch_Nelem_CFG_s_axi_U->WVALID(s_axi_CFG_WVALID);
    skipprefetch_Nelem_CFG_s_axi_U->WREADY(s_axi_CFG_WREADY);
    skipprefetch_Nelem_CFG_s_axi_U->WDATA(s_axi_CFG_WDATA);
    skipprefetch_Nelem_CFG_s_axi_U->WSTRB(s_axi_CFG_WSTRB);
    skipprefetch_Nelem_CFG_s_axi_U->ARVALID(s_axi_CFG_ARVALID);
    skipprefetch_Nelem_CFG_s_axi_U->ARREADY(s_axi_CFG_ARREADY);
    skipprefetch_Nelem_CFG_s_axi_U->ARADDR(s_axi_CFG_ARADDR);
    skipprefetch_Nelem_CFG_s_axi_U->RVALID(s_axi_CFG_RVALID);
    skipprefetch_Nelem_CFG_s_axi_U->RREADY(s_axi_CFG_RREADY);
    skipprefetch_Nelem_CFG_s_axi_U->RDATA(s_axi_CFG_RDATA);
    skipprefetch_Nelem_CFG_s_axi_U->RRESP(s_axi_CFG_RRESP);
    skipprefetch_Nelem_CFG_s_axi_U->BVALID(s_axi_CFG_BVALID);
    skipprefetch_Nelem_CFG_s_axi_U->BREADY(s_axi_CFG_BREADY);
    skipprefetch_Nelem_CFG_s_axi_U->BRESP(s_axi_CFG_BRESP);
    skipprefetch_Nelem_CFG_s_axi_U->ACLK(ap_clk);
    skipprefetch_Nelem_CFG_s_axi_U->ARESET(ap_rst_n_inv);
    skipprefetch_Nelem_CFG_s_axi_U->ACLK_EN(ap_var_for_const0);
    skipprefetch_Nelem_CFG_s_axi_U->ap_start(ap_start);
    skipprefetch_Nelem_CFG_s_axi_U->interrupt(interrupt);
    skipprefetch_Nelem_CFG_s_axi_U->ap_ready(ap_ready);
    skipprefetch_Nelem_CFG_s_axi_U->ap_done(ap_done);
    skipprefetch_Nelem_CFG_s_axi_U->ap_idle(ap_idle);
    skipprefetch_Nelem_CFG_s_axi_U->a(a);
    skipprefetch_Nelem_CFG_s_axi_U->n(n);
    skipprefetch_Nelem_CFG_s_axi_U->vb(vb);
    skipprefetch_Nelem_A_BUS_m_axi_U = new skipprefetch_Nelem_A_BUS_m_axi<64,32,5,16,16,16,16,C_M_AXI_A_BUS_ID_WIDTH,C_M_AXI_A_BUS_ADDR_WIDTH,C_M_AXI_A_BUS_DATA_WIDTH,C_M_AXI_A_BUS_AWUSER_WIDTH,C_M_AXI_A_BUS_ARUSER_WIDTH,C_M_AXI_A_BUS_WUSER_WIDTH,C_M_AXI_A_BUS_RUSER_WIDTH,C_M_AXI_A_BUS_BUSER_WIDTH,C_M_AXI_A_BUS_USER_VALUE,C_M_AXI_A_BUS_PROT_VALUE,C_M_AXI_A_BUS_CACHE_VALUE>("skipprefetch_Nelem_A_BUS_m_axi_U");
    skipprefetch_Nelem_A_BUS_m_axi_U->AWVALID(m_axi_A_BUS_AWVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWREADY(m_axi_A_BUS_AWREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWADDR(m_axi_A_BUS_AWADDR);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWID(m_axi_A_BUS_AWID);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWLEN(m_axi_A_BUS_AWLEN);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWSIZE(m_axi_A_BUS_AWSIZE);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWBURST(m_axi_A_BUS_AWBURST);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWLOCK(m_axi_A_BUS_AWLOCK);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWCACHE(m_axi_A_BUS_AWCACHE);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWPROT(m_axi_A_BUS_AWPROT);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWQOS(m_axi_A_BUS_AWQOS);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWREGION(m_axi_A_BUS_AWREGION);
    skipprefetch_Nelem_A_BUS_m_axi_U->AWUSER(m_axi_A_BUS_AWUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->WVALID(m_axi_A_BUS_WVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->WREADY(m_axi_A_BUS_WREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->WDATA(m_axi_A_BUS_WDATA);
    skipprefetch_Nelem_A_BUS_m_axi_U->WSTRB(m_axi_A_BUS_WSTRB);
    skipprefetch_Nelem_A_BUS_m_axi_U->WLAST(m_axi_A_BUS_WLAST);
    skipprefetch_Nelem_A_BUS_m_axi_U->WID(m_axi_A_BUS_WID);
    skipprefetch_Nelem_A_BUS_m_axi_U->WUSER(m_axi_A_BUS_WUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARVALID(m_axi_A_BUS_ARVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARREADY(m_axi_A_BUS_ARREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARADDR(m_axi_A_BUS_ARADDR);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARID(m_axi_A_BUS_ARID);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARLEN(m_axi_A_BUS_ARLEN);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARSIZE(m_axi_A_BUS_ARSIZE);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARBURST(m_axi_A_BUS_ARBURST);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARLOCK(m_axi_A_BUS_ARLOCK);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARCACHE(m_axi_A_BUS_ARCACHE);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARPROT(m_axi_A_BUS_ARPROT);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARQOS(m_axi_A_BUS_ARQOS);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARREGION(m_axi_A_BUS_ARREGION);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARUSER(m_axi_A_BUS_ARUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->RVALID(m_axi_A_BUS_RVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->RREADY(m_axi_A_BUS_RREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->RDATA(m_axi_A_BUS_RDATA);
    skipprefetch_Nelem_A_BUS_m_axi_U->RLAST(m_axi_A_BUS_RLAST);
    skipprefetch_Nelem_A_BUS_m_axi_U->RID(m_axi_A_BUS_RID);
    skipprefetch_Nelem_A_BUS_m_axi_U->RUSER(m_axi_A_BUS_RUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->RRESP(m_axi_A_BUS_RRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->BVALID(m_axi_A_BUS_BVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->BREADY(m_axi_A_BUS_BREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->BRESP(m_axi_A_BUS_BRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->BID(m_axi_A_BUS_BID);
    skipprefetch_Nelem_A_BUS_m_axi_U->BUSER(m_axi_A_BUS_BUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->ACLK(ap_clk);
    skipprefetch_Nelem_A_BUS_m_axi_U->ARESET(ap_rst_n_inv);
    skipprefetch_Nelem_A_BUS_m_axi_U->ACLK_EN(ap_var_for_const0);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARVALID(A_BUS_ARVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARREADY(A_BUS_ARREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARADDR(A_BUS_ARADDR);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARID(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARLEN(ap_var_for_const2);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARSIZE(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARLOCK(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARCACHE(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARQOS(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARPROT(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARUSER(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARBURST(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_ARREGION(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RVALID(A_BUS_RVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RREADY(A_BUS_RREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RDATA(A_BUS_RDATA);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RID(A_BUS_RID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RUSER(A_BUS_RUSER);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RRESP(A_BUS_RRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_RLAST(A_BUS_RLAST);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWVALID(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWREADY(A_BUS_AWREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWADDR(ap_var_for_const7);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWID(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWLEN(ap_var_for_const7);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWSIZE(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWLOCK(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWCACHE(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWQOS(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWPROT(ap_var_for_const3);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWUSER(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWBURST(ap_var_for_const4);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_AWREGION(ap_var_for_const5);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WVALID(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WREADY(A_BUS_WREADY);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WDATA(ap_var_for_const8);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WID(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WUSER(ap_var_for_const1);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WLAST(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_WSTRB(ap_var_for_const9);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BVALID(A_BUS_BVALID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BREADY(ap_var_for_const6);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BRESP(A_BUS_BRESP);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BID(A_BUS_BID);
    skipprefetch_Nelem_A_BUS_m_axi_U->I_BUSER(A_BUS_BUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U = new skipprefetch_Nelem_PREF_WINDOW_m_axi<32,32,5,16,16,16,16,C_M_AXI_PREF_WINDOW_ID_WIDTH,C_M_AXI_PREF_WINDOW_ADDR_WIDTH,C_M_AXI_PREF_WINDOW_DATA_WIDTH,C_M_AXI_PREF_WINDOW_AWUSER_WIDTH,C_M_AXI_PREF_WINDOW_ARUSER_WIDTH,C_M_AXI_PREF_WINDOW_WUSER_WIDTH,C_M_AXI_PREF_WINDOW_RUSER_WIDTH,C_M_AXI_PREF_WINDOW_BUSER_WIDTH,C_M_AXI_PREF_WINDOW_USER_VALUE,C_M_AXI_PREF_WINDOW_PROT_VALUE,C_M_AXI_PREF_WINDOW_CACHE_VALUE>("skipprefetch_Nelem_PREF_WINDOW_m_axi_U");
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWVALID(m_axi_PREF_WINDOW_AWVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWREADY(m_axi_PREF_WINDOW_AWREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWADDR(m_axi_PREF_WINDOW_AWADDR);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWID(m_axi_PREF_WINDOW_AWID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWLEN(m_axi_PREF_WINDOW_AWLEN);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWSIZE(m_axi_PREF_WINDOW_AWSIZE);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWBURST(m_axi_PREF_WINDOW_AWBURST);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWLOCK(m_axi_PREF_WINDOW_AWLOCK);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWCACHE(m_axi_PREF_WINDOW_AWCACHE);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWPROT(m_axi_PREF_WINDOW_AWPROT);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWQOS(m_axi_PREF_WINDOW_AWQOS);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWREGION(m_axi_PREF_WINDOW_AWREGION);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->AWUSER(m_axi_PREF_WINDOW_AWUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WVALID(m_axi_PREF_WINDOW_WVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WREADY(m_axi_PREF_WINDOW_WREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WDATA(m_axi_PREF_WINDOW_WDATA);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WSTRB(m_axi_PREF_WINDOW_WSTRB);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WLAST(m_axi_PREF_WINDOW_WLAST);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WID(m_axi_PREF_WINDOW_WID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->WUSER(m_axi_PREF_WINDOW_WUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARVALID(m_axi_PREF_WINDOW_ARVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARREADY(m_axi_PREF_WINDOW_ARREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARADDR(m_axi_PREF_WINDOW_ARADDR);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARID(m_axi_PREF_WINDOW_ARID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARLEN(m_axi_PREF_WINDOW_ARLEN);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARSIZE(m_axi_PREF_WINDOW_ARSIZE);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARBURST(m_axi_PREF_WINDOW_ARBURST);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARLOCK(m_axi_PREF_WINDOW_ARLOCK);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARCACHE(m_axi_PREF_WINDOW_ARCACHE);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARPROT(m_axi_PREF_WINDOW_ARPROT);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARQOS(m_axi_PREF_WINDOW_ARQOS);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARREGION(m_axi_PREF_WINDOW_ARREGION);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARUSER(m_axi_PREF_WINDOW_ARUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RVALID(m_axi_PREF_WINDOW_RVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RREADY(m_axi_PREF_WINDOW_RREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RDATA(m_axi_PREF_WINDOW_RDATA);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RLAST(m_axi_PREF_WINDOW_RLAST);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RID(m_axi_PREF_WINDOW_RID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RUSER(m_axi_PREF_WINDOW_RUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->RRESP(m_axi_PREF_WINDOW_RRESP);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->BVALID(m_axi_PREF_WINDOW_BVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->BREADY(m_axi_PREF_WINDOW_BREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->BRESP(m_axi_PREF_WINDOW_BRESP);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->BID(m_axi_PREF_WINDOW_BID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->BUSER(m_axi_PREF_WINDOW_BUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ACLK(ap_clk);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ARESET(ap_rst_n_inv);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->ACLK_EN(ap_var_for_const0);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARVALID(PREF_WINDOW_ARVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARREADY(PREF_WINDOW_ARREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARADDR(PREF_WINDOW_ARADDR);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARID(ap_var_for_const1);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARLEN(ap_var_for_const2);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARSIZE(ap_var_for_const3);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARLOCK(ap_var_for_const4);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARCACHE(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARQOS(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARPROT(ap_var_for_const3);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARUSER(ap_var_for_const1);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARBURST(ap_var_for_const4);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_ARREGION(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RVALID(PREF_WINDOW_RVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RREADY(PREF_WINDOW_RREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RDATA(PREF_WINDOW_RDATA);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RID(PREF_WINDOW_RID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RUSER(PREF_WINDOW_RUSER);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RRESP(PREF_WINDOW_RRESP);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_RLAST(PREF_WINDOW_RLAST);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWVALID(ap_var_for_const6);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWREADY(PREF_WINDOW_AWREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWADDR(ap_var_for_const7);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWID(ap_var_for_const1);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWLEN(ap_var_for_const7);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWSIZE(ap_var_for_const3);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWLOCK(ap_var_for_const4);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWCACHE(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWQOS(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWPROT(ap_var_for_const3);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWUSER(ap_var_for_const1);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWBURST(ap_var_for_const4);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_AWREGION(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WVALID(ap_var_for_const6);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WREADY(PREF_WINDOW_WREADY);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WDATA(ap_var_for_const7);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WID(ap_var_for_const1);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WUSER(ap_var_for_const1);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WLAST(ap_var_for_const6);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_WSTRB(ap_var_for_const5);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_BVALID(PREF_WINDOW_BVALID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_BREADY(ap_var_for_const6);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_BRESP(PREF_WINDOW_BRESP);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_BID(PREF_WINDOW_BID);
    skipprefetch_Nelem_PREF_WINDOW_m_axi_U->I_BUSER(PREF_WINDOW_BUSER);
    buff_U = new skipprefetch_Nelebkb("buff_U");
    buff_U->clk(ap_clk);
    buff_U->reset(ap_rst_n_inv);
    buff_U->address0(buff_address0);
    buff_U->ce0(buff_ce0);
    buff_U->we0(buff_we0);
    buff_U->d0(buff_d0);
    buff_U->q0(buff_q0);
    skipprefetch_Nelecud_U0 = new skipprefetch_Nelecud<1,6,34,32,65>("skipprefetch_Nelecud_U0");
    skipprefetch_Nelecud_U0->clk(ap_clk);
    skipprefetch_Nelecud_U0->reset(ap_rst_n_inv);
    skipprefetch_Nelecud_U0->din0(grp_fu_297_p0);
    skipprefetch_Nelecud_U0->din1(sz_fu_126);
    skipprefetch_Nelecud_U0->ce(ap_var_for_const0);
    skipprefetch_Nelecud_U0->dout(grp_fu_297_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_BUS_ARADDR);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( a2_sum7_reg_571 );
    sensitive << ( A_BUS_addr_reg_576 );
    sensitive << ( a2_sum_fu_466_p2 );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_condition_218 );

    SC_METHOD(thread_A_BUS_ARVALID);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_A_BUS_RREADY);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( PREF_WINDOW_RVALID );
    sensitive << ( ap_condition_547 );

    SC_METHOD(thread_A_BUS_blk_n_AR);
    sensitive << ( m_axi_A_BUS_ARREADY );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );

    SC_METHOD(thread_A_BUS_blk_n_R);
    sensitive << ( m_axi_A_BUS_RVALID );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );

    SC_METHOD(thread_PREF_WINDOW_ARADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( PREF_WINDOW_addr_1_reg_509 );
    sensitive << ( PREF_WINDOW_addr_reg_536 );
    sensitive << ( tmp_12_fu_275_p1 );
    sensitive << ( ap_reg_ioackin_PREF_WINDOW_ARREADY );

    SC_METHOD(thread_PREF_WINDOW_ARVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_reg_ioackin_PREF_WINDOW_ARREADY );

    SC_METHOD(thread_PREF_WINDOW_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( PREF_WINDOW_RVALID );
    sensitive << ( ap_condition_547 );

    SC_METHOD(thread_PREF_WINDOW_blk_n_AR);
    sensitive << ( m_axi_PREF_WINDOW_ARREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_PREF_WINDOW_blk_n_R);
    sensitive << ( m_axi_PREF_WINDOW_RVALID );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_a2_sum7_fu_398_p2);
    sensitive << ( tmp_13_reg_542 );
    sensitive << ( cum_offs_reg_191 );

    SC_METHOD(thread_a2_sum_fu_466_p2);
    sensitive << ( tmp_13_reg_542 );
    sensitive << ( buff_q0 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_218);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );

    SC_METHOD(thread_ap_condition_547);
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( A_BUS_RVALID );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_sig_ioackin_PREF_WINDOW_ARREADY );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_sig_ioackin_PREF_WINDOW_ARREADY );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_A_BUS_ARREADY);
    sensitive << ( A_BUS_ARREADY );
    sensitive << ( ap_reg_ioackin_A_BUS_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_PREF_WINDOW_ARREADY);
    sensitive << ( PREF_WINDOW_ARREADY );
    sensitive << ( ap_reg_ioackin_PREF_WINDOW_ARREADY );

    SC_METHOD(thread_buff_address0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i1_reg_225 );
    sensitive << ( i_cast1_reg_558 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( buff_addr_1_reg_623 );

    SC_METHOD(thread_buff_ce0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( PREF_WINDOW_RVALID );
    sensitive << ( ap_condition_547 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );

    SC_METHOD(thread_buff_d0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( tmp_2_fu_412_p2 );
    sensitive << ( tmp_s_fu_482_p2 );

    SC_METHOD(thread_buff_len_fu_368_p3);
    sensitive << ( tmp_17_reg_520 );
    sensitive << ( tmp_15_fu_352_p1 );
    sensitive << ( neg_ti_fu_362_p2 );

    SC_METHOD(thread_buff_we0);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( PREF_WINDOW_RVALID );
    sensitive << ( ap_condition_547 );

    SC_METHOD(thread_cum_offs_1_fu_432_p2);
    sensitive << ( cum_offs_reg_191 );
    sensitive << ( tmp_3_fu_429_p1 );

    SC_METHOD(thread_exitcond_fu_438_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_sig_ioackin_PREF_WINDOW_ARREADY );
    sensitive << ( j_reg_214 );

    SC_METHOD(thread_grp_fu_235_p4);
    sensitive << ( A_BUS_RDATA );

    SC_METHOD(thread_grp_fu_297_p0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_i_1_fu_392_p2);
    sensitive << ( i_reg_203 );

    SC_METHOD(thread_i_3_fu_460_p2);
    sensitive << ( i1_reg_225 );

    SC_METHOD(thread_i_cast1_fu_379_p1);
    sensitive << ( i_reg_203 );

    SC_METHOD(thread_i_cast_fu_383_p1);
    sensitive << ( i_reg_203 );

    SC_METHOD(thread_j_1_fu_444_p2);
    sensitive << ( j_reg_214 );

    SC_METHOD(thread_neg_mul_fu_333_p2);
    sensitive << ( mul_reg_526 );

    SC_METHOD(thread_neg_ti_fu_362_p2);
    sensitive << ( tmp_16_fu_355_p3 );

    SC_METHOD(thread_tmp_11_fu_321_p1);
    sensitive << ( vb5_reg_488 );

    SC_METHOD(thread_tmp_12_fu_275_p1);
    sensitive << ( n3_reg_493 );

    SC_METHOD(thread_tmp_13_fu_330_p1);
    sensitive << ( a1_reg_498 );

    SC_METHOD(thread_tmp_14_fu_348_p1);
    sensitive << ( tmp_18_fu_338_p4 );

    SC_METHOD(thread_tmp_15_fu_352_p1);
    sensitive << ( tmp_19_reg_531 );

    SC_METHOD(thread_tmp_16_fu_355_p3);
    sensitive << ( tmp_17_reg_520 );
    sensitive << ( tmp_14_fu_348_p1 );
    sensitive << ( tmp_15_fu_352_p1 );

    SC_METHOD(thread_tmp_18_fu_338_p4);
    sensitive << ( neg_mul_fu_333_p2 );

    SC_METHOD(thread_tmp_1_fu_409_p1);
    sensitive << ( tmp_4_reg_582 );

    SC_METHOD(thread_tmp_20_fu_375_p1);
    sensitive << ( buff_len_fu_368_p3 );

    SC_METHOD(thread_tmp_2_fu_412_p2);
    sensitive << ( cum_offs_reg_191 );
    sensitive << ( tmp_1_fu_409_p1 );

    SC_METHOD(thread_tmp_3_fu_429_p1);
    sensitive << ( tmp_5_reg_587 );

    SC_METHOD(thread_tmp_6_fu_450_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i1_reg_225 );
    sensitive << ( PREF_WINDOW_addr_1_r_reg_610 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );

    SC_METHOD(thread_tmp_7_fu_455_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i1_reg_225 );
    sensitive << ( buff_len_reg_548 );
    sensitive << ( tmp_6_fu_450_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );

    SC_METHOD(thread_tmp_9_fu_478_p1);
    sensitive << ( grp_fu_235_p4 );

    SC_METHOD(thread_tmp_fu_387_p2);
    sensitive << ( tmp_20_reg_553 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( i_cast_fu_383_p1 );

    SC_METHOD(thread_tmp_s_fu_482_p2);
    sensitive << ( buff_load_reg_633 );
    sensitive << ( tmp_9_fu_478_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_615 );
    sensitive << ( tmp_7_reg_619 );
    sensitive << ( exitcond_fu_438_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( A_BUS_RVALID );
    sensitive << ( PREF_WINDOW_RVALID );
    sensitive << ( ap_sig_ioackin_PREF_WINDOW_ARREADY );
    sensitive << ( tmp_fu_387_p2 );
    sensitive << ( ap_sig_ioackin_A_BUS_ARREADY );
    sensitive << ( ap_condition_547 );
    sensitive << ( tmp_6_fu_450_p2 );
    sensitive << ( tmp_7_fu_455_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    ap_CS_fsm = "0000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_reg_ioackin_PREF_WINDOW_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_A_BUS_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "skipprefetch_Nelem_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_A_BUS_AWVALID, "(port)m_axi_A_BUS_AWVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_AWREADY, "(port)m_axi_A_BUS_AWREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_AWADDR, "(port)m_axi_A_BUS_AWADDR");
    sc_trace(mVcdFile, m_axi_A_BUS_AWID, "(port)m_axi_A_BUS_AWID");
    sc_trace(mVcdFile, m_axi_A_BUS_AWLEN, "(port)m_axi_A_BUS_AWLEN");
    sc_trace(mVcdFile, m_axi_A_BUS_AWSIZE, "(port)m_axi_A_BUS_AWSIZE");
    sc_trace(mVcdFile, m_axi_A_BUS_AWBURST, "(port)m_axi_A_BUS_AWBURST");
    sc_trace(mVcdFile, m_axi_A_BUS_AWLOCK, "(port)m_axi_A_BUS_AWLOCK");
    sc_trace(mVcdFile, m_axi_A_BUS_AWCACHE, "(port)m_axi_A_BUS_AWCACHE");
    sc_trace(mVcdFile, m_axi_A_BUS_AWPROT, "(port)m_axi_A_BUS_AWPROT");
    sc_trace(mVcdFile, m_axi_A_BUS_AWQOS, "(port)m_axi_A_BUS_AWQOS");
    sc_trace(mVcdFile, m_axi_A_BUS_AWREGION, "(port)m_axi_A_BUS_AWREGION");
    sc_trace(mVcdFile, m_axi_A_BUS_AWUSER, "(port)m_axi_A_BUS_AWUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_WVALID, "(port)m_axi_A_BUS_WVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_WREADY, "(port)m_axi_A_BUS_WREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_WDATA, "(port)m_axi_A_BUS_WDATA");
    sc_trace(mVcdFile, m_axi_A_BUS_WSTRB, "(port)m_axi_A_BUS_WSTRB");
    sc_trace(mVcdFile, m_axi_A_BUS_WLAST, "(port)m_axi_A_BUS_WLAST");
    sc_trace(mVcdFile, m_axi_A_BUS_WID, "(port)m_axi_A_BUS_WID");
    sc_trace(mVcdFile, m_axi_A_BUS_WUSER, "(port)m_axi_A_BUS_WUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_ARVALID, "(port)m_axi_A_BUS_ARVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_ARREADY, "(port)m_axi_A_BUS_ARREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_ARADDR, "(port)m_axi_A_BUS_ARADDR");
    sc_trace(mVcdFile, m_axi_A_BUS_ARID, "(port)m_axi_A_BUS_ARID");
    sc_trace(mVcdFile, m_axi_A_BUS_ARLEN, "(port)m_axi_A_BUS_ARLEN");
    sc_trace(mVcdFile, m_axi_A_BUS_ARSIZE, "(port)m_axi_A_BUS_ARSIZE");
    sc_trace(mVcdFile, m_axi_A_BUS_ARBURST, "(port)m_axi_A_BUS_ARBURST");
    sc_trace(mVcdFile, m_axi_A_BUS_ARLOCK, "(port)m_axi_A_BUS_ARLOCK");
    sc_trace(mVcdFile, m_axi_A_BUS_ARCACHE, "(port)m_axi_A_BUS_ARCACHE");
    sc_trace(mVcdFile, m_axi_A_BUS_ARPROT, "(port)m_axi_A_BUS_ARPROT");
    sc_trace(mVcdFile, m_axi_A_BUS_ARQOS, "(port)m_axi_A_BUS_ARQOS");
    sc_trace(mVcdFile, m_axi_A_BUS_ARREGION, "(port)m_axi_A_BUS_ARREGION");
    sc_trace(mVcdFile, m_axi_A_BUS_ARUSER, "(port)m_axi_A_BUS_ARUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_RVALID, "(port)m_axi_A_BUS_RVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_RREADY, "(port)m_axi_A_BUS_RREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_RDATA, "(port)m_axi_A_BUS_RDATA");
    sc_trace(mVcdFile, m_axi_A_BUS_RLAST, "(port)m_axi_A_BUS_RLAST");
    sc_trace(mVcdFile, m_axi_A_BUS_RID, "(port)m_axi_A_BUS_RID");
    sc_trace(mVcdFile, m_axi_A_BUS_RUSER, "(port)m_axi_A_BUS_RUSER");
    sc_trace(mVcdFile, m_axi_A_BUS_RRESP, "(port)m_axi_A_BUS_RRESP");
    sc_trace(mVcdFile, m_axi_A_BUS_BVALID, "(port)m_axi_A_BUS_BVALID");
    sc_trace(mVcdFile, m_axi_A_BUS_BREADY, "(port)m_axi_A_BUS_BREADY");
    sc_trace(mVcdFile, m_axi_A_BUS_BRESP, "(port)m_axi_A_BUS_BRESP");
    sc_trace(mVcdFile, m_axi_A_BUS_BID, "(port)m_axi_A_BUS_BID");
    sc_trace(mVcdFile, m_axi_A_BUS_BUSER, "(port)m_axi_A_BUS_BUSER");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWVALID, "(port)m_axi_PREF_WINDOW_AWVALID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWREADY, "(port)m_axi_PREF_WINDOW_AWREADY");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWADDR, "(port)m_axi_PREF_WINDOW_AWADDR");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWID, "(port)m_axi_PREF_WINDOW_AWID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWLEN, "(port)m_axi_PREF_WINDOW_AWLEN");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWSIZE, "(port)m_axi_PREF_WINDOW_AWSIZE");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWBURST, "(port)m_axi_PREF_WINDOW_AWBURST");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWLOCK, "(port)m_axi_PREF_WINDOW_AWLOCK");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWCACHE, "(port)m_axi_PREF_WINDOW_AWCACHE");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWPROT, "(port)m_axi_PREF_WINDOW_AWPROT");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWQOS, "(port)m_axi_PREF_WINDOW_AWQOS");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWREGION, "(port)m_axi_PREF_WINDOW_AWREGION");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_AWUSER, "(port)m_axi_PREF_WINDOW_AWUSER");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WVALID, "(port)m_axi_PREF_WINDOW_WVALID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WREADY, "(port)m_axi_PREF_WINDOW_WREADY");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WDATA, "(port)m_axi_PREF_WINDOW_WDATA");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WSTRB, "(port)m_axi_PREF_WINDOW_WSTRB");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WLAST, "(port)m_axi_PREF_WINDOW_WLAST");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WID, "(port)m_axi_PREF_WINDOW_WID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_WUSER, "(port)m_axi_PREF_WINDOW_WUSER");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARVALID, "(port)m_axi_PREF_WINDOW_ARVALID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARREADY, "(port)m_axi_PREF_WINDOW_ARREADY");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARADDR, "(port)m_axi_PREF_WINDOW_ARADDR");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARID, "(port)m_axi_PREF_WINDOW_ARID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARLEN, "(port)m_axi_PREF_WINDOW_ARLEN");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARSIZE, "(port)m_axi_PREF_WINDOW_ARSIZE");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARBURST, "(port)m_axi_PREF_WINDOW_ARBURST");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARLOCK, "(port)m_axi_PREF_WINDOW_ARLOCK");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARCACHE, "(port)m_axi_PREF_WINDOW_ARCACHE");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARPROT, "(port)m_axi_PREF_WINDOW_ARPROT");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARQOS, "(port)m_axi_PREF_WINDOW_ARQOS");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARREGION, "(port)m_axi_PREF_WINDOW_ARREGION");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_ARUSER, "(port)m_axi_PREF_WINDOW_ARUSER");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RVALID, "(port)m_axi_PREF_WINDOW_RVALID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RREADY, "(port)m_axi_PREF_WINDOW_RREADY");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RDATA, "(port)m_axi_PREF_WINDOW_RDATA");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RLAST, "(port)m_axi_PREF_WINDOW_RLAST");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RID, "(port)m_axi_PREF_WINDOW_RID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RUSER, "(port)m_axi_PREF_WINDOW_RUSER");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_RRESP, "(port)m_axi_PREF_WINDOW_RRESP");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_BVALID, "(port)m_axi_PREF_WINDOW_BVALID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_BREADY, "(port)m_axi_PREF_WINDOW_BREADY");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_BRESP, "(port)m_axi_PREF_WINDOW_BRESP");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_BID, "(port)m_axi_PREF_WINDOW_BID");
    sc_trace(mVcdFile, m_axi_PREF_WINDOW_BUSER, "(port)m_axi_PREF_WINDOW_BUSER");
    sc_trace(mVcdFile, s_axi_CFG_AWVALID, "(port)s_axi_CFG_AWVALID");
    sc_trace(mVcdFile, s_axi_CFG_AWREADY, "(port)s_axi_CFG_AWREADY");
    sc_trace(mVcdFile, s_axi_CFG_AWADDR, "(port)s_axi_CFG_AWADDR");
    sc_trace(mVcdFile, s_axi_CFG_WVALID, "(port)s_axi_CFG_WVALID");
    sc_trace(mVcdFile, s_axi_CFG_WREADY, "(port)s_axi_CFG_WREADY");
    sc_trace(mVcdFile, s_axi_CFG_WDATA, "(port)s_axi_CFG_WDATA");
    sc_trace(mVcdFile, s_axi_CFG_WSTRB, "(port)s_axi_CFG_WSTRB");
    sc_trace(mVcdFile, s_axi_CFG_ARVALID, "(port)s_axi_CFG_ARVALID");
    sc_trace(mVcdFile, s_axi_CFG_ARREADY, "(port)s_axi_CFG_ARREADY");
    sc_trace(mVcdFile, s_axi_CFG_ARADDR, "(port)s_axi_CFG_ARADDR");
    sc_trace(mVcdFile, s_axi_CFG_RVALID, "(port)s_axi_CFG_RVALID");
    sc_trace(mVcdFile, s_axi_CFG_RREADY, "(port)s_axi_CFG_RREADY");
    sc_trace(mVcdFile, s_axi_CFG_RDATA, "(port)s_axi_CFG_RDATA");
    sc_trace(mVcdFile, s_axi_CFG_RRESP, "(port)s_axi_CFG_RRESP");
    sc_trace(mVcdFile, s_axi_CFG_BVALID, "(port)s_axi_CFG_BVALID");
    sc_trace(mVcdFile, s_axi_CFG_BREADY, "(port)s_axi_CFG_BREADY");
    sc_trace(mVcdFile, s_axi_CFG_BRESP, "(port)s_axi_CFG_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, a, "a");
    sc_trace(mVcdFile, n, "n");
    sc_trace(mVcdFile, vb, "vb");
    sc_trace(mVcdFile, A_BUS_blk_n_AR, "A_BUS_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, A_BUS_blk_n_R, "A_BUS_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_6_reg_615, "tmp_6_reg_615");
    sc_trace(mVcdFile, tmp_7_reg_619, "tmp_7_reg_619");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, PREF_WINDOW_blk_n_AR, "PREF_WINDOW_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, exitcond_fu_438_p2, "exitcond_fu_438_p2");
    sc_trace(mVcdFile, PREF_WINDOW_blk_n_R, "PREF_WINDOW_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, A_BUS_AWREADY, "A_BUS_AWREADY");
    sc_trace(mVcdFile, A_BUS_WREADY, "A_BUS_WREADY");
    sc_trace(mVcdFile, A_BUS_ARVALID, "A_BUS_ARVALID");
    sc_trace(mVcdFile, A_BUS_ARREADY, "A_BUS_ARREADY");
    sc_trace(mVcdFile, A_BUS_ARADDR, "A_BUS_ARADDR");
    sc_trace(mVcdFile, A_BUS_RVALID, "A_BUS_RVALID");
    sc_trace(mVcdFile, A_BUS_RREADY, "A_BUS_RREADY");
    sc_trace(mVcdFile, A_BUS_RDATA, "A_BUS_RDATA");
    sc_trace(mVcdFile, A_BUS_RLAST, "A_BUS_RLAST");
    sc_trace(mVcdFile, A_BUS_RID, "A_BUS_RID");
    sc_trace(mVcdFile, A_BUS_RUSER, "A_BUS_RUSER");
    sc_trace(mVcdFile, A_BUS_RRESP, "A_BUS_RRESP");
    sc_trace(mVcdFile, A_BUS_BVALID, "A_BUS_BVALID");
    sc_trace(mVcdFile, A_BUS_BRESP, "A_BUS_BRESP");
    sc_trace(mVcdFile, A_BUS_BID, "A_BUS_BID");
    sc_trace(mVcdFile, A_BUS_BUSER, "A_BUS_BUSER");
    sc_trace(mVcdFile, PREF_WINDOW_AWREADY, "PREF_WINDOW_AWREADY");
    sc_trace(mVcdFile, PREF_WINDOW_WREADY, "PREF_WINDOW_WREADY");
    sc_trace(mVcdFile, PREF_WINDOW_ARVALID, "PREF_WINDOW_ARVALID");
    sc_trace(mVcdFile, PREF_WINDOW_ARREADY, "PREF_WINDOW_ARREADY");
    sc_trace(mVcdFile, PREF_WINDOW_ARADDR, "PREF_WINDOW_ARADDR");
    sc_trace(mVcdFile, PREF_WINDOW_RVALID, "PREF_WINDOW_RVALID");
    sc_trace(mVcdFile, PREF_WINDOW_RREADY, "PREF_WINDOW_RREADY");
    sc_trace(mVcdFile, PREF_WINDOW_RDATA, "PREF_WINDOW_RDATA");
    sc_trace(mVcdFile, PREF_WINDOW_RLAST, "PREF_WINDOW_RLAST");
    sc_trace(mVcdFile, PREF_WINDOW_RID, "PREF_WINDOW_RID");
    sc_trace(mVcdFile, PREF_WINDOW_RUSER, "PREF_WINDOW_RUSER");
    sc_trace(mVcdFile, PREF_WINDOW_RRESP, "PREF_WINDOW_RRESP");
    sc_trace(mVcdFile, PREF_WINDOW_BVALID, "PREF_WINDOW_BVALID");
    sc_trace(mVcdFile, PREF_WINDOW_BRESP, "PREF_WINDOW_BRESP");
    sc_trace(mVcdFile, PREF_WINDOW_BID, "PREF_WINDOW_BID");
    sc_trace(mVcdFile, PREF_WINDOW_BUSER, "PREF_WINDOW_BUSER");
    sc_trace(mVcdFile, i1_reg_225, "i1_reg_225");
    sc_trace(mVcdFile, vb5_reg_488, "vb5_reg_488");
    sc_trace(mVcdFile, n3_reg_493, "n3_reg_493");
    sc_trace(mVcdFile, a1_reg_498, "a1_reg_498");
    sc_trace(mVcdFile, PREF_WINDOW_addr_1_reg_509, "PREF_WINDOW_addr_1_reg_509");
    sc_trace(mVcdFile, ap_sig_ioackin_PREF_WINDOW_ARREADY, "ap_sig_ioackin_PREF_WINDOW_ARREADY");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_17_reg_520, "tmp_17_reg_520");
    sc_trace(mVcdFile, grp_fu_297_p2, "grp_fu_297_p2");
    sc_trace(mVcdFile, mul_reg_526, "mul_reg_526");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_19_reg_531, "tmp_19_reg_531");
    sc_trace(mVcdFile, PREF_WINDOW_addr_reg_536, "PREF_WINDOW_addr_reg_536");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tmp_13_fu_330_p1, "tmp_13_fu_330_p1");
    sc_trace(mVcdFile, tmp_13_reg_542, "tmp_13_reg_542");
    sc_trace(mVcdFile, buff_len_fu_368_p3, "buff_len_fu_368_p3");
    sc_trace(mVcdFile, buff_len_reg_548, "buff_len_reg_548");
    sc_trace(mVcdFile, tmp_20_fu_375_p1, "tmp_20_fu_375_p1");
    sc_trace(mVcdFile, tmp_20_reg_553, "tmp_20_reg_553");
    sc_trace(mVcdFile, i_cast1_fu_379_p1, "i_cast1_fu_379_p1");
    sc_trace(mVcdFile, i_cast1_reg_558, "i_cast1_reg_558");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_1_fu_392_p2, "i_1_fu_392_p2");
    sc_trace(mVcdFile, i_1_reg_566, "i_1_reg_566");
    sc_trace(mVcdFile, a2_sum7_fu_398_p2, "a2_sum7_fu_398_p2");
    sc_trace(mVcdFile, a2_sum7_reg_571, "a2_sum7_reg_571");
    sc_trace(mVcdFile, tmp_fu_387_p2, "tmp_fu_387_p2");
    sc_trace(mVcdFile, A_BUS_addr_reg_576, "A_BUS_addr_reg_576");
    sc_trace(mVcdFile, ap_sig_ioackin_A_BUS_ARREADY, "ap_sig_ioackin_A_BUS_ARREADY");
    sc_trace(mVcdFile, grp_fu_235_p4, "grp_fu_235_p4");
    sc_trace(mVcdFile, tmp_4_reg_582, "tmp_4_reg_582");
    sc_trace(mVcdFile, tmp_5_reg_587, "tmp_5_reg_587");
    sc_trace(mVcdFile, cum_offs_1_fu_432_p2, "cum_offs_1_fu_432_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, j_1_fu_444_p2, "j_1_fu_444_p2");
    sc_trace(mVcdFile, j_1_reg_600, "j_1_reg_600");
    sc_trace(mVcdFile, i_2_reg_605, "i_2_reg_605");
    sc_trace(mVcdFile, PREF_WINDOW_addr_1_r_reg_610, "PREF_WINDOW_addr_1_r_reg_610");
    sc_trace(mVcdFile, ap_condition_547, "ap_condition_547");
    sc_trace(mVcdFile, tmp_6_fu_450_p2, "tmp_6_fu_450_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, tmp_7_fu_455_p2, "tmp_7_fu_455_p2");
    sc_trace(mVcdFile, buff_addr_1_reg_623, "buff_addr_1_reg_623");
    sc_trace(mVcdFile, i_3_fu_460_p2, "i_3_fu_460_p2");
    sc_trace(mVcdFile, i_3_reg_628, "i_3_reg_628");
    sc_trace(mVcdFile, buff_q0, "buff_q0");
    sc_trace(mVcdFile, buff_load_reg_633, "buff_load_reg_633");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, buff_address0, "buff_address0");
    sc_trace(mVcdFile, buff_ce0, "buff_ce0");
    sc_trace(mVcdFile, buff_we0, "buff_we0");
    sc_trace(mVcdFile, buff_d0, "buff_d0");
    sc_trace(mVcdFile, cum_offs_reg_191, "cum_offs_reg_191");
    sc_trace(mVcdFile, i_reg_203, "i_reg_203");
    sc_trace(mVcdFile, j_reg_214, "j_reg_214");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, tmp_12_fu_275_p1, "tmp_12_fu_275_p1");
    sc_trace(mVcdFile, tmp_11_fu_321_p1, "tmp_11_fu_321_p1");
    sc_trace(mVcdFile, a2_sum_fu_466_p2, "a2_sum_fu_466_p2");
    sc_trace(mVcdFile, ap_reg_ioackin_PREF_WINDOW_ARREADY, "ap_reg_ioackin_PREF_WINDOW_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_A_BUS_ARREADY, "ap_reg_ioackin_A_BUS_ARREADY");
    sc_trace(mVcdFile, sz_fu_126, "sz_fu_126");
    sc_trace(mVcdFile, tmp_2_fu_412_p2, "tmp_2_fu_412_p2");
    sc_trace(mVcdFile, tmp_s_fu_482_p2, "tmp_s_fu_482_p2");
    sc_trace(mVcdFile, grp_fu_297_p0, "grp_fu_297_p0");
    sc_trace(mVcdFile, neg_mul_fu_333_p2, "neg_mul_fu_333_p2");
    sc_trace(mVcdFile, tmp_18_fu_338_p4, "tmp_18_fu_338_p4");
    sc_trace(mVcdFile, tmp_14_fu_348_p1, "tmp_14_fu_348_p1");
    sc_trace(mVcdFile, tmp_15_fu_352_p1, "tmp_15_fu_352_p1");
    sc_trace(mVcdFile, tmp_16_fu_355_p3, "tmp_16_fu_355_p3");
    sc_trace(mVcdFile, neg_ti_fu_362_p2, "neg_ti_fu_362_p2");
    sc_trace(mVcdFile, i_cast_fu_383_p1, "i_cast_fu_383_p1");
    sc_trace(mVcdFile, tmp_1_fu_409_p1, "tmp_1_fu_409_p1");
    sc_trace(mVcdFile, tmp_3_fu_429_p1, "tmp_3_fu_429_p1");
    sc_trace(mVcdFile, tmp_9_fu_478_p1, "tmp_9_fu_478_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_218, "ap_condition_218");
#endif

    }
    mHdltvinHandle.open("skipprefetch_Nelem.hdltvin.dat");
    mHdltvoutHandle.open("skipprefetch_Nelem.hdltvout.dat");
}

skipprefetch_Nelem::~skipprefetch_Nelem() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete skipprefetch_Nelem_CFG_s_axi_U;
    delete skipprefetch_Nelem_A_BUS_m_axi_U;
    delete skipprefetch_Nelem_PREF_WINDOW_m_axi_U;
    delete buff_U;
    delete skipprefetch_Nelecud_U0;
}

void skipprefetch_Nelem::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void skipprefetch_Nelem::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv32_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void skipprefetch_Nelem::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv64_0;
}

void skipprefetch_Nelem::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_0;
}

void skipprefetch_Nelem::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
             (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) || 
              (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_455_p2.read()))))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state36.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) || (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_455_p2.read()))))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state36.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && 
                     (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) || 
                      (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) && 
                       esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_455_p2.read())))))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
              !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
              !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())))) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())))) {
            ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                     !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, A_BUS_ARREADY.read())))) {
            ap_reg_ioackin_A_BUS_ARREADY = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_PREF_WINDOW_ARREADY = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
              !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && 
              !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read()))) || 
             (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
              !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())))))) {
            ap_reg_ioackin_PREF_WINDOW_ARREADY = ap_const_logic_0;
        } else if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, PREF_WINDOW_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, PREF_WINDOW_ARREADY.read())) || 
                    (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_1, PREF_WINDOW_ARREADY.read())))) {
            ap_reg_ioackin_PREF_WINDOW_ARREADY = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read()))) {
        cum_offs_reg_191 = cum_offs_1_fu_432_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        cum_offs_reg_191 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
         !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1))))) {
        i1_reg_225 = i_3_reg_628.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state36.read()))) {
        i1_reg_225 = i_2_reg_605.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read()))) {
        i_reg_203 = i_1_reg_566.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        i_reg_203 = ap_const_lv26_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_387_p2.read()))) {
        j_reg_214 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state54.read()))) {
        j_reg_214 = j_1_reg_600.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read()))) {
        A_BUS_addr_reg_576 = a2_sum7_reg_571.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1))))) {
        PREF_WINDOW_addr_1_r_reg_610 = PREF_WINDOW_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read()))) {
        PREF_WINDOW_addr_1_reg_509 = tmp_12_fu_275_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        PREF_WINDOW_addr_reg_536 = tmp_11_fu_321_p1.read();
        buff_len_reg_548 = buff_len_fu_368_p3.read();
        tmp_13_reg_542 = tmp_13_fu_330_p1.read();
        tmp_20_reg_553 = tmp_20_fu_375_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        a1_reg_498 = a.read().range(31, 3);
        n3_reg_493 = n.read().range(31, 2);
        vb5_reg_488 = vb.read().range(31, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_387_p2.read()))) {
        a2_sum7_reg_571 = a2_sum7_fu_398_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_455_p2.read()))) {
        buff_addr_1_reg_623 =  (sc_lv<14>) (i1_reg_225.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read()))))) {
        buff_load_reg_633 = buff_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        i_1_reg_566 = i_1_fu_392_p2.read();
        i_cast1_reg_558 = i_cast1_fu_379_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state35.read()) && !esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0))) {
        i_2_reg_605 = PREF_WINDOW_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_455_p2.read()))) {
        i_3_reg_628 = i_3_fu_460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())))) {
        j_1_reg_600 = j_1_fu_444_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        mul_reg_526 = grp_fu_297_p2.read();
        tmp_19_reg_531 = grp_fu_297_p2.read().range(64, 38);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && !esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0))) {
        sz_fu_126 = PREF_WINDOW_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        tmp_17_reg_520 = sz_fu_126.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()) && !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) {
        tmp_4_reg_582 = A_BUS_RDATA.read().range(47, 32);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0))) {
        tmp_5_reg_587 = A_BUS_RDATA.read().range(63, 48);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        tmp_6_reg_615 = tmp_6_fu_450_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()))) {
        tmp_7_reg_619 = tmp_7_fu_455_p2.read();
    }
}

void skipprefetch_Nelem::thread_A_BUS_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) {
        if (esl_seteq<1,1,1>(ap_condition_218.read(), ap_const_boolean_1)) {
            A_BUS_ARADDR = a2_sum_fu_466_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read())) {
            A_BUS_ARADDR = A_BUS_addr_reg_576.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())) {
            A_BUS_ARADDR = a2_sum7_reg_571.read();
        } else {
            A_BUS_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        A_BUS_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void skipprefetch_Nelem::thread_A_BUS_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())))) {
        A_BUS_ARVALID = ap_const_logic_1;
    } else {
        A_BUS_ARVALID = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_A_BUS_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1)))))) {
        A_BUS_RREADY = ap_const_logic_1;
    } else {
        A_BUS_RREADY = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_A_BUS_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read())))) {
        A_BUS_blk_n_AR = m_axi_A_BUS_ARREADY.read();
    } else {
        A_BUS_blk_n_AR = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_A_BUS_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read())))) {
        A_BUS_blk_n_R = m_axi_A_BUS_RVALID.read();
    } else {
        A_BUS_blk_n_R = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_PREF_WINDOW_ARADDR() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_PREF_WINDOW_ARREADY.read())) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
            PREF_WINDOW_ARADDR = PREF_WINDOW_addr_1_reg_509.read();
        } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
            PREF_WINDOW_ARADDR = PREF_WINDOW_addr_reg_536.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) {
            PREF_WINDOW_ARADDR = tmp_12_fu_275_p1.read();
        } else {
            PREF_WINDOW_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        PREF_WINDOW_ARADDR = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void skipprefetch_Nelem::thread_PREF_WINDOW_ARVALID() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_PREF_WINDOW_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_PREF_WINDOW_ARREADY.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_PREF_WINDOW_ARREADY.read())))) {
        PREF_WINDOW_ARVALID = ap_const_logic_1;
    } else {
        PREF_WINDOW_ARVALID = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_PREF_WINDOW_RREADY() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state35.read()) && 
          !esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1)))) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()) && 
          !esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)))) {
        PREF_WINDOW_RREADY = ap_const_logic_1;
    } else {
        PREF_WINDOW_RREADY = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_PREF_WINDOW_blk_n_AR() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        PREF_WINDOW_blk_n_AR = m_axi_PREF_WINDOW_ARREADY.read();
    } else {
        PREF_WINDOW_blk_n_AR = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_PREF_WINDOW_blk_n_R() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state35.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        PREF_WINDOW_blk_n_R = m_axi_PREF_WINDOW_RVALID.read();
    } else {
        PREF_WINDOW_blk_n_R = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_a2_sum7_fu_398_p2() {
    a2_sum7_fu_398_p2 = (!tmp_13_reg_542.read().is_01() || !cum_offs_reg_191.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_13_reg_542.read()) + sc_biguint<32>(cum_offs_reg_191.read()));
}

void skipprefetch_Nelem::thread_a2_sum_fu_466_p2() {
    a2_sum_fu_466_p2 = (!tmp_13_reg_542.read().is_01() || !buff_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_13_reg_542.read()) + sc_biguint<32>(buff_q0.read()));
}

void skipprefetch_Nelem::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read().range(36, 36);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read().range(43, 43);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read().range(44, 44);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read().range(25, 25);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read().range(26, 26);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(27, 27);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read().range(34, 34);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read().range(35, 35);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read().range(45, 45);
}

void skipprefetch_Nelem::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void skipprefetch_Nelem::thread_ap_condition_218() {
    ap_condition_218 = (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()));
}

void skipprefetch_Nelem::thread_ap_condition_547() {
    ap_condition_547 = (!esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0));
}

void skipprefetch_Nelem::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void skipprefetch_Nelem::thread_ap_sig_ioackin_A_BUS_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_A_BUS_ARREADY.read())) {
        ap_sig_ioackin_A_BUS_ARREADY = A_BUS_ARREADY.read();
    } else {
        ap_sig_ioackin_A_BUS_ARREADY = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_ap_sig_ioackin_PREF_WINDOW_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_PREF_WINDOW_ARREADY.read())) {
        ap_sig_ioackin_PREF_WINDOW_ARREADY = PREF_WINDOW_ARREADY.read();
    } else {
        ap_sig_ioackin_PREF_WINDOW_ARREADY = ap_const_logic_1;
    }
}

void skipprefetch_Nelem::thread_buff_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        buff_address0 = buff_addr_1_reg_623.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read()))) {
        buff_address0 =  (sc_lv<14>) (i1_reg_225.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        buff_address0 =  (sc_lv<14>) (i_cast1_reg_558.read());
    } else {
        buff_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void skipprefetch_Nelem::thread_buff_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1)))))) {
        buff_ce0 = ap_const_logic_1;
    } else {
        buff_ce0 = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_buff_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()))) {
        buff_d0 = tmp_s_fu_482_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        buff_d0 = tmp_2_fu_412_p2.read();
    } else {
        buff_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void skipprefetch_Nelem::thread_buff_len_fu_368_p3() {
    buff_len_fu_368_p3 = (!tmp_17_reg_520.read()[0].is_01())? sc_lv<32>(): ((tmp_17_reg_520.read()[0].to_bool())? neg_ti_fu_362_p2.read(): tmp_15_fu_352_p1.read());
}

void skipprefetch_Nelem::thread_buff_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()) && 
          !esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_pp0_stage7.read()) && 
          !((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1)))))) {
        buff_we0 = ap_const_logic_1;
    } else {
        buff_we0 = ap_const_logic_0;
    }
}

void skipprefetch_Nelem::thread_cum_offs_1_fu_432_p2() {
    cum_offs_1_fu_432_p2 = (!tmp_3_fu_429_p1.read().is_01() || !cum_offs_reg_191.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_3_fu_429_p1.read()) + sc_biguint<32>(cum_offs_reg_191.read()));
}

void skipprefetch_Nelem::thread_exitcond_fu_438_p2() {
    exitcond_fu_438_p2 = (!j_reg_214.read().is_01() || !ap_const_lv6_31.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_214.read() == ap_const_lv6_31);
}

void skipprefetch_Nelem::thread_grp_fu_235_p4() {
    grp_fu_235_p4 = A_BUS_RDATA.read().range(47, 32);
}

void skipprefetch_Nelem::thread_grp_fu_297_p0() {
    grp_fu_297_p0 =  (sc_lv<34>) (ap_const_lv65_147AE147B);
}

void skipprefetch_Nelem::thread_i_1_fu_392_p2() {
    i_1_fu_392_p2 = (!i_reg_203.read().is_01() || !ap_const_lv26_1.is_01())? sc_lv<26>(): (sc_biguint<26>(i_reg_203.read()) + sc_biguint<26>(ap_const_lv26_1));
}

void skipprefetch_Nelem::thread_i_3_fu_460_p2() {
    i_3_fu_460_p2 = (!i1_reg_225.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i1_reg_225.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void skipprefetch_Nelem::thread_i_cast1_fu_379_p1() {
    i_cast1_fu_379_p1 = esl_zext<32,26>(i_reg_203.read());
}

void skipprefetch_Nelem::thread_i_cast_fu_383_p1() {
    i_cast_fu_383_p1 = esl_zext<27,26>(i_reg_203.read());
}

void skipprefetch_Nelem::thread_j_1_fu_444_p2() {
    j_1_fu_444_p2 = (!j_reg_214.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_reg_214.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void skipprefetch_Nelem::thread_neg_mul_fu_333_p2() {
    neg_mul_fu_333_p2 = (!ap_const_lv65_0.is_01() || !mul_reg_526.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul_reg_526.read()));
}

void skipprefetch_Nelem::thread_neg_ti_fu_362_p2() {
    neg_ti_fu_362_p2 = (!ap_const_lv32_0.is_01() || !tmp_16_fu_355_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_16_fu_355_p3.read()));
}

void skipprefetch_Nelem::thread_tmp_11_fu_321_p1() {
    tmp_11_fu_321_p1 = esl_zext<32,30>(vb5_reg_488.read());
}

void skipprefetch_Nelem::thread_tmp_12_fu_275_p1() {
    tmp_12_fu_275_p1 = esl_zext<32,30>(n3_reg_493.read());
}

void skipprefetch_Nelem::thread_tmp_13_fu_330_p1() {
    tmp_13_fu_330_p1 = esl_zext<32,29>(a1_reg_498.read());
}

void skipprefetch_Nelem::thread_tmp_14_fu_348_p1() {
    tmp_14_fu_348_p1 = esl_sext<32,27>(tmp_18_fu_338_p4.read());
}

void skipprefetch_Nelem::thread_tmp_15_fu_352_p1() {
    tmp_15_fu_352_p1 = esl_sext<32,27>(tmp_19_reg_531.read());
}

void skipprefetch_Nelem::thread_tmp_16_fu_355_p3() {
    tmp_16_fu_355_p3 = (!tmp_17_reg_520.read()[0].is_01())? sc_lv<32>(): ((tmp_17_reg_520.read()[0].to_bool())? tmp_14_fu_348_p1.read(): tmp_15_fu_352_p1.read());
}

void skipprefetch_Nelem::thread_tmp_18_fu_338_p4() {
    tmp_18_fu_338_p4 = neg_mul_fu_333_p2.read().range(64, 38);
}

void skipprefetch_Nelem::thread_tmp_1_fu_409_p1() {
    tmp_1_fu_409_p1 = esl_sext<32,16>(tmp_4_reg_582.read());
}

void skipprefetch_Nelem::thread_tmp_20_fu_375_p1() {
    tmp_20_fu_375_p1 = buff_len_fu_368_p3.read().range(27-1, 0);
}

void skipprefetch_Nelem::thread_tmp_2_fu_412_p2() {
    tmp_2_fu_412_p2 = (!cum_offs_reg_191.read().is_01() || !tmp_1_fu_409_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(cum_offs_reg_191.read()) + sc_bigint<32>(tmp_1_fu_409_p1.read()));
}

void skipprefetch_Nelem::thread_tmp_3_fu_429_p1() {
    tmp_3_fu_429_p1 = esl_sext<32,16>(tmp_5_reg_587.read());
}

void skipprefetch_Nelem::thread_tmp_6_fu_450_p2() {
    tmp_6_fu_450_p2 = (!i1_reg_225.read().is_01() || !PREF_WINDOW_addr_1_r_reg_610.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_reg_225.read()) < sc_bigint<32>(PREF_WINDOW_addr_1_r_reg_610.read()));
}

void skipprefetch_Nelem::thread_tmp_7_fu_455_p2() {
    tmp_7_fu_455_p2 = (!i1_reg_225.read().is_01() || !buff_len_reg_548.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_reg_225.read()) < sc_bigint<32>(buff_len_reg_548.read()));
}

void skipprefetch_Nelem::thread_tmp_9_fu_478_p1() {
    tmp_9_fu_478_p1 = esl_sext<32,16>(grp_fu_235_p4.read());
}

void skipprefetch_Nelem::thread_tmp_fu_387_p2() {
    tmp_fu_387_p2 = (!i_cast_fu_383_p1.read().is_01() || !tmp_20_reg_553.read().is_01())? sc_lv<1>(): (sc_bigint<27>(i_cast_fu_383_p1.read()) < sc_bigint<27>(tmp_20_reg_553.read()));
}

void skipprefetch_Nelem::thread_tmp_s_fu_482_p2() {
    tmp_s_fu_482_p2 = (!buff_load_reg_633.read().is_01() || !tmp_9_fu_478_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(buff_load_reg_633.read()) + sc_bigint<32>(tmp_9_fu_478_p1.read()));
}

void skipprefetch_Nelem::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if (!esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_387_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            if (!esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state25;
            }
            break;
        case 33554432 : 
            if (!esl_seteq<1,1,1>(A_BUS_RVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 134217728 : 
            if ((!(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_438_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            if (!esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 68719476736 : 
            if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_PREF_WINDOW_ARREADY.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  !esl_seteq<1,1,1>(tmp_6_reg_615.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_619.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_A_BUS_ARREADY.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            break;
        case 8796093022208 : 
            if (!((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(PREF_WINDOW_RVALID.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_condition_547.read(), ap_const_boolean_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 17592186044416 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) || 
  (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_450_p2.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_455_p2.read()))))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state54;
            }
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<46>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void skipprefetch_Nelem::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_A_BUS_AWVALID\" :  \"" << m_axi_A_BUS_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_AWREADY\" :  \"" << m_axi_A_BUS_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWADDR\" :  \"" << m_axi_A_BUS_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWID\" :  \"" << m_axi_A_BUS_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWLEN\" :  \"" << m_axi_A_BUS_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWSIZE\" :  \"" << m_axi_A_BUS_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWBURST\" :  \"" << m_axi_A_BUS_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWLOCK\" :  \"" << m_axi_A_BUS_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWCACHE\" :  \"" << m_axi_A_BUS_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWPROT\" :  \"" << m_axi_A_BUS_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWQOS\" :  \"" << m_axi_A_BUS_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWREGION\" :  \"" << m_axi_A_BUS_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_AWUSER\" :  \"" << m_axi_A_BUS_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WVALID\" :  \"" << m_axi_A_BUS_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_WREADY\" :  \"" << m_axi_A_BUS_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WDATA\" :  \"" << m_axi_A_BUS_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WSTRB\" :  \"" << m_axi_A_BUS_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WLAST\" :  \"" << m_axi_A_BUS_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WID\" :  \"" << m_axi_A_BUS_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_WUSER\" :  \"" << m_axi_A_BUS_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARVALID\" :  \"" << m_axi_A_BUS_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_ARREADY\" :  \"" << m_axi_A_BUS_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARADDR\" :  \"" << m_axi_A_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARID\" :  \"" << m_axi_A_BUS_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARLEN\" :  \"" << m_axi_A_BUS_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARSIZE\" :  \"" << m_axi_A_BUS_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARBURST\" :  \"" << m_axi_A_BUS_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARLOCK\" :  \"" << m_axi_A_BUS_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARCACHE\" :  \"" << m_axi_A_BUS_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARPROT\" :  \"" << m_axi_A_BUS_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARQOS\" :  \"" << m_axi_A_BUS_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARREGION\" :  \"" << m_axi_A_BUS_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_ARUSER\" :  \"" << m_axi_A_BUS_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RVALID\" :  \"" << m_axi_A_BUS_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_RREADY\" :  \"" << m_axi_A_BUS_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RDATA\" :  \"" << m_axi_A_BUS_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RLAST\" :  \"" << m_axi_A_BUS_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RID\" :  \"" << m_axi_A_BUS_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RUSER\" :  \"" << m_axi_A_BUS_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_RRESP\" :  \"" << m_axi_A_BUS_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BVALID\" :  \"" << m_axi_A_BUS_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_A_BUS_BREADY\" :  \"" << m_axi_A_BUS_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BRESP\" :  \"" << m_axi_A_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BID\" :  \"" << m_axi_A_BUS_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_A_BUS_BUSER\" :  \"" << m_axi_A_BUS_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWVALID\" :  \"" << m_axi_PREF_WINDOW_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWREADY\" :  \"" << m_axi_PREF_WINDOW_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWADDR\" :  \"" << m_axi_PREF_WINDOW_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWID\" :  \"" << m_axi_PREF_WINDOW_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWLEN\" :  \"" << m_axi_PREF_WINDOW_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWSIZE\" :  \"" << m_axi_PREF_WINDOW_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWBURST\" :  \"" << m_axi_PREF_WINDOW_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWLOCK\" :  \"" << m_axi_PREF_WINDOW_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWCACHE\" :  \"" << m_axi_PREF_WINDOW_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWPROT\" :  \"" << m_axi_PREF_WINDOW_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWQOS\" :  \"" << m_axi_PREF_WINDOW_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWREGION\" :  \"" << m_axi_PREF_WINDOW_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_AWUSER\" :  \"" << m_axi_PREF_WINDOW_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_WVALID\" :  \"" << m_axi_PREF_WINDOW_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_WREADY\" :  \"" << m_axi_PREF_WINDOW_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_WDATA\" :  \"" << m_axi_PREF_WINDOW_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_WSTRB\" :  \"" << m_axi_PREF_WINDOW_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_WLAST\" :  \"" << m_axi_PREF_WINDOW_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_WID\" :  \"" << m_axi_PREF_WINDOW_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_WUSER\" :  \"" << m_axi_PREF_WINDOW_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARVALID\" :  \"" << m_axi_PREF_WINDOW_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARREADY\" :  \"" << m_axi_PREF_WINDOW_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARADDR\" :  \"" << m_axi_PREF_WINDOW_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARID\" :  \"" << m_axi_PREF_WINDOW_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARLEN\" :  \"" << m_axi_PREF_WINDOW_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARSIZE\" :  \"" << m_axi_PREF_WINDOW_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARBURST\" :  \"" << m_axi_PREF_WINDOW_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARLOCK\" :  \"" << m_axi_PREF_WINDOW_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARCACHE\" :  \"" << m_axi_PREF_WINDOW_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARPROT\" :  \"" << m_axi_PREF_WINDOW_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARQOS\" :  \"" << m_axi_PREF_WINDOW_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARREGION\" :  \"" << m_axi_PREF_WINDOW_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_ARUSER\" :  \"" << m_axi_PREF_WINDOW_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_RVALID\" :  \"" << m_axi_PREF_WINDOW_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_RREADY\" :  \"" << m_axi_PREF_WINDOW_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_RDATA\" :  \"" << m_axi_PREF_WINDOW_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_RLAST\" :  \"" << m_axi_PREF_WINDOW_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_RID\" :  \"" << m_axi_PREF_WINDOW_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_RUSER\" :  \"" << m_axi_PREF_WINDOW_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_RRESP\" :  \"" << m_axi_PREF_WINDOW_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_BVALID\" :  \"" << m_axi_PREF_WINDOW_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_PREF_WINDOW_BREADY\" :  \"" << m_axi_PREF_WINDOW_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_BRESP\" :  \"" << m_axi_PREF_WINDOW_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_BID\" :  \"" << m_axi_PREF_WINDOW_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_PREF_WINDOW_BUSER\" :  \"" << m_axi_PREF_WINDOW_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_AWVALID\" :  \"" << s_axi_CFG_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_AWREADY\" :  \"" << s_axi_CFG_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_AWADDR\" :  \"" << s_axi_CFG_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WVALID\" :  \"" << s_axi_CFG_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_WREADY\" :  \"" << s_axi_CFG_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WDATA\" :  \"" << s_axi_CFG_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_WSTRB\" :  \"" << s_axi_CFG_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_ARVALID\" :  \"" << s_axi_CFG_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_ARREADY\" :  \"" << s_axi_CFG_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_ARADDR\" :  \"" << s_axi_CFG_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RVALID\" :  \"" << s_axi_CFG_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_RREADY\" :  \"" << s_axi_CFG_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RDATA\" :  \"" << s_axi_CFG_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_RRESP\" :  \"" << s_axi_CFG_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_BVALID\" :  \"" << s_axi_CFG_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CFG_BREADY\" :  \"" << s_axi_CFG_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CFG_BRESP\" :  \"" << s_axi_CFG_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

