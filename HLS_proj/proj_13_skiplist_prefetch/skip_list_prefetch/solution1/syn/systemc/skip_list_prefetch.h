// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _skip_list_prefetch_HH_
#define _skip_list_prefetch_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "skip_list_prefetcbkb.h"
#include "skip_list_prefetch_CFG_s_axi.h"
#include "skip_list_prefetch_A_BUS_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_A_BUS_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_A_BUS_ID_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_DATA_WIDTH = 64,
         unsigned int C_M_AXI_A_BUS_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_A_BUS_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CFG_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_CFG_DATA_WIDTH = 32>
struct skip_list_prefetch : public sc_module {
    // Port declarations 65
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_A_BUS_AWVALID;
    sc_in< sc_logic > m_axi_A_BUS_AWREADY;
    sc_out< sc_uint<C_M_AXI_A_BUS_ADDR_WIDTH> > m_axi_A_BUS_AWADDR;
    sc_out< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_AWID;
    sc_out< sc_lv<8> > m_axi_A_BUS_AWLEN;
    sc_out< sc_lv<3> > m_axi_A_BUS_AWSIZE;
    sc_out< sc_lv<2> > m_axi_A_BUS_AWBURST;
    sc_out< sc_lv<2> > m_axi_A_BUS_AWLOCK;
    sc_out< sc_lv<4> > m_axi_A_BUS_AWCACHE;
    sc_out< sc_lv<3> > m_axi_A_BUS_AWPROT;
    sc_out< sc_lv<4> > m_axi_A_BUS_AWQOS;
    sc_out< sc_lv<4> > m_axi_A_BUS_AWREGION;
    sc_out< sc_uint<C_M_AXI_A_BUS_AWUSER_WIDTH> > m_axi_A_BUS_AWUSER;
    sc_out< sc_logic > m_axi_A_BUS_WVALID;
    sc_in< sc_logic > m_axi_A_BUS_WREADY;
    sc_out< sc_uint<C_M_AXI_A_BUS_DATA_WIDTH> > m_axi_A_BUS_WDATA;
    sc_out< sc_uint<C_M_AXI_A_BUS_DATA_WIDTH/8> > m_axi_A_BUS_WSTRB;
    sc_out< sc_logic > m_axi_A_BUS_WLAST;
    sc_out< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_WID;
    sc_out< sc_uint<C_M_AXI_A_BUS_WUSER_WIDTH> > m_axi_A_BUS_WUSER;
    sc_out< sc_logic > m_axi_A_BUS_ARVALID;
    sc_in< sc_logic > m_axi_A_BUS_ARREADY;
    sc_out< sc_uint<C_M_AXI_A_BUS_ADDR_WIDTH> > m_axi_A_BUS_ARADDR;
    sc_out< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_ARID;
    sc_out< sc_lv<8> > m_axi_A_BUS_ARLEN;
    sc_out< sc_lv<3> > m_axi_A_BUS_ARSIZE;
    sc_out< sc_lv<2> > m_axi_A_BUS_ARBURST;
    sc_out< sc_lv<2> > m_axi_A_BUS_ARLOCK;
    sc_out< sc_lv<4> > m_axi_A_BUS_ARCACHE;
    sc_out< sc_lv<3> > m_axi_A_BUS_ARPROT;
    sc_out< sc_lv<4> > m_axi_A_BUS_ARQOS;
    sc_out< sc_lv<4> > m_axi_A_BUS_ARREGION;
    sc_out< sc_uint<C_M_AXI_A_BUS_ARUSER_WIDTH> > m_axi_A_BUS_ARUSER;
    sc_in< sc_logic > m_axi_A_BUS_RVALID;
    sc_out< sc_logic > m_axi_A_BUS_RREADY;
    sc_in< sc_uint<C_M_AXI_A_BUS_DATA_WIDTH> > m_axi_A_BUS_RDATA;
    sc_in< sc_logic > m_axi_A_BUS_RLAST;
    sc_in< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_RID;
    sc_in< sc_uint<C_M_AXI_A_BUS_RUSER_WIDTH> > m_axi_A_BUS_RUSER;
    sc_in< sc_lv<2> > m_axi_A_BUS_RRESP;
    sc_in< sc_logic > m_axi_A_BUS_BVALID;
    sc_out< sc_logic > m_axi_A_BUS_BREADY;
    sc_in< sc_lv<2> > m_axi_A_BUS_BRESP;
    sc_in< sc_uint<C_M_AXI_A_BUS_ID_WIDTH> > m_axi_A_BUS_BID;
    sc_in< sc_uint<C_M_AXI_A_BUS_BUSER_WIDTH> > m_axi_A_BUS_BUSER;
    sc_in< sc_logic > s_axi_CFG_AWVALID;
    sc_out< sc_logic > s_axi_CFG_AWREADY;
    sc_in< sc_uint<C_S_AXI_CFG_ADDR_WIDTH> > s_axi_CFG_AWADDR;
    sc_in< sc_logic > s_axi_CFG_WVALID;
    sc_out< sc_logic > s_axi_CFG_WREADY;
    sc_in< sc_uint<C_S_AXI_CFG_DATA_WIDTH> > s_axi_CFG_WDATA;
    sc_in< sc_uint<C_S_AXI_CFG_DATA_WIDTH/8> > s_axi_CFG_WSTRB;
    sc_in< sc_logic > s_axi_CFG_ARVALID;
    sc_out< sc_logic > s_axi_CFG_ARREADY;
    sc_in< sc_uint<C_S_AXI_CFG_ADDR_WIDTH> > s_axi_CFG_ARADDR;
    sc_out< sc_logic > s_axi_CFG_RVALID;
    sc_in< sc_logic > s_axi_CFG_RREADY;
    sc_out< sc_uint<C_S_AXI_CFG_DATA_WIDTH> > s_axi_CFG_RDATA;
    sc_out< sc_lv<2> > s_axi_CFG_RRESP;
    sc_out< sc_logic > s_axi_CFG_BVALID;
    sc_in< sc_logic > s_axi_CFG_BREADY;
    sc_out< sc_lv<2> > s_axi_CFG_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const6;
    sc_signal< sc_lv<32> > ap_var_for_const7;
    sc_signal< sc_lv<1> > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<8> > ap_var_for_const9;
    sc_signal< sc_lv<3> > ap_var_for_const3;
    sc_signal< sc_lv<2> > ap_var_for_const4;
    sc_signal< sc_lv<4> > ap_var_for_const5;
    sc_signal< sc_lv<64> > ap_var_for_const8;


    // Module declarations
    skip_list_prefetch(sc_module_name name);
    SC_HAS_PROCESS(skip_list_prefetch);

    ~skip_list_prefetch();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    skip_list_prefetch_CFG_s_axi<C_S_AXI_CFG_ADDR_WIDTH,C_S_AXI_CFG_DATA_WIDTH>* skip_list_prefetch_CFG_s_axi_U;
    skip_list_prefetch_A_BUS_m_axi<64,32,5,16,16,16,16,C_M_AXI_A_BUS_ID_WIDTH,C_M_AXI_A_BUS_ADDR_WIDTH,C_M_AXI_A_BUS_DATA_WIDTH,C_M_AXI_A_BUS_AWUSER_WIDTH,C_M_AXI_A_BUS_ARUSER_WIDTH,C_M_AXI_A_BUS_WUSER_WIDTH,C_M_AXI_A_BUS_RUSER_WIDTH,C_M_AXI_A_BUS_BUSER_WIDTH,C_M_AXI_A_BUS_USER_VALUE,C_M_AXI_A_BUS_PROT_VALUE,C_M_AXI_A_BUS_CACHE_VALUE>* skip_list_prefetch_A_BUS_m_axi_U;
    skip_list_prefetcbkb* buff_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<20> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > a;
    sc_signal< sc_logic > A_BUS_blk_n_AR;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > exitcond2_reg_359;
    sc_signal< sc_logic > A_BUS_blk_n_R;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp0_iter1_exitcond2_reg_359;
    sc_signal< sc_lv<1> > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter1_exitcond_flatten_reg_395;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter9;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter8_exitcond_flatten_reg_395;
    sc_signal< sc_logic > A_BUS_AWREADY;
    sc_signal< sc_logic > A_BUS_WREADY;
    sc_signal< sc_logic > A_BUS_ARVALID;
    sc_signal< sc_logic > A_BUS_ARREADY;
    sc_signal< sc_lv<32> > A_BUS_ARADDR;
    sc_signal< sc_logic > A_BUS_RVALID;
    sc_signal< sc_logic > A_BUS_RREADY;
    sc_signal< sc_lv<64> > A_BUS_RDATA;
    sc_signal< sc_logic > A_BUS_RLAST;
    sc_signal< sc_lv<1> > A_BUS_RID;
    sc_signal< sc_lv<1> > A_BUS_RUSER;
    sc_signal< sc_lv<2> > A_BUS_RRESP;
    sc_signal< sc_logic > A_BUS_BVALID;
    sc_signal< sc_lv<2> > A_BUS_BRESP;
    sc_signal< sc_lv<1> > A_BUS_BID;
    sc_signal< sc_lv<1> > A_BUS_BUSER;
    sc_signal< sc_lv<8> > i_reg_131;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp0_iter1_i_reg_131;
    sc_signal< sc_lv<24> > cum_offs_reg_143;
    sc_signal< sc_lv<14> > indvar_flatten_reg_155;
    sc_signal< sc_lv<8> > i1_reg_166;
    sc_signal< sc_lv<16> > reg_191;
    sc_signal< sc_logic > ap_sig_ioackin_A_BUS_ARREADY;
    sc_signal< sc_lv<32> > tmp_fu_205_p1;
    sc_signal< sc_lv<32> > tmp_reg_349;
    sc_signal< sc_lv<31> > tmp_cast6_fu_209_p1;
    sc_signal< sc_lv<31> > tmp_cast6_reg_354;
    sc_signal< sc_lv<1> > exitcond2_fu_213_p2;
    sc_signal< sc_lv<31> > cum_offs_cast_cast_fu_219_p1;
    sc_signal< sc_lv<31> > cum_offs_cast_cast_reg_363;
    sc_signal< sc_lv<8> > i_1_fu_224_p2;
    sc_signal< sc_lv<8> > i_1_reg_368;
    sc_signal< sc_lv<32> > A_BUS_addr_1_reg_373;
    sc_signal< sc_lv<24> > cum_offs_1_fu_275_p2;
    sc_signal< sc_lv<31> > grp_fu_177_p2;
    sc_signal< sc_lv<31> > a2_sum3_reg_384;
    sc_signal< sc_lv<1> > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_291_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter2_exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter3_exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter4_exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter5_exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter6_exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter7_exitcond_flatten_reg_395;
    sc_signal< sc_lv<1> > ap_pipeline_reg_pp1_iter9_exitcond_flatten_reg_395;
    sc_signal< sc_lv<14> > indvar_flatten_next_fu_297_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<8> > buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter1_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter2_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter3_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter4_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter5_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter6_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter7_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter8_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > ap_pipeline_reg_pp1_iter9_buff_addr_1_reg_404;
    sc_signal< sc_lv<8> > i_2_fu_322_p2;
    sc_signal< sc_lv<32> > buff_q0;
    sc_signal< sc_lv<32> > buff_load_reg_415;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter2_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter3_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter4_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter5_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter6_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter7_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter8_buff_load_reg_415;
    sc_signal< sc_lv<32> > ap_pipeline_reg_pp1_iter9_buff_load_reg_415;
    sc_signal< sc_lv<32> > a2_sum4_fu_328_p2;
    sc_signal< sc_lv<32> > a2_sum4_reg_420;
    sc_signal< sc_lv<1> > ap_CS_fsm_pp0_stage7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter10;
    sc_signal< sc_lv<8> > buff_address0;
    sc_signal< sc_logic > buff_ce0;
    sc_signal< sc_logic > buff_we0;
    sc_signal< sc_lv<32> > buff_d0;
    sc_signal< sc_logic > buff_ce1;
    sc_signal< sc_logic > buff_we1;
    sc_signal< sc_lv<32> > buff_d1;
    sc_signal< sc_lv<8> > i_phi_fu_135_p4;
    sc_signal< sc_lv<24> > cum_offs_phi_fu_147_p4;
    sc_signal< sc_lv<32> > i_cast2_fu_241_p1;
    sc_signal< sc_lv<32> > i1_cast1_fu_317_p1;
    sc_signal< sc_lv<32> > a2_sum_cast_fu_230_p1;
    sc_signal< sc_lv<32> > a2_sum3_cast_fu_281_p1;
    sc_signal< sc_logic > ap_reg_ioackin_A_BUS_ARREADY;
    sc_signal< sc_lv<31> > grp_fu_177_p1;
    sc_signal< sc_lv<29> > a1_fu_195_p4;
    sc_signal< sc_lv<24> > tmp_cast_fu_246_p1;
    sc_signal< sc_lv<24> > tmp_1_fu_250_p2;
    sc_signal< sc_lv<16> > tmp_5_fu_261_p4;
    sc_signal< sc_lv<24> > tmp_2_cast_fu_271_p1;
    sc_signal< sc_lv<1> > exitcond5_fu_303_p2;
    sc_signal< sc_lv<8> > i1_mid2_fu_309_p3;
    sc_signal< sc_lv<32> > tmp_6_fu_339_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state32;
    sc_signal< sc_lv<20> > ap_NS_fsm;
    sc_signal< bool > ap_condition_465;
    sc_signal< bool > ap_condition_124;
    sc_signal< bool > ap_condition_489;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<20> ap_ST_fsm_state1;
    static const sc_lv<20> ap_ST_fsm_pp0_stage0;
    static const sc_lv<20> ap_ST_fsm_pp0_stage1;
    static const sc_lv<20> ap_ST_fsm_pp0_stage2;
    static const sc_lv<20> ap_ST_fsm_pp0_stage3;
    static const sc_lv<20> ap_ST_fsm_pp0_stage4;
    static const sc_lv<20> ap_ST_fsm_pp0_stage5;
    static const sc_lv<20> ap_ST_fsm_pp0_stage6;
    static const sc_lv<20> ap_ST_fsm_pp0_stage7;
    static const sc_lv<20> ap_ST_fsm_state12;
    static const sc_lv<20> ap_ST_fsm_state13;
    static const sc_lv<20> ap_ST_fsm_state14;
    static const sc_lv<20> ap_ST_fsm_state15;
    static const sc_lv<20> ap_ST_fsm_state16;
    static const sc_lv<20> ap_ST_fsm_state17;
    static const sc_lv<20> ap_ST_fsm_state18;
    static const sc_lv<20> ap_ST_fsm_state19;
    static const sc_lv<20> ap_ST_fsm_state20;
    static const sc_lv<20> ap_ST_fsm_pp1_stage0;
    static const sc_lv<20> ap_ST_fsm_state32;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_A_BUS_USER_VALUE;
    static const int C_M_AXI_A_BUS_PROT_VALUE;
    static const int C_M_AXI_A_BUS_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<8> ap_const_lv8_C8;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<14> ap_const_lv14_2617;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_A_BUS_ARADDR();
    void thread_A_BUS_ARVALID();
    void thread_A_BUS_RREADY();
    void thread_A_BUS_blk_n_AR();
    void thread_A_BUS_blk_n_R();
    void thread_a1_fu_195_p4();
    void thread_a2_sum3_cast_fu_281_p1();
    void thread_a2_sum4_fu_328_p2();
    void thread_a2_sum_cast_fu_230_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state32();
    void thread_ap_condition_124();
    void thread_ap_condition_465();
    void thread_ap_condition_489();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_ioackin_A_BUS_ARREADY();
    void thread_buff_address0();
    void thread_buff_ce0();
    void thread_buff_ce1();
    void thread_buff_d0();
    void thread_buff_d1();
    void thread_buff_we0();
    void thread_buff_we1();
    void thread_cum_offs_1_fu_275_p2();
    void thread_cum_offs_cast_cast_fu_219_p1();
    void thread_cum_offs_phi_fu_147_p4();
    void thread_exitcond2_fu_213_p2();
    void thread_exitcond5_fu_303_p2();
    void thread_exitcond_flatten_fu_291_p2();
    void thread_grp_fu_177_p1();
    void thread_grp_fu_177_p2();
    void thread_i1_cast1_fu_317_p1();
    void thread_i1_mid2_fu_309_p3();
    void thread_i_1_fu_224_p2();
    void thread_i_2_fu_322_p2();
    void thread_i_cast2_fu_241_p1();
    void thread_i_phi_fu_135_p4();
    void thread_indvar_flatten_next_fu_297_p2();
    void thread_tmp_1_fu_250_p2();
    void thread_tmp_2_cast_fu_271_p1();
    void thread_tmp_5_fu_261_p4();
    void thread_tmp_6_fu_339_p1();
    void thread_tmp_cast6_fu_209_p1();
    void thread_tmp_cast_fu_246_p1();
    void thread_tmp_fu_205_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
