; ModuleID = 'A:/COMP_ARCH/PYNQ_Projects/HLS_proj/proj_13_skiplist_prefetch/skip_list_prefetch/solution1/.autopilot/db/a.o.2.bc'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S32"
target triple = "i686-pc-mingw32"

@skip_list_prefetch.str = internal unnamed_addr constant [19 x i8] c"skip_list_prefetch\00" ; [#uses=1 type=[19 x i8]*]
@llvm.global_ctors.1 = appending global [1 x void ()*] [void ()* @_GLOBAL__I_a] ; [#uses=0 type=[1 x void ()*]*]
@llvm.global_ctors.0 = appending global [1 x i32] [i32 65535] ; [#uses=0 type=[1 x i32]*]
@.str5 = private unnamed_addr constant [4 x i8] c"CFG\00", align 1 ; [#uses=1 type=[4 x i8]*]
@.str4 = private unnamed_addr constant [10 x i8] c"s_axilite\00", align 1 ; [#uses=1 type=[10 x i8]*]
@.str3 = private unnamed_addr constant [6 x i8] c"slave\00", align 1 ; [#uses=1 type=[6 x i8]*]
@.str2 = private unnamed_addr constant [6 x i8] c"A_BUS\00", align 1 ; [#uses=1 type=[6 x i8]*]
@.str1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1 ; [#uses=9 type=[1 x i8]*]
@.str = private unnamed_addr constant [6 x i8] c"m_axi\00", align 1 ; [#uses=1 type=[6 x i8]*]

; [#uses=0]
define void @skip_list_prefetch(i64* %a) {
  call void (...)* @_ssdm_op_SpecBitsMap(i64* %a), !map !63
  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @skip_list_prefetch.str) nounwind
  %buff = alloca [500 x i32], align 4             ; [#uses=52 type=[500 x i32]*]
  call void @llvm.dbg.value(metadata !{i64* %a}, i64 0, metadata !77), !dbg !89 ; [debug line = 19:47] [debug variable = a]
  call void (...)* @_ssdm_op_SpecInterface(i64* %a, [6 x i8]* @.str, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 0, [6 x i8]* @.str2, [6 x i8]* @.str3, [1 x i8]* @.str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind
  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @.str4, i32 0, i32 0, [1 x i8]* @.str1, i32 0, i32 0, [4 x i8]* @.str5, [1 x i8]* @.str1, [1 x i8]* @.str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @.str1, [1 x i8]* @.str1) nounwind, !dbg !90 ; [debug line = 22:1]
  call void @llvm.dbg.declare(metadata !{[500 x i32]* %buff}, metadata !92), !dbg !96 ; [debug line = 27:7] [debug variable = buff]
  %a.load = load volatile i64* %a, align 8, !dbg !97 ; [#uses=1 type=i64] [debug line = 30:3]
  %tmp.1 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load, i32 48, i32 63), !dbg !97 ; [#uses=1 type=i16] [debug line = 30:3]
  %"cum_offs[1].cast" = sext i16 %tmp.1 to i25, !dbg !97 ; [#uses=1 type=i25] [debug line = 30:3]
  %buff.addr = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 0, !dbg !98 ; [#uses=1 type=i32*] [debug line = 63:5]
  br label %1, !dbg !103                          ; [debug line = 58:14]

; <label>:1                                       ; preds = %.preheader4.0, %0
  %cum_offs.1 = phi i25 [ %"cum_offs[1].cast", %0 ], [ %"cum_offs[1]", %.preheader4.0 ] ; [#uses=2 type=i25]
  %cum_offs = phi i25 [ 0, %0 ], [ %"cum_offs[0]", %.preheader4.0 ] ; [#uses=2 type=i25]
  %i = phi i9 [ 1, %0 ], [ %i.1, %.preheader4.0 ] ; [#uses=3 type=i9]
  %cum_offs.1.cast = sext i25 %cum_offs.1 to i32, !dbg !103 ; [#uses=3 type=i32] [debug line = 58:14]
  %cum_offs.cast = sext i25 %cum_offs to i32, !dbg !103 ; [#uses=2 type=i32] [debug line = 58:14]
  %i.cast2 = zext i9 %i to i32, !dbg !103         ; [#uses=1 type=i32] [debug line = 58:14]
  %exitcond3 = icmp eq i9 %i, -12, !dbg !103      ; [#uses=1 type=i1] [debug line = 58:14]
  %2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 499, i64 499, i64 499) ; [#uses=0 type=i32]
  br i1 %exitcond3, label %3, label %.preheader4.0, !dbg !103 ; [debug line = 58:14]

.preheader4.0:                                    ; preds = %1
  store i32 %cum_offs.cast, i32* %buff.addr, align 4, !dbg !98 ; [debug line = 63:5]
  %a.addr.1 = getelementptr i64* %a, i32 %cum_offs.cast, !dbg !104 ; [#uses=2 type=i64*] [debug line = 64:5]
  %.new10.0 = load volatile i64* %a.addr.1, align 8, !dbg !104 ; [#uses=0 type=i64] [debug line = 64:5]
  %a.load.1 = load volatile i64* %a.addr.1, align 8, !dbg !105 ; [#uses=1 type=i64] [debug line = 66:5]
  %tmp = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.1, i32 32, i32 47), !dbg !105 ; [#uses=1 type=i16] [debug line = 66:5]
  %tmp.3.cast = sext i16 %tmp to i25, !dbg !105   ; [#uses=1 type=i25] [debug line = 66:5]
  %"cum_offs[0]" = add i25 %cum_offs, %tmp.3.cast, !dbg !105 ; [#uses=1 type=i25] [debug line = 66:5]
  call void @llvm.dbg.value(metadata !{i25 %"cum_offs[0]"}, i64 0, metadata !106), !dbg !105 ; [debug line = 66:5] [debug variable = cum_offs[0]]
  %buff.addr.1 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.cast2, !dbg !98 ; [#uses=1 type=i32*] [debug line = 63:5]
  store i32 %cum_offs.1.cast, i32* %buff.addr.1, align 4, !dbg !98 ; [debug line = 63:5]
  %a.addr.2 = getelementptr i64* %a, i32 %cum_offs.1.cast, !dbg !104 ; [#uses=2 type=i64*] [debug line = 64:5]
  %.new10.1 = load volatile i64* %a.addr.2, align 8, !dbg !104 ; [#uses=0 type=i64] [debug line = 64:5]
  %a.load.2 = load volatile i64* %a.addr.2, align 8, !dbg !105 ; [#uses=1 type=i64] [debug line = 66:5]
  %tmp.2 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.2, i32 48, i32 63), !dbg !105 ; [#uses=1 type=i16] [debug line = 66:5]
  %tmp.3.1.cast = sext i16 %tmp.2 to i25, !dbg !105 ; [#uses=1 type=i25] [debug line = 66:5]
  %"cum_offs[1]" = add i25 %cum_offs.1, %tmp.3.1.cast, !dbg !105 ; [#uses=1 type=i25] [debug line = 66:5]
  call void @llvm.dbg.value(metadata !{i25 %"cum_offs[1]"}, i64 0, metadata !107), !dbg !105 ; [debug line = 66:5] [debug variable = cum_offs[1]]
  %i.1 = add i9 %i, 1, !dbg !108                  ; [#uses=1 type=i9] [debug line = 58:26]
  call void @llvm.dbg.value(metadata !{i9 %i.1}, i64 0, metadata !109), !dbg !108 ; [debug line = 58:26] [debug variable = i]
  br label %1, !dbg !108                          ; [debug line = 58:26]

; <label>:3                                       ; preds = %1
  %cum_offs.1.cast.lcssa = phi i32 [ %cum_offs.1.cast, %1 ] ; [#uses=1 type=i32]
  %a.addr = getelementptr i64* %a, i32 %cum_offs.1.cast.lcssa, !dbg !110 ; [#uses=1 type=i64*] [debug line = 84:3]
  %.new6 = load volatile i64* %a.addr, align 8, !dbg !110 ; [#uses=0 type=i64] [debug line = 84:3]
  br label %4, !dbg !111                          ; [debug line = 88:15]

; <label>:4                                       ; preds = %7, %3
  %j1 = phi i5 [ 0, %3 ], [ %j, %7 ]              ; [#uses=2 type=i5]
  %exitcond1 = icmp eq i5 %j1, -13, !dbg !111     ; [#uses=1 type=i1] [debug line = 88:15]
  %5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 19, i64 19, i64 19) ; [#uses=0 type=i32]
  br i1 %exitcond1, label %8, label %.preheader.0.preheader, !dbg !111 ; [debug line = 88:15]

.preheader.0.preheader:                           ; preds = %4
  br label %.preheader.0, !dbg !113               ; [debug line = 93:6]

.preheader.0:                                     ; preds = %.preheader.26, %.preheader.0.preheader
  %i2 = phi i9 [ %i.2.48, %.preheader.26 ], [ 25, %.preheader.0.preheader ] ; [#uses=51 type=i9]
  %i2.cast = zext i9 %i2 to i32, !dbg !113        ; [#uses=1 type=i32] [debug line = 93:6]
  %buff.addr.2 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i2.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load = load i32* %buff.addr.2, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.3 = getelementptr i64* %a, i32 %buff.load, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.3 = load volatile i64* %a.addr.3, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.4 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.3, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7 = sext i16 %tmp.4 to i32, !dbg !113      ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs = add nsw i32 %tmp.7, %buff.load, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.4 = getelementptr i64* %a, i32 %seq_skip_offs, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.0 = load volatile i64* %a.addr.4, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs, i32* %buff.addr.2, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2 = add i9 %i2, 1, !dbg !119                 ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.cast = zext i9 %i.2 to i32, !dbg !119      ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.3 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.1 = load i32* %buff.addr.3, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.5 = getelementptr i64* %a, i32 %buff.load.1, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.4 = load volatile i64* %a.addr.5, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.5 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.4, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.1 = sext i16 %tmp.5 to i32, !dbg !113    ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.1 = add nsw i32 %tmp.7.1, %buff.load.1, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.6 = getelementptr i64* %a, i32 %seq_skip_offs.1, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.1 = load volatile i64* %a.addr.6, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.1, i32* %buff.addr.3, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.1 = add i9 %i2, 2, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.1.cast = zext i9 %i.2.1 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.4 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.1.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.2 = load i32* %buff.addr.4, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.7 = getelementptr i64* %a, i32 %buff.load.2, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.5 = load volatile i64* %a.addr.7, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.6 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.5, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.2 = sext i16 %tmp.6 to i32, !dbg !113    ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.2 = add nsw i32 %tmp.7.2, %buff.load.2, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.8 = getelementptr i64* %a, i32 %seq_skip_offs.2, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.2 = load volatile i64* %a.addr.8, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.2, i32* %buff.addr.4, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.2 = add i9 %i2, 3, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.2.cast = zext i9 %i.2.2 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.5 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.2.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.3 = load i32* %buff.addr.5, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.9 = getelementptr i64* %a, i32 %buff.load.3, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.6 = load volatile i64* %a.addr.9, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.8 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.6, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.3 = sext i16 %tmp.8 to i32, !dbg !113    ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.3 = add nsw i32 %tmp.7.3, %buff.load.3, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.10 = getelementptr i64* %a, i32 %seq_skip_offs.3, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.3 = load volatile i64* %a.addr.10, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.3, i32* %buff.addr.5, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.3 = add i9 %i2, 4, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.3.cast = zext i9 %i.2.3 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.6 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.3.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.4 = load i32* %buff.addr.6, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.11 = getelementptr i64* %a, i32 %buff.load.4, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.7 = load volatile i64* %a.addr.11, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.9 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.7, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.4 = sext i16 %tmp.9 to i32, !dbg !113    ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.4 = add nsw i32 %tmp.7.4, %buff.load.4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.12 = getelementptr i64* %a, i32 %seq_skip_offs.4, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.4 = load volatile i64* %a.addr.12, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.4, i32* %buff.addr.6, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.4 = add i9 %i2, 5, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.4.cast = zext i9 %i.2.4 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.7 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.4.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.5 = load i32* %buff.addr.7, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.13 = getelementptr i64* %a, i32 %buff.load.5, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.8 = load volatile i64* %a.addr.13, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp. = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.8, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.5 = sext i16 %tmp. to i32, !dbg !113     ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.5 = add nsw i32 %tmp.7.5, %buff.load.5, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.14 = getelementptr i64* %a, i32 %seq_skip_offs.5, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.5 = load volatile i64* %a.addr.14, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.5, i32* %buff.addr.7, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.5 = add i9 %i2, 6, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.5.cast = zext i9 %i.2.5 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.8 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.5.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.6 = load i32* %buff.addr.8, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.15 = getelementptr i64* %a, i32 %buff.load.6, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.9 = load volatile i64* %a.addr.15, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.3 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.9, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.6 = sext i16 %tmp.3 to i32, !dbg !113    ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.6 = add nsw i32 %tmp.7.6, %buff.load.6, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.16 = getelementptr i64* %a, i32 %seq_skip_offs.6, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.6 = load volatile i64* %a.addr.16, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.6, i32* %buff.addr.8, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.6 = add i9 %i2, 7, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.6.cast = zext i9 %i.2.6 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.9 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.6.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.7 = load i32* %buff.addr.9, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.17 = getelementptr i64* %a, i32 %buff.load.7, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.10 = load volatile i64* %a.addr.17, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.10 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.10, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.7 = sext i16 %tmp.10 to i32, !dbg !113   ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.7 = add nsw i32 %tmp.7.7, %buff.load.7, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.18 = getelementptr i64* %a, i32 %seq_skip_offs.7, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.7 = load volatile i64* %a.addr.18, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.7, i32* %buff.addr.9, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.7 = add i9 %i2, 8, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.7.cast = zext i9 %i.2.7 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.10 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.7.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.8 = load i32* %buff.addr.10, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.19 = getelementptr i64* %a, i32 %buff.load.8, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.11 = load volatile i64* %a.addr.19, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.11 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.11, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.8 = sext i16 %tmp.11 to i32, !dbg !113   ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.8 = add nsw i32 %tmp.7.8, %buff.load.8, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.20 = getelementptr i64* %a, i32 %seq_skip_offs.8, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.8 = load volatile i64* %a.addr.20, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.8, i32* %buff.addr.10, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.8 = add i9 %i2, 9, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.8.cast = zext i9 %i.2.8 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.11 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.8.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.9 = load i32* %buff.addr.11, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.21 = getelementptr i64* %a, i32 %buff.load.9, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.12 = load volatile i64* %a.addr.21, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.12 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.12, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.9 = sext i16 %tmp.12 to i32, !dbg !113   ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.9 = add nsw i32 %tmp.7.9, %buff.load.9, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.22 = getelementptr i64* %a, i32 %seq_skip_offs.9, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.9 = load volatile i64* %a.addr.22, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.9, i32* %buff.addr.11, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.9 = add i9 %i2, 10, !dbg !119              ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.9.cast = zext i9 %i.2.9 to i32, !dbg !119  ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.12 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.9.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.10 = load i32* %buff.addr.12, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.23 = getelementptr i64* %a, i32 %buff.load.10, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.13 = load volatile i64* %a.addr.23, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.13 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.13, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7. = sext i16 %tmp.13 to i32, !dbg !113    ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs. = add nsw i32 %tmp.7., %buff.load.10, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.24 = getelementptr i64* %a, i32 %seq_skip_offs., !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.10 = load volatile i64* %a.addr.24, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs., i32* %buff.addr.12, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2. = add i9 %i2, 11, !dbg !119               ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2..cast = zext i9 %i.2. to i32, !dbg !119    ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.13 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2..cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.11 = load i32* %buff.addr.13, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.25 = getelementptr i64* %a, i32 %buff.load.11, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.14 = load volatile i64* %a.addr.25, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.14 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.14, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.10 = sext i16 %tmp.14 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.10 = add nsw i32 %tmp.7.10, %buff.load.11, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.26 = getelementptr i64* %a, i32 %seq_skip_offs.10, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.11 = load volatile i64* %a.addr.26, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.10, i32* %buff.addr.13, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.10 = add i9 %i2, 12, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.10.cast = zext i9 %i.2.10 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.14 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.10.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.12 = load i32* %buff.addr.14, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.27 = getelementptr i64* %a, i32 %buff.load.12, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.15 = load volatile i64* %a.addr.27, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.15 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.15, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.11 = sext i16 %tmp.15 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.11 = add nsw i32 %tmp.7.11, %buff.load.12, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.28 = getelementptr i64* %a, i32 %seq_skip_offs.11, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.12 = load volatile i64* %a.addr.28, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.11, i32* %buff.addr.14, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.11 = add i9 %i2, 13, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.11.cast = zext i9 %i.2.11 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.15 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.11.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.13 = load i32* %buff.addr.15, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.29 = getelementptr i64* %a, i32 %buff.load.13, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.16 = load volatile i64* %a.addr.29, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.16 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.16, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.12 = sext i16 %tmp.16 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.12 = add nsw i32 %tmp.7.12, %buff.load.13, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.30 = getelementptr i64* %a, i32 %seq_skip_offs.12, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.13 = load volatile i64* %a.addr.30, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.12, i32* %buff.addr.15, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.12 = add i9 %i2, 14, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.12.cast = zext i9 %i.2.12 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.16 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.12.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.14 = load i32* %buff.addr.16, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.31 = getelementptr i64* %a, i32 %buff.load.14, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.17 = load volatile i64* %a.addr.31, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.17 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.17, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.13 = sext i16 %tmp.17 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.13 = add nsw i32 %tmp.7.13, %buff.load.14, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.32 = getelementptr i64* %a, i32 %seq_skip_offs.13, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.14 = load volatile i64* %a.addr.32, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.13, i32* %buff.addr.16, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.13 = add i9 %i2, 15, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.13.cast = zext i9 %i.2.13 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.17 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.13.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.15 = load i32* %buff.addr.17, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.33 = getelementptr i64* %a, i32 %buff.load.15, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.18 = load volatile i64* %a.addr.33, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.18 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.18, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.14 = sext i16 %tmp.18 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.14 = add nsw i32 %tmp.7.14, %buff.load.15, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.34 = getelementptr i64* %a, i32 %seq_skip_offs.14, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.15 = load volatile i64* %a.addr.34, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.14, i32* %buff.addr.17, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.14 = add i9 %i2, 16, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.14.cast = zext i9 %i.2.14 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.18 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.14.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.16 = load i32* %buff.addr.18, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.35 = getelementptr i64* %a, i32 %buff.load.16, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.19 = load volatile i64* %a.addr.35, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.19 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.19, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.15 = sext i16 %tmp.19 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.15 = add nsw i32 %tmp.7.15, %buff.load.16, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.36 = getelementptr i64* %a, i32 %seq_skip_offs.15, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.16 = load volatile i64* %a.addr.36, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.15, i32* %buff.addr.18, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.15 = add i9 %i2, 17, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.15.cast = zext i9 %i.2.15 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.19 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.15.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.17 = load i32* %buff.addr.19, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.37 = getelementptr i64* %a, i32 %buff.load.17, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.20 = load volatile i64* %a.addr.37, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.20 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.20, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.16 = sext i16 %tmp.20 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.16 = add nsw i32 %tmp.7.16, %buff.load.17, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.38 = getelementptr i64* %a, i32 %seq_skip_offs.16, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.17 = load volatile i64* %a.addr.38, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.16, i32* %buff.addr.19, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.16 = add i9 %i2, 18, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.16.cast = zext i9 %i.2.16 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.20 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.16.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.18 = load i32* %buff.addr.20, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.39 = getelementptr i64* %a, i32 %buff.load.18, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.21 = load volatile i64* %a.addr.39, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.21 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.21, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.17 = sext i16 %tmp.21 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.17 = add nsw i32 %tmp.7.17, %buff.load.18, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.40 = getelementptr i64* %a, i32 %seq_skip_offs.17, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.18 = load volatile i64* %a.addr.40, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.17, i32* %buff.addr.20, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.17 = add i9 %i2, 19, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.17.cast = zext i9 %i.2.17 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.21 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.17.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.19 = load i32* %buff.addr.21, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.41 = getelementptr i64* %a, i32 %buff.load.19, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.22 = load volatile i64* %a.addr.41, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.22 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.22, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.18 = sext i16 %tmp.22 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.18 = add nsw i32 %tmp.7.18, %buff.load.19, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.42 = getelementptr i64* %a, i32 %seq_skip_offs.18, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.19 = load volatile i64* %a.addr.42, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.18, i32* %buff.addr.21, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.18 = add i9 %i2, 20, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.18.cast = zext i9 %i.2.18 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.22 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.18.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.20 = load i32* %buff.addr.22, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.43 = getelementptr i64* %a, i32 %buff.load.20, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.23 = load volatile i64* %a.addr.43, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.23 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.23, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.19 = sext i16 %tmp.23 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.19 = add nsw i32 %tmp.7.19, %buff.load.20, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.44 = getelementptr i64* %a, i32 %seq_skip_offs.19, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.20 = load volatile i64* %a.addr.44, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.19, i32* %buff.addr.22, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.19 = add i9 %i2, 21, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.19.cast = zext i9 %i.2.19 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.23 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.19.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.21 = load i32* %buff.addr.23, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.45 = getelementptr i64* %a, i32 %buff.load.21, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.24 = load volatile i64* %a.addr.45, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.24 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.24, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.20 = sext i16 %tmp.24 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.20 = add nsw i32 %tmp.7.20, %buff.load.21, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.46 = getelementptr i64* %a, i32 %seq_skip_offs.20, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.21 = load volatile i64* %a.addr.46, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.20, i32* %buff.addr.23, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.20 = add i9 %i2, 22, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.20.cast = zext i9 %i.2.20 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.24 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.20.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.22 = load i32* %buff.addr.24, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.47 = getelementptr i64* %a, i32 %buff.load.22, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.25 = load volatile i64* %a.addr.47, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.25 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.25, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.21 = sext i16 %tmp.25 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.21 = add nsw i32 %tmp.7.21, %buff.load.22, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.48 = getelementptr i64* %a, i32 %seq_skip_offs.21, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.22 = load volatile i64* %a.addr.48, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.21, i32* %buff.addr.24, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.21 = add i9 %i2, 23, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.21.cast = zext i9 %i.2.21 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.25 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.21.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.23 = load i32* %buff.addr.25, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.49 = getelementptr i64* %a, i32 %buff.load.23, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.26 = load volatile i64* %a.addr.49, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.26 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.26, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.22 = sext i16 %tmp.26 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.22 = add nsw i32 %tmp.7.22, %buff.load.23, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.50 = getelementptr i64* %a, i32 %seq_skip_offs.22, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.23 = load volatile i64* %a.addr.50, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.22, i32* %buff.addr.25, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.22 = add i9 %i2, 24, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.22.cast = zext i9 %i.2.22 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.26 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.22.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.24 = load i32* %buff.addr.26, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.51 = getelementptr i64* %a, i32 %buff.load.24, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.27 = load volatile i64* %a.addr.51, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.27 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.27, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.23 = sext i16 %tmp.27 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.23 = add nsw i32 %tmp.7.23, %buff.load.24, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.52 = getelementptr i64* %a, i32 %seq_skip_offs.23, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.24 = load volatile i64* %a.addr.52, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.23, i32* %buff.addr.26, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.23 = add i9 %i2, 25, !dbg !119             ; [#uses=2 type=i9] [debug line = 89:46]
  %i.2.23.cast1 = zext i9 %i.2.23 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %exitcond. = icmp eq i9 %i.2.23, -12, !dbg !120 ; [#uses=1 type=i1] [debug line = 89:34]
  %6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9) ; [#uses=0 type=i32]
  br i1 %exitcond., label %7, label %.preheader.26, !dbg !120 ; [debug line = 89:34]

.preheader.26:                                    ; preds = %.preheader.0
  %buff.addr.27 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.23.cast1, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.25 = load i32* %buff.addr.27, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.53 = getelementptr i64* %a, i32 %buff.load.25, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.28 = load volatile i64* %a.addr.53, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.28 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.28, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.24 = sext i16 %tmp.28 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.24 = add nsw i32 %tmp.7.24, %buff.load.25, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.54 = getelementptr i64* %a, i32 %seq_skip_offs.24, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.25 = load volatile i64* %a.addr.54, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.24, i32* %buff.addr.27, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.24 = add i9 %i2, 26, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.24.cast = zext i9 %i.2.24 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.28 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.24.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.26 = load i32* %buff.addr.28, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.55 = getelementptr i64* %a, i32 %buff.load.26, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.29 = load volatile i64* %a.addr.55, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.29 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.29, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.25 = sext i16 %tmp.29 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.25 = add nsw i32 %tmp.7.25, %buff.load.26, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.56 = getelementptr i64* %a, i32 %seq_skip_offs.25, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.26 = load volatile i64* %a.addr.56, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.25, i32* %buff.addr.28, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.25 = add i9 %i2, 27, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.25.cast = zext i9 %i.2.25 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.29 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.25.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.27 = load i32* %buff.addr.29, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.57 = getelementptr i64* %a, i32 %buff.load.27, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.30 = load volatile i64* %a.addr.57, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.30 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.30, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.26 = sext i16 %tmp.30 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.26 = add nsw i32 %tmp.7.26, %buff.load.27, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.58 = getelementptr i64* %a, i32 %seq_skip_offs.26, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.27 = load volatile i64* %a.addr.58, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.26, i32* %buff.addr.29, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.26 = add i9 %i2, 28, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.26.cast = zext i9 %i.2.26 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.30 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.26.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.28 = load i32* %buff.addr.30, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.59 = getelementptr i64* %a, i32 %buff.load.28, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.31 = load volatile i64* %a.addr.59, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.31 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.31, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.27 = sext i16 %tmp.31 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.27 = add nsw i32 %tmp.7.27, %buff.load.28, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.60 = getelementptr i64* %a, i32 %seq_skip_offs.27, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.28 = load volatile i64* %a.addr.60, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.27, i32* %buff.addr.30, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.27 = add i9 %i2, 29, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.27.cast = zext i9 %i.2.27 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.31 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.27.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.29 = load i32* %buff.addr.31, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.61 = getelementptr i64* %a, i32 %buff.load.29, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.32 = load volatile i64* %a.addr.61, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.32 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.32, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.28 = sext i16 %tmp.32 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.28 = add nsw i32 %tmp.7.28, %buff.load.29, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.62 = getelementptr i64* %a, i32 %seq_skip_offs.28, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.29 = load volatile i64* %a.addr.62, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.28, i32* %buff.addr.31, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.28 = add i9 %i2, 30, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.28.cast = zext i9 %i.2.28 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.32 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.28.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.30 = load i32* %buff.addr.32, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.63 = getelementptr i64* %a, i32 %buff.load.30, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.33 = load volatile i64* %a.addr.63, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.33 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.33, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.29 = sext i16 %tmp.33 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.29 = add nsw i32 %tmp.7.29, %buff.load.30, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.64 = getelementptr i64* %a, i32 %seq_skip_offs.29, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.30 = load volatile i64* %a.addr.64, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.29, i32* %buff.addr.32, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.29 = add i9 %i2, 31, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.29.cast = zext i9 %i.2.29 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.33 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.29.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.31 = load i32* %buff.addr.33, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.65 = getelementptr i64* %a, i32 %buff.load.31, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.34 = load volatile i64* %a.addr.65, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.34 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.34, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.30 = sext i16 %tmp.34 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.30 = add nsw i32 %tmp.7.30, %buff.load.31, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.66 = getelementptr i64* %a, i32 %seq_skip_offs.30, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.31 = load volatile i64* %a.addr.66, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.30, i32* %buff.addr.33, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.30 = add i9 %i2, 32, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.30.cast = zext i9 %i.2.30 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.34 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.30.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.32 = load i32* %buff.addr.34, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.67 = getelementptr i64* %a, i32 %buff.load.32, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.35 = load volatile i64* %a.addr.67, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.35 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.35, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.31 = sext i16 %tmp.35 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.31 = add nsw i32 %tmp.7.31, %buff.load.32, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.68 = getelementptr i64* %a, i32 %seq_skip_offs.31, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.32 = load volatile i64* %a.addr.68, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.31, i32* %buff.addr.34, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.31 = add i9 %i2, 33, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.31.cast = zext i9 %i.2.31 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.35 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.31.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.33 = load i32* %buff.addr.35, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.69 = getelementptr i64* %a, i32 %buff.load.33, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.36 = load volatile i64* %a.addr.69, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.36 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.36, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.32 = sext i16 %tmp.36 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.32 = add nsw i32 %tmp.7.32, %buff.load.33, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.70 = getelementptr i64* %a, i32 %seq_skip_offs.32, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.33 = load volatile i64* %a.addr.70, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.32, i32* %buff.addr.35, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.32 = add i9 %i2, 34, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.32.cast = zext i9 %i.2.32 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.36 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.32.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.34 = load i32* %buff.addr.36, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.71 = getelementptr i64* %a, i32 %buff.load.34, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.37 = load volatile i64* %a.addr.71, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.37 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.37, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.33 = sext i16 %tmp.37 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.33 = add nsw i32 %tmp.7.33, %buff.load.34, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.72 = getelementptr i64* %a, i32 %seq_skip_offs.33, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.34 = load volatile i64* %a.addr.72, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.33, i32* %buff.addr.36, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.33 = add i9 %i2, 35, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.33.cast = zext i9 %i.2.33 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.37 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.33.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.35 = load i32* %buff.addr.37, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.73 = getelementptr i64* %a, i32 %buff.load.35, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.38 = load volatile i64* %a.addr.73, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.38 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.38, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.34 = sext i16 %tmp.38 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.34 = add nsw i32 %tmp.7.34, %buff.load.35, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.74 = getelementptr i64* %a, i32 %seq_skip_offs.34, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.35 = load volatile i64* %a.addr.74, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.34, i32* %buff.addr.37, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.34 = add i9 %i2, 36, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.34.cast = zext i9 %i.2.34 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.38 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.34.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.36 = load i32* %buff.addr.38, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.75 = getelementptr i64* %a, i32 %buff.load.36, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.39 = load volatile i64* %a.addr.75, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.39 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.39, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.35 = sext i16 %tmp.39 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.35 = add nsw i32 %tmp.7.35, %buff.load.36, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.76 = getelementptr i64* %a, i32 %seq_skip_offs.35, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.36 = load volatile i64* %a.addr.76, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.35, i32* %buff.addr.38, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.35 = add i9 %i2, 37, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.35.cast = zext i9 %i.2.35 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.39 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.35.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.37 = load i32* %buff.addr.39, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.77 = getelementptr i64* %a, i32 %buff.load.37, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.40 = load volatile i64* %a.addr.77, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.40 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.40, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.36 = sext i16 %tmp.40 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.36 = add nsw i32 %tmp.7.36, %buff.load.37, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.78 = getelementptr i64* %a, i32 %seq_skip_offs.36, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.37 = load volatile i64* %a.addr.78, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.36, i32* %buff.addr.39, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.36 = add i9 %i2, 38, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.36.cast = zext i9 %i.2.36 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.40 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.36.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.38 = load i32* %buff.addr.40, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.79 = getelementptr i64* %a, i32 %buff.load.38, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.41 = load volatile i64* %a.addr.79, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.41 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.41, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.37 = sext i16 %tmp.41 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.37 = add nsw i32 %tmp.7.37, %buff.load.38, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.80 = getelementptr i64* %a, i32 %seq_skip_offs.37, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.38 = load volatile i64* %a.addr.80, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.37, i32* %buff.addr.40, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.37 = add i9 %i2, 39, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.37.cast = zext i9 %i.2.37 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.41 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.37.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.39 = load i32* %buff.addr.41, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.81 = getelementptr i64* %a, i32 %buff.load.39, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.42 = load volatile i64* %a.addr.81, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.42 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.42, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.38 = sext i16 %tmp.42 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.38 = add nsw i32 %tmp.7.38, %buff.load.39, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.82 = getelementptr i64* %a, i32 %seq_skip_offs.38, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.39 = load volatile i64* %a.addr.82, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.38, i32* %buff.addr.41, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.38 = add i9 %i2, 40, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.38.cast = zext i9 %i.2.38 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.42 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.38.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.40 = load i32* %buff.addr.42, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.83 = getelementptr i64* %a, i32 %buff.load.40, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.43 = load volatile i64* %a.addr.83, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.43 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.43, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.39 = sext i16 %tmp.43 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.39 = add nsw i32 %tmp.7.39, %buff.load.40, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.84 = getelementptr i64* %a, i32 %seq_skip_offs.39, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.40 = load volatile i64* %a.addr.84, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.39, i32* %buff.addr.42, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.39 = add i9 %i2, 41, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.39.cast = zext i9 %i.2.39 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.43 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.39.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.41 = load i32* %buff.addr.43, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.85 = getelementptr i64* %a, i32 %buff.load.41, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.44 = load volatile i64* %a.addr.85, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.44 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.44, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.40 = sext i16 %tmp.44 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.40 = add nsw i32 %tmp.7.40, %buff.load.41, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.86 = getelementptr i64* %a, i32 %seq_skip_offs.40, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.41 = load volatile i64* %a.addr.86, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.40, i32* %buff.addr.43, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.40 = add i9 %i2, 42, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.40.cast = zext i9 %i.2.40 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.44 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.40.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.42 = load i32* %buff.addr.44, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.87 = getelementptr i64* %a, i32 %buff.load.42, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.45 = load volatile i64* %a.addr.87, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.45 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.45, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.41 = sext i16 %tmp.45 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.41 = add nsw i32 %tmp.7.41, %buff.load.42, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.88 = getelementptr i64* %a, i32 %seq_skip_offs.41, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.42 = load volatile i64* %a.addr.88, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.41, i32* %buff.addr.44, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.41 = add i9 %i2, 43, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.41.cast = zext i9 %i.2.41 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.45 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.41.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.43 = load i32* %buff.addr.45, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.89 = getelementptr i64* %a, i32 %buff.load.43, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.46 = load volatile i64* %a.addr.89, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.46 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.46, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.42 = sext i16 %tmp.46 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.42 = add nsw i32 %tmp.7.42, %buff.load.43, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.90 = getelementptr i64* %a, i32 %seq_skip_offs.42, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.43 = load volatile i64* %a.addr.90, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.42, i32* %buff.addr.45, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.42 = add i9 %i2, 44, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.42.cast = zext i9 %i.2.42 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.46 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.42.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.44 = load i32* %buff.addr.46, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.91 = getelementptr i64* %a, i32 %buff.load.44, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.47 = load volatile i64* %a.addr.91, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.47 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.47, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.43 = sext i16 %tmp.47 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.43 = add nsw i32 %tmp.7.43, %buff.load.44, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.92 = getelementptr i64* %a, i32 %seq_skip_offs.43, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.44 = load volatile i64* %a.addr.92, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.43, i32* %buff.addr.46, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.43 = add i9 %i2, 45, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.43.cast = zext i9 %i.2.43 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.47 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.43.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.45 = load i32* %buff.addr.47, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.93 = getelementptr i64* %a, i32 %buff.load.45, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.48 = load volatile i64* %a.addr.93, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.48 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.48, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.44 = sext i16 %tmp.48 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.44 = add nsw i32 %tmp.7.44, %buff.load.45, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.94 = getelementptr i64* %a, i32 %seq_skip_offs.44, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.45 = load volatile i64* %a.addr.94, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.44, i32* %buff.addr.47, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.44 = add i9 %i2, 46, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.44.cast = zext i9 %i.2.44 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.48 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.44.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.46 = load i32* %buff.addr.48, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.95 = getelementptr i64* %a, i32 %buff.load.46, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.49 = load volatile i64* %a.addr.95, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.49 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.49, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.45 = sext i16 %tmp.49 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.45 = add nsw i32 %tmp.7.45, %buff.load.46, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.96 = getelementptr i64* %a, i32 %seq_skip_offs.45, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.46 = load volatile i64* %a.addr.96, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.45, i32* %buff.addr.48, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.45 = add i9 %i2, 47, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.45.cast = zext i9 %i.2.45 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.49 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.45.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.47 = load i32* %buff.addr.49, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.97 = getelementptr i64* %a, i32 %buff.load.47, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.50 = load volatile i64* %a.addr.97, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.50 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.50, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.46 = sext i16 %tmp.50 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.46 = add nsw i32 %tmp.7.46, %buff.load.47, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.98 = getelementptr i64* %a, i32 %seq_skip_offs.46, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.47 = load volatile i64* %a.addr.98, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.46, i32* %buff.addr.49, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.46 = add i9 %i2, 48, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.46.cast = zext i9 %i.2.46 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.50 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.46.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.48 = load i32* %buff.addr.50, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.99 = getelementptr i64* %a, i32 %buff.load.48, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.51 = load volatile i64* %a.addr.99, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.51 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.51, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.47 = sext i16 %tmp.51 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.47 = add nsw i32 %tmp.7.47, %buff.load.48, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.100 = getelementptr i64* %a, i32 %seq_skip_offs.47, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.48 = load volatile i64* %a.addr.100, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.47, i32* %buff.addr.50, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.47 = add i9 %i2, 49, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  %i.2.47.cast = zext i9 %i.2.47 to i32, !dbg !119 ; [#uses=1 type=i32] [debug line = 89:46]
  %buff.addr.51 = getelementptr inbounds [500 x i32]* %buff, i32 0, i32 %i.2.47.cast, !dbg !113 ; [#uses=2 type=i32*] [debug line = 93:6]
  %buff.load.49 = load i32* %buff.addr.51, align 4, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.101 = getelementptr i64* %a, i32 %buff.load.49, !dbg !113 ; [#uses=1 type=i64*] [debug line = 93:6]
  %a.load.52 = load volatile i64* %a.addr.101, align 8, !dbg !113 ; [#uses=1 type=i64] [debug line = 93:6]
  %tmp.52 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %a.load.52, i32 32, i32 47), !dbg !113 ; [#uses=1 type=i16] [debug line = 93:6]
  %tmp.7.48 = sext i16 %tmp.52 to i32, !dbg !113  ; [#uses=1 type=i32] [debug line = 93:6]
  %seq_skip_offs.48 = add nsw i32 %tmp.7.48, %buff.load.49, !dbg !113 ; [#uses=2 type=i32] [debug line = 93:6]
  %a.addr.102 = getelementptr i64* %a, i32 %seq_skip_offs.48, !dbg !117 ; [#uses=1 type=i64*] [debug line = 95:6]
  %.new.49 = load volatile i64* %a.addr.102, align 8, !dbg !117 ; [#uses=0 type=i64] [debug line = 95:6]
  store i32 %seq_skip_offs.48, i32* %buff.addr.51, align 4, !dbg !118 ; [debug line = 97:6]
  %i.2.48 = add i9 %i2, 50, !dbg !119             ; [#uses=1 type=i9] [debug line = 89:46]
  br label %.preheader.0, !dbg !119               ; [debug line = 89:46]

; <label>:7                                       ; preds = %.preheader.0
  %j = add i5 %j1, 1, !dbg !121                   ; [#uses=1 type=i5] [debug line = 88:30]
  call void @llvm.dbg.value(metadata !{i5 %j}, i64 0, metadata !122), !dbg !121 ; [debug line = 88:30] [debug variable = j]
  br label %4, !dbg !121                          ; [debug line = 88:30]

; <label>:8                                       ; preds = %4
  ret void, !dbg !123                             ; [debug line = 101:1]
}

; [#uses=5]
declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

; [#uses=1]
declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

; [#uses=1]
declare void @_ssdm_op_SpecTopModule(...)

; [#uses=3]
declare i32 @_ssdm_op_SpecLoopTripCount(...)

; [#uses=2]
declare void @_ssdm_op_SpecInterface(...) nounwind

; [#uses=1]
declare void @_ssdm_op_SpecBitsMap(...)

; [#uses=53]
declare i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64, i32, i32) nounwind readnone

; [#uses=1]
declare void @_GLOBAL__I_a() nounwind

!llvm.dbg.cu = !{!0}
!opencl.kernels = !{!43, !50, !50}
!hls.encrypted.func = !{}
!llvm.map.gv = !{!56}

!0 = metadata !{i32 786449, i32 0, i32 4, metadata !"A:/COMP_ARCH/PYNQ_Projects/HLS_proj/proj_13_skiplist_prefetch/skip_list_prefetch/solution1/.autopilot/db/skip_list_prefetch.pragma.2.cpp", metadata !"A:\5CCOMP_ARCH\5CPYNQ_Projects\5CHLS_proj\5Cproj_13_skiplist_prefetch", metadata !"clang version 3.1 ", i1 true, i1 false, metadata !"", i32 0, metadata !1, metadata !1, metadata !3, metadata !32} ; [ DW_TAG_compile_unit ]
!1 = metadata !{metadata !2}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{metadata !5, metadata !24, metadata !31}
!5 = metadata !{i32 786478, i32 0, metadata !6, metadata !"skip_list_prefetch", metadata !"skip_list_prefetch", metadata !"_Z18skip_list_prefetchPV4node", metadata !6, i32 19, metadata !7, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, null, metadata !22, i32 20} ; [ DW_TAG_subprogram ]
!6 = metadata !{i32 786473, metadata !"skip_list_prefetch.cpp", metadata !"A:\5CCOMP_ARCH\5CPYNQ_Projects\5CHLS_proj\5Cproj_13_skiplist_prefetch", null} ; [ DW_TAG_file_type ]
!7 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !8, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!8 = metadata !{null, metadata !9}
!9 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !10} ; [ DW_TAG_pointer_type ]
!10 = metadata !{i32 786485, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !11} ; [ DW_TAG_volatile_type ]
!11 = metadata !{i32 786434, null, metadata !"node", metadata !6, i32 12, i64 64, i64 32, i32 0, i32 0, null, metadata !12, i32 0, null, null} ; [ DW_TAG_class_type ]
!12 = metadata !{metadata !13, metadata !16}
!13 = metadata !{i32 786445, metadata !11, metadata !"val", metadata !6, i32 13, i64 32, i64 32, i64 0, i32 0, metadata !14} ; [ DW_TAG_member ]
!14 = metadata !{i32 786454, null, metadata !"dat_typ", metadata !6, i32 5, i64 0, i64 0, i64 0, i32 0, metadata !15} ; [ DW_TAG_typedef ]
!15 = metadata !{i32 786468, null, metadata !"int", null, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!16 = metadata !{i32 786445, metadata !11, metadata !"offs", metadata !6, i32 14, i64 32, i64 16, i64 32, i32 0, metadata !17} ; [ DW_TAG_member ]
!17 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 32, i64 16, i32 0, i32 0, metadata !18, metadata !20, i32 0, i32 0} ; [ DW_TAG_array_type ]
!18 = metadata !{i32 786454, null, metadata !"dat_typ1", metadata !6, i32 6, i64 0, i64 0, i64 0, i32 0, metadata !19} ; [ DW_TAG_typedef ]
!19 = metadata !{i32 786468, null, metadata !"short", null, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!20 = metadata !{metadata !21}
!21 = metadata !{i32 786465, i64 0, i64 1}        ; [ DW_TAG_subrange_type ]
!22 = metadata !{metadata !23}
!23 = metadata !{i32 786468}                      ; [ DW_TAG_base_type ]
!24 = metadata !{i32 786478, i32 0, null, metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !"_ZN51ssdm_global_array_skip_list_prefetchpp0cppaplinecppC1Ev", metadata !6, i32 105, metadata !25, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, metadata !30, metadata !22, i32 105} ; [ DW_TAG_subprogram ]
!25 = metadata !{i32 786453, i32 0, metadata !"", i32 0, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !26, i32 0, i32 0} ; [ DW_TAG_subroutine_type ]
!26 = metadata !{null, metadata !27}
!27 = metadata !{i32 786447, i32 0, metadata !"", i32 0, i32 0, i64 32, i64 32, i64 0, i32 64, metadata !28} ; [ DW_TAG_pointer_type ]
!28 = metadata !{i32 786434, null, metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !6, i32 103, i64 8, i64 8, i32 0, i32 0, null, metadata !29, i32 0, null, null} ; [ DW_TAG_class_type ]
!29 = metadata !{metadata !30}
!30 = metadata !{i32 786478, i32 0, metadata !28, metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !"", metadata !6, i32 105, metadata !25, i1 false, i1 false, i32 0, i32 0, null, i32 256, i1 false, null, null, i32 0, metadata !22, i32 105} ; [ DW_TAG_subprogram ]
!31 = metadata !{i32 786478, i32 0, null, metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !"ssdm_global_array_skip_list_prefetchpp0cppaplinecpp", metadata !"_ZN51ssdm_global_array_skip_list_prefetchpp0cppaplinecppC2Ev", metadata !6, i32 105, metadata !25, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, null, null, metadata !30, metadata !22, i32 105} ; [ DW_TAG_subprogram ]
!32 = metadata !{metadata !33}
!33 = metadata !{metadata !34, metadata !36, metadata !34, metadata !36, metadata !34, metadata !37, metadata !38, metadata !40, metadata !41, metadata !42}
!34 = metadata !{i32 786484, i32 0, metadata !6, metadata !"buff_len", metadata !"buff_len", metadata !"buff_len", metadata !6, i32 10, metadata !35, i32 1, i32 1, i32 500} ; [ DW_TAG_variable ]
!35 = metadata !{i32 786470, null, metadata !"", null, i32 0, i64 0, i64 0, i64 0, i32 0, metadata !15} ; [ DW_TAG_const_type ]
!36 = metadata !{i32 786484, i32 0, metadata !6, metadata !"skip_intr", metadata !"skip_intr", metadata !"skip_intr", metadata !6, i32 9, metadata !35, i32 1, i32 1, i32 20} ; [ DW_TAG_variable ]
!37 = metadata !{i32 786484, i32 0, null, metadata !"ssdm_global_array_ins", metadata !"ssdm_global_array_ins", metadata !"_ZL21ssdm_global_array_ins", metadata !6, i32 111, metadata !28, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!38 = metadata !{i32 786484, i32 0, null, metadata !"_sys_nerr", metadata !"_sys_nerr", metadata !"", metadata !39, i32 157, metadata !15, i32 0, i32 1, null} ; [ DW_TAG_variable ]
!39 = metadata !{i32 786473, metadata !"C:/Xilinx/Vivado_HLS/2016.3/win64/tools/clang/bin/../lib/clang/3.1/../../../x86_64-w64-mingw32/include\5Cstdlib.h", metadata !"A:\5CCOMP_ARCH\5CPYNQ_Projects\5CHLS_proj\5Cproj_13_skiplist_prefetch", null} ; [ DW_TAG_file_type ]
!40 = metadata !{i32 786484, i32 0, null, metadata !"buff_len", metadata !"buff_len", metadata !"_ZL8buff_len", metadata !6, i32 10, metadata !35, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!41 = metadata !{i32 786484, i32 0, null, metadata !"skip_intr", metadata !"skip_intr", metadata !"_ZL9skip_intr", metadata !6, i32 9, metadata !35, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!42 = metadata !{i32 786484, i32 0, null, metadata !"n", metadata !"n", metadata !"_ZL1n", metadata !6, i32 8, metadata !35, i32 1, i32 1, null} ; [ DW_TAG_variable ]
!43 = metadata !{null, metadata !44, metadata !45, metadata !46, metadata !47, metadata !48, metadata !49}
!44 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!45 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!46 = metadata !{metadata !"kernel_arg_type", metadata !"struct node*"}
!47 = metadata !{metadata !"kernel_arg_type_qual", metadata !"volatile"}
!48 = metadata !{metadata !"kernel_arg_name", metadata !"a"}
!49 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!50 = metadata !{null, metadata !51, metadata !52, metadata !53, metadata !54, metadata !55, metadata !49}
!51 = metadata !{metadata !"kernel_arg_addr_space"}
!52 = metadata !{metadata !"kernel_arg_access_qual"}
!53 = metadata !{metadata !"kernel_arg_type"}
!54 = metadata !{metadata !"kernel_arg_type_qual"}
!55 = metadata !{metadata !"kernel_arg_name"}
!56 = metadata !{metadata !57, [1 x i32]* @llvm.global_ctors.0}
!57 = metadata !{metadata !58}
!58 = metadata !{i32 0, i32 31, metadata !59}
!59 = metadata !{metadata !60}
!60 = metadata !{metadata !"llvm.global_ctors.0", metadata !61, metadata !"", i32 0, i32 31}
!61 = metadata !{metadata !62}
!62 = metadata !{i32 0, i32 0, i32 1}
!63 = metadata !{metadata !64, metadata !67, metadata !72}
!64 = metadata !{i32 0, i32 31, metadata !65}
!65 = metadata !{metadata !66}
!66 = metadata !{metadata !"a.val", metadata !61, metadata !"int", i32 0, i32 31}
!67 = metadata !{i32 32, i32 47, metadata !68}
!68 = metadata !{metadata !69}
!69 = metadata !{metadata !"a.offs", metadata !70, metadata !"short", i32 0, i32 15}
!70 = metadata !{metadata !71}
!71 = metadata !{i32 0, i32 0, i32 2}
!72 = metadata !{i32 48, i32 63, metadata !73}
!73 = metadata !{metadata !74}
!74 = metadata !{metadata !"a.offs", metadata !75, metadata !"short", i32 0, i32 15}
!75 = metadata !{metadata !76}
!76 = metadata !{i32 1, i32 1, i32 2}
!77 = metadata !{i32 790544, metadata !78, metadata !"a", null, i32 19, metadata !79, i32 0, i32 0, metadata !81, metadata !85} ; [ DW_TAG_arg_variable_aggr_vec ]
!78 = metadata !{i32 786689, metadata !5, metadata !"a", metadata !6, i32 16777235, metadata !9, i32 0, i32 0} ; [ DW_TAG_arg_variable ]
!79 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 32, i64 0, i64 0, i32 0, metadata !80} ; [ DW_TAG_pointer_type ]
!80 = metadata !{i32 786468, null, metadata !"int64", null, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!81 = metadata !{i32 790531, metadata !78, metadata !"a.val", null, i32 19, metadata !82, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!82 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !83} ; [ DW_TAG_pointer_type ]
!83 = metadata !{i32 786438, null, metadata !"node", metadata !6, i32 12, i64 32, i64 32, i32 0, i32 0, null, metadata !84, i32 0, null, null} ; [ DW_TAG_class_field_type ]
!84 = metadata !{metadata !13}
!85 = metadata !{i32 790531, metadata !78, metadata !"a.offs", null, i32 19, metadata !86, i32 0, i32 0} ; [ DW_TAG_arg_variable_field ]
!86 = metadata !{i32 786447, null, metadata !"", null, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !87} ; [ DW_TAG_pointer_type ]
!87 = metadata !{i32 786438, null, metadata !"node", metadata !6, i32 12, i64 32, i64 32, i32 0, i32 0, null, metadata !88, i32 0, null, null} ; [ DW_TAG_class_field_type ]
!88 = metadata !{metadata !16}
!89 = metadata !{i32 19, i32 47, metadata !5, null}
!90 = metadata !{i32 22, i32 1, metadata !91, null}
!91 = metadata !{i32 786443, metadata !5, i32 20, i32 1, metadata !6, i32 0} ; [ DW_TAG_lexical_block ]
!92 = metadata !{i32 786688, metadata !91, metadata !"buff", metadata !6, i32 27, metadata !93, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!93 = metadata !{i32 786433, null, metadata !"", null, i32 0, i64 16000, i64 32, i32 0, i32 0, metadata !15, metadata !94, i32 0, i32 0} ; [ DW_TAG_array_type ]
!94 = metadata !{metadata !95}
!95 = metadata !{i32 786465, i64 0, i64 499}      ; [ DW_TAG_subrange_type ]
!96 = metadata !{i32 27, i32 7, metadata !91, null}
!97 = metadata !{i32 30, i32 3, metadata !91, null}
!98 = metadata !{i32 63, i32 5, metadata !99, null}
!99 = metadata !{i32 786443, metadata !100, i32 59, i32 24, metadata !6, i32 4} ; [ DW_TAG_lexical_block ]
!100 = metadata !{i32 786443, metadata !101, i32 59, i32 4, metadata !6, i32 3} ; [ DW_TAG_lexical_block ]
!101 = metadata !{i32 786443, metadata !102, i32 58, i32 30, metadata !6, i32 2} ; [ DW_TAG_lexical_block ]
!102 = metadata !{i32 786443, metadata !91, i32 58, i32 3, metadata !6, i32 1} ; [ DW_TAG_lexical_block ]
!103 = metadata !{i32 58, i32 14, metadata !102, null}
!104 = metadata !{i32 64, i32 5, metadata !99, null}
!105 = metadata !{i32 66, i32 5, metadata !99, null}
!106 = metadata !{i32 786688, metadata !91, metadata !"cum_offs[0]", null, i32 28, metadata !15, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!107 = metadata !{i32 786688, metadata !91, metadata !"cum_offs[1]", null, i32 28, metadata !15, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!108 = metadata !{i32 58, i32 26, metadata !102, null}
!109 = metadata !{i32 786688, metadata !102, metadata !"i", metadata !6, i32 58, metadata !15, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!110 = metadata !{i32 84, i32 3, metadata !91, null}
!111 = metadata !{i32 88, i32 15, metadata !112, null}
!112 = metadata !{i32 786443, metadata !91, i32 88, i32 3, metadata !6, i32 5} ; [ DW_TAG_lexical_block ]
!113 = metadata !{i32 93, i32 6, metadata !114, null}
!114 = metadata !{i32 786443, metadata !115, i32 89, i32 50, metadata !6, i32 8} ; [ DW_TAG_lexical_block ]
!115 = metadata !{i32 786443, metadata !116, i32 89, i32 4, metadata !6, i32 7} ; [ DW_TAG_lexical_block ]
!116 = metadata !{i32 786443, metadata !112, i32 88, i32 34, metadata !6, i32 6} ; [ DW_TAG_lexical_block ]
!117 = metadata !{i32 95, i32 6, metadata !114, null}
!118 = metadata !{i32 97, i32 6, metadata !114, null}
!119 = metadata !{i32 89, i32 46, metadata !115, null}
!120 = metadata !{i32 89, i32 34, metadata !115, null}
!121 = metadata !{i32 88, i32 30, metadata !112, null}
!122 = metadata !{i32 786688, metadata !112, metadata !"j", metadata !6, i32 88, metadata !15, i32 0, i32 0} ; [ DW_TAG_auto_variable ]
!123 = metadata !{i32 101, i32 1, metadata !91, null}
