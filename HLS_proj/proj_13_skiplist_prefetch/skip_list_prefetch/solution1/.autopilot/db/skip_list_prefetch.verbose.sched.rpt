

================================================================
== Vivado HLS Report for 'skip_list_prefetch'
================================================================
* Date:           Wed Jun 03 13:10:51 2020

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        skip_list_prefetch
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     11.19|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  11373|  11373|  11374|  11374|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  1601|  1601|        10|          8|          1|   200|    yes   |
        |- Loop 2  |  9760|  9760|        11|          1|          1|  9751|    yes   |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 10
  * Pipeline-1: initiation interval (II) = 1, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 32
* Pipeline: 2
  Pipeline-0: II = 8, D = 10, States = { 2 3 4 5 6 7 8 9 10 11 }
  Pipeline-1: II = 1, D = 11, States = { 21 22 23 24 25 26 27 28 29 30 31 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	12  / (exitcond2)
	4  / (!exitcond2)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	2  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	32  / (exitcond_flatten)
	22  / (!exitcond_flatten)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	21  / true
32 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: a_read (3)  [1/1] 1.00ns
:0  %a_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %a)

ST_1: a1 (4)  [1/1] 0.00ns
:1  %a1 = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %a_read, i32 3, i32 31)

ST_1: tmp (5)  [1/1] 0.00ns
:2  %tmp = zext i29 %a1 to i32

ST_1: tmp_cast6 (6)  [1/1] 0.00ns
:3  %tmp_cast6 = zext i29 %a1 to i31

ST_1: StgValue_37 (7)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i64* %A_BUS), !map !22

ST_1: StgValue_38 (8)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @skip_list_prefetch_s) nounwind

ST_1: buff (9)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:27
:6  %buff = alloca [200 x i32], align 4

ST_1: StgValue_40 (10)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i64* %A_BUS, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_41 (11)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface(i32 %a, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_42 (12)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:22
:9  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [4 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_43 (13)  [1/1] 1.57ns  loc: skip_list_prefetch.cpp:46
:10  br label %1


 <State 2>: 2.00ns
ST_2: i (15)  [1/1] 0.00ns
:0  %i = phi i8 [ 0, %0 ], [ %i_1, %2 ]

ST_2: exitcond2 (18)  [1/1] 2.00ns  loc: skip_list_prefetch.cpp:46
:3  %exitcond2 = icmp eq i8 %i, -56


 <State 3>: 11.19ns
ST_3: cum_offs (16)  [1/1] 0.00ns
:1  %cum_offs = phi i24 [ 0, %0 ], [ %cum_offs_1, %2 ]

ST_3: cum_offs_cast_cast (17)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:46
:2  %cum_offs_cast_cast = sext i24 %cum_offs to i31

ST_3: i_1 (19)  [1/1] 1.72ns  loc: skip_list_prefetch.cpp:46
:4  %i_1 = add i8 %i, 1

ST_3: StgValue_49 (20)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:46
:5  br i1 %exitcond2, label %3, label %2

ST_3: a2_sum (26)  [1/1] 2.44ns  loc: skip_list_prefetch.cpp:54
:4  %a2_sum = add i31 %tmp_cast6, %cum_offs_cast_cast

ST_3: a2_sum_cast (27)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:54
:5  %a2_sum_cast = sext i31 %a2_sum to i32

ST_3: A_BUS_addr_1 (28)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:54
:6  %A_BUS_addr_1 = getelementptr i64* %A_BUS, i32 %a2_sum_cast

ST_3: A_BUS_load_req (29)  [7/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 4>: 8.75ns
ST_4: A_BUS_load_req (29)  [6/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_4: A_BUS_load_1_req (37)  [7/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 5>: 8.75ns
ST_5: A_BUS_load_req (29)  [5/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_5: A_BUS_load_1_req (37)  [6/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 6>: 8.75ns
ST_6: A_BUS_load_req (29)  [4/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_6: A_BUS_load_1_req (37)  [5/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 7>: 8.75ns
ST_7: A_BUS_load_req (29)  [3/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_7: A_BUS_load_1_req (37)  [4/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 8>: 8.75ns
ST_8: A_BUS_load_req (29)  [2/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_8: A_BUS_load_1_req (37)  [3/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 9>: 8.75ns
ST_9: A_BUS_load_req (29)  [1/7] 8.75ns  loc: skip_list_prefetch.cpp:54
:7  %A_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)

ST_9: A_BUS_load_1_req (37)  [2/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 10>: 8.75ns
ST_10: A_BUS_addr_1_read (30)  [1/1] 8.75ns  loc: skip_list_prefetch.cpp:54
:8  %A_BUS_addr_1_read = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr_1)

ST_10: tmp_4 (31)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:54
:9  %tmp_4 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %A_BUS_addr_1_read, i32 32, i32 47)

ST_10: A_BUS_load_1_req (37)  [1/7] 8.75ns  loc: skip_list_prefetch.cpp:55
:15  %A_BUS_load_1_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_1, i32 1)


 <State 11>: 10.95ns
ST_11: i_cast2 (22)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:46
:0  %i_cast2 = zext i8 %i to i32

ST_11: empty (23)  [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 200, i64 200, i64 200)

ST_11: tmp_3 (24)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:46
:2  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_11: StgValue_72 (25)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:47
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_11: tmp_cast (32)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:54
:10  %tmp_cast = sext i16 %tmp_4 to i24

ST_11: tmp_1 (33)  [1/1] 2.20ns  loc: skip_list_prefetch.cpp:54
:11  %tmp_1 = add i24 %cum_offs, %tmp_cast

ST_11: tmp_1_cast (34)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:54
:12  %tmp_1_cast = sext i24 %tmp_1 to i32

ST_11: buff_addr (35)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:54
:13  %buff_addr = getelementptr inbounds [200 x i32]* %buff, i32 0, i32 %i_cast2

ST_11: StgValue_77 (36)  [1/1] 2.71ns  loc: skip_list_prefetch.cpp:54
:14  store i32 %tmp_1_cast, i32* %buff_addr, align 4

ST_11: A_BUS_addr_1_read_1 (38)  [1/1] 8.75ns  loc: skip_list_prefetch.cpp:55
:16  %A_BUS_addr_1_read_1 = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr_1)

ST_11: tmp_5 (39)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:55
:17  %tmp_5 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %A_BUS_addr_1_read_1, i32 48, i32 63)

ST_11: tmp_2_cast (40)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:55
:18  %tmp_2_cast = sext i16 %tmp_5 to i24

ST_11: cum_offs_1 (41)  [1/1] 2.20ns  loc: skip_list_prefetch.cpp:55
:19  %cum_offs_1 = add i24 %tmp_2_cast, %cum_offs

ST_11: empty_7 (42)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:57
:20  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_3)

ST_11: StgValue_83 (43)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:46
:21  br label %1


 <State 12>: 2.44ns
ST_12: a2_sum3 (45)  [1/1] 2.44ns  loc: skip_list_prefetch.cpp:58
:0  %a2_sum3 = add i31 %tmp_cast6, %cum_offs_cast_cast


 <State 13>: 8.75ns
ST_13: a2_sum3_cast (46)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:58
:1  %a2_sum3_cast = sext i31 %a2_sum3 to i32

ST_13: A_BUS_addr (47)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:58
:2  %A_BUS_addr = getelementptr i64* %A_BUS, i32 %a2_sum3_cast

ST_13: p_new_req (48)  [7/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 14>: 8.75ns
ST_14: p_new_req (48)  [6/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 15>: 8.75ns
ST_15: p_new_req (48)  [5/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 16>: 8.75ns
ST_16: p_new_req (48)  [4/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 17>: 8.75ns
ST_17: p_new_req (48)  [3/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 18>: 8.75ns
ST_18: p_new_req (48)  [2/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 19>: 8.75ns
ST_19: p_new_req (48)  [1/7] 8.75ns  loc: skip_list_prefetch.cpp:58
:3  %p_new_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr, i32 1)


 <State 20>: 8.75ns
ST_20: p_new (49)  [1/1] 8.75ns  loc: skip_list_prefetch.cpp:58
:4  %p_new = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr)

ST_20: StgValue_95 (50)  [1/1] 1.57ns  loc: skip_list_prefetch.cpp:61
:5  br label %.preheader


 <State 21>: 6.08ns
ST_21: indvar_flatten (52)  [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i14 [ 0, %3 ], [ %indvar_flatten_next, %.preheader.preheader ]

ST_21: i1 (53)  [1/1] 0.00ns
.preheader:1  %i1 = phi i8 [ 1, %3 ], [ %i_2, %.preheader.preheader ]

ST_21: exitcond_flatten (54)  [1/1] 2.21ns
.preheader:2  %exitcond_flatten = icmp eq i14 %indvar_flatten, -6633

ST_21: indvar_flatten_next (55)  [1/1] 1.96ns
.preheader:3  %indvar_flatten_next = add i14 %indvar_flatten, 1

ST_21: StgValue_100 (56)  [1/1] 0.00ns
.preheader:4  br i1 %exitcond_flatten, label %4, label %.preheader.preheader

ST_21: exitcond5 (59)  [1/1] 2.00ns  loc: skip_list_prefetch.cpp:62
.preheader.preheader:1  %exitcond5 = icmp eq i8 %i1, -56

ST_21: i1_mid2 (60)  [1/1] 1.37ns  loc: skip_list_prefetch.cpp:62
.preheader.preheader:2  %i1_mid2 = select i1 %exitcond5, i8 1, i8 %i1

ST_21: i1_cast1 (61)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:62
.preheader.preheader:3  %i1_cast1 = zext i8 %i1_mid2 to i32

ST_21: buff_addr_1 (64)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:6  %buff_addr_1 = getelementptr inbounds [200 x i32]* %buff, i32 0, i32 %i1_cast1

ST_21: buff_load (65)  [2/2] 2.71ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:7  %buff_load = load i32* %buff_addr_1, align 4

ST_21: i_2 (75)  [1/1] 1.72ns  loc: skip_list_prefetch.cpp:62
.preheader.preheader:17  %i_2 = add i8 %i1_mid2, 1


 <State 22>: 5.15ns
ST_22: buff_load (65)  [1/2] 2.71ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:7  %buff_load = load i32* %buff_addr_1, align 4

ST_22: a2_sum4 (66)  [1/1] 2.44ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:8  %a2_sum4 = add i32 %tmp, %buff_load


 <State 23>: 8.75ns
ST_23: A_BUS_addr_2 (67)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:9  %A_BUS_addr_2 = getelementptr i64* %A_BUS, i32 %a2_sum4

ST_23: A_BUS_load_2_req (68)  [7/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 24>: 8.75ns
ST_24: A_BUS_load_2_req (68)  [6/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 25>: 8.75ns
ST_25: A_BUS_load_2_req (68)  [5/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 26>: 8.75ns
ST_26: A_BUS_load_2_req (68)  [4/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 27>: 8.75ns
ST_27: A_BUS_load_2_req (68)  [3/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 28>: 8.75ns
ST_28: A_BUS_load_2_req (68)  [2/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 29>: 8.75ns
ST_29: A_BUS_load_2_req (68)  [1/7] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:10  %A_BUS_load_2_req = call i1 @_ssdm_op_ReadReq.m_axi.i64P(i64* %A_BUS_addr_2, i32 1)


 <State 30>: 8.75ns
ST_30: A_BUS_addr_2_read (69)  [1/1] 8.75ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:11  %A_BUS_addr_2_read = call i64 @_ssdm_op_Read.m_axi.volatile.i64P(i64* %A_BUS_addr_2)

ST_30: tmp_9 (70)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:12  %tmp_9 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %A_BUS_addr_2_read, i32 32, i32 47)


 <State 31>: 5.15ns
ST_31: empty_8 (58)  [1/1] 0.00ns
.preheader.preheader:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9751, i64 9751, i64 9751)

ST_31: tmp_8 (62)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:62
.preheader.preheader:4  %tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str7)

ST_31: StgValue_121 (63)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:63
.preheader.preheader:5  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_31: tmp_6 (71)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:13  %tmp_6 = sext i16 %tmp_9 to i32

ST_31: tmp_7 (72)  [1/1] 2.44ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:14  %tmp_7 = add nsw i32 %buff_load, %tmp_6

ST_31: StgValue_124 (73)  [1/1] 2.71ns  loc: skip_list_prefetch.cpp:67
.preheader.preheader:15  store i32 %tmp_7, i32* %buff_addr_1, align 4

ST_31: empty_9 (74)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:68
.preheader.preheader:16  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str7, i32 %tmp_8)

ST_31: StgValue_126 (76)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:62
.preheader.preheader:18  br label %.preheader


 <State 32>: 0.00ns
ST_32: StgValue_127 (78)  [1/1] 0.00ns  loc: skip_list_prefetch.cpp:70
:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', skip_list_prefetch.cpp:46) [15]  (1.57 ns)

 <State 2>: 2ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', skip_list_prefetch.cpp:46) [15]  (0 ns)
	'icmp' operation ('exitcond2', skip_list_prefetch.cpp:46) [18]  (2 ns)

 <State 3>: 11.2ns
The critical path consists of the following:
	'phi' operation ('cum_offs') with incoming values : ('cum_offs', skip_list_prefetch.cpp:55) [16]  (0 ns)
	'add' operation ('a2_sum', skip_list_prefetch.cpp:54) [26]  (2.44 ns)
	'getelementptr' operation ('A_BUS_addr_1', skip_list_prefetch.cpp:54) [28]  (0 ns)
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:54) [29]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skip_list_prefetch.cpp:54) [30]  (8.75 ns)

 <State 11>: 10.9ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skip_list_prefetch.cpp:55) [38]  (8.75 ns)
	'add' operation ('cum_offs', skip_list_prefetch.cpp:55) [41]  (2.2 ns)

 <State 12>: 2.44ns
The critical path consists of the following:
	'add' operation ('a2_sum3', skip_list_prefetch.cpp:58) [45]  (2.44 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr', skip_list_prefetch.cpp:58) [47]  (0 ns)
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:58) [48]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skip_list_prefetch.cpp:58) [49]  (8.75 ns)

 <State 21>: 6.08ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', skip_list_prefetch.cpp:62) [53]  (0 ns)
	'icmp' operation ('exitcond5', skip_list_prefetch.cpp:62) [59]  (2 ns)
	'select' operation ('i1_mid2', skip_list_prefetch.cpp:62) [60]  (1.37 ns)
	'getelementptr' operation ('buff_addr_1', skip_list_prefetch.cpp:67) [64]  (0 ns)
	'load' operation ('buff_load', skip_list_prefetch.cpp:67) on array 'buff', skip_list_prefetch.cpp:27 [65]  (2.71 ns)

 <State 22>: 5.15ns
The critical path consists of the following:
	'load' operation ('buff_load', skip_list_prefetch.cpp:67) on array 'buff', skip_list_prefetch.cpp:27 [65]  (2.71 ns)
	'add' operation ('a2_sum4', skip_list_prefetch.cpp:67) [66]  (2.44 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('A_BUS_addr_2', skip_list_prefetch.cpp:67) [67]  (0 ns)
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 26>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 27>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 28>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 29>: 8.75ns
The critical path consists of the following:
	bus request on port 'A_BUS' (skip_list_prefetch.cpp:67) [68]  (8.75 ns)

 <State 30>: 8.75ns
The critical path consists of the following:
	bus read on port 'A_BUS' (skip_list_prefetch.cpp:67) [69]  (8.75 ns)

 <State 31>: 5.15ns
The critical path consists of the following:
	'add' operation ('tmp_7', skip_list_prefetch.cpp:67) [72]  (2.44 ns)
	'store' operation (skip_list_prefetch.cpp:67) of variable 'tmp_7', skip_list_prefetch.cpp:67 on array 'buff', skip_list_prefetch.cpp:27 [73]  (2.71 ns)

 <State 32>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
