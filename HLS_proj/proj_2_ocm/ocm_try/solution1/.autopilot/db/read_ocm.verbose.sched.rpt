

================================================================
== Vivado HLS Report for 'read_ocm'
================================================================
* Date:           Thu Mar 26 12:07:16 2020

* Version:        2016.3 (Build 1682563 on Mon Oct 10 19:41:59 MDT 2016)
* Project:        ocm_try
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|   15|    2|   16|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 16
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (tmp)
	16  / (!tmp)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
* FSM state operations: 

 <State 1>: 5.09ns
ST_1: start_read (4)  [1/1] 1.00ns
:0  %start_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %start)

ST_1: source_read (5)  [1/1] 1.00ns
:1  %source_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %source)

ST_1: source1 (6)  [1/1] 0.00ns
:2  %source1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %source_read, i32 2, i32 31)

ST_1: tmp_2 (7)  [1/1] 0.00ns
:3  %tmp_2 = zext i30 %source1 to i32

ST_1: SOURCE_BUS_addr (8)  [1/1] 0.00ns
:4  %SOURCE_BUS_addr = getelementptr i32* %SOURCE_BUS, i32 %tmp_2

ST_1: StgValue_22 (9)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap(i32* %SOURCE_BUS), !map !9

ST_1: StgValue_23 (10)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %start) nounwind, !map !15

ST_1: StgValue_24 (11)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !21

ST_1: StgValue_25 (12)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @read_ocm_str) nounwind

ST_1: StgValue_26 (13)  [1/1] 0.00ns  loc: read_ocm.cpp:6
:9  call void (...)* @_ssdm_op_SpecInterface(i32* %SOURCE_BUS, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [11 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_27 (14)  [1/1] 0.00ns  loc: read_ocm.cpp:6
:10  call void (...)* @_ssdm_op_SpecInterface(i32 %source, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_28 (15)  [1/1] 0.00ns  loc: read_ocm.cpp:8
:11  call void (...)* @_ssdm_op_SpecInterface(i32 %start, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str5, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: StgValue_29 (16)  [1/1] 0.00ns  loc: read_ocm.cpp:10
:12  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: tmp (17)  [1/1] 2.52ns  loc: read_ocm.cpp:12
:13  %tmp = icmp eq i32 %start_read, 1

ST_1: StgValue_31 (18)  [1/1] 1.57ns  loc: read_ocm.cpp:12
:14  br i1 %tmp, label %1, label %._crit_edge


 <State 2>: 8.75ns
ST_2: SOURCE_BUS_load_req (20)  [7/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 3>: 8.75ns
ST_3: SOURCE_BUS_load_req (20)  [6/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 4>: 8.75ns
ST_4: SOURCE_BUS_load_req (20)  [5/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 5>: 8.75ns
ST_5: SOURCE_BUS_load_req (20)  [4/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 6>: 8.75ns
ST_6: SOURCE_BUS_load_req (20)  [3/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 7>: 8.75ns
ST_7: SOURCE_BUS_load_req (20)  [2/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 8>: 8.75ns
ST_8: SOURCE_BUS_load_req (20)  [1/7] 8.75ns  loc: read_ocm.cpp:15
:0  %SOURCE_BUS_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 9>: 8.75ns
ST_9: SOURCE_BUS_addr_read (21)  [1/1] 8.75ns  loc: read_ocm.cpp:15
:1  %SOURCE_BUS_addr_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %SOURCE_BUS_addr)


 <State 10>: 8.75ns
ST_10: tmp_1 (22)  [1/1] 2.44ns  loc: read_ocm.cpp:15
:2  %tmp_1 = add nsw i32 %SOURCE_BUS_addr_read, 10

ST_10: SOURCE_BUS_addr_req (23)  [1/1] 8.75ns  loc: read_ocm.cpp:15
:3  %SOURCE_BUS_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 1)


 <State 11>: 8.75ns
ST_11: StgValue_42 (24)  [1/1] 8.75ns  loc: read_ocm.cpp:15
:4  call void @_ssdm_op_Write.m_axi.i32P(i32* %SOURCE_BUS_addr, i32 %tmp_1, i4 -1)


 <State 12>: 8.75ns
ST_12: SOURCE_BUS_addr_resp (25)  [5/5] 8.75ns  loc: read_ocm.cpp:15
:5  %SOURCE_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %SOURCE_BUS_addr)


 <State 13>: 8.75ns
ST_13: SOURCE_BUS_addr_resp (25)  [4/5] 8.75ns  loc: read_ocm.cpp:15
:5  %SOURCE_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %SOURCE_BUS_addr)


 <State 14>: 8.75ns
ST_14: SOURCE_BUS_addr_resp (25)  [3/5] 8.75ns  loc: read_ocm.cpp:15
:5  %SOURCE_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %SOURCE_BUS_addr)


 <State 15>: 8.75ns
ST_15: SOURCE_BUS_addr_resp (25)  [2/5] 8.75ns  loc: read_ocm.cpp:15
:5  %SOURCE_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %SOURCE_BUS_addr)


 <State 16>: 8.75ns
ST_16: SOURCE_BUS_addr_resp (25)  [1/5] 8.75ns  loc: read_ocm.cpp:15
:5  %SOURCE_BUS_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %SOURCE_BUS_addr)

ST_16: StgValue_48 (26)  [1/1] 1.57ns  loc: read_ocm.cpp:16
:6  br label %._crit_edge

ST_16: p_0 (28)  [1/1] 0.00ns  loc: read_ocm.cpp:15
._crit_edge:0  %p_0 = phi i32 [ %tmp_1, %1 ], [ -1, %0 ]

ST_16: StgValue_50 (29)  [1/1] 0.00ns  loc: read_ocm.cpp:21
._crit_edge:1  ret i32 %p_0



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 5.09ns
The critical path consists of the following:
	s_axi read on port 'start' [4]  (1 ns)
	'icmp' operation ('tmp', read_ocm.cpp:12) [17]  (2.52 ns)
	multiplexor before 'phi' operation ('p_0', read_ocm.cpp:15) with incoming values : ('tmp_1', read_ocm.cpp:15) [28]  (1.57 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [20]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus read on port 'SOURCE_BUS' (read_ocm.cpp:15) [21]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus request on port 'SOURCE_BUS' (read_ocm.cpp:15) [23]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus write on port 'SOURCE_BUS' (read_ocm.cpp:15) [24]  (8.75 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus access on port 'SOURCE_BUS' (read_ocm.cpp:15) [25]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus access on port 'SOURCE_BUS' (read_ocm.cpp:15) [25]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus access on port 'SOURCE_BUS' (read_ocm.cpp:15) [25]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus access on port 'SOURCE_BUS' (read_ocm.cpp:15) [25]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus access on port 'SOURCE_BUS' (read_ocm.cpp:15) [25]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
